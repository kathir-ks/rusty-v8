// Copyright 2021 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

pub mod loong64_instruction_codes {

    /// LOONG64-specific opcodes that specify which assembly sequence to emit.
    /// Most opcodes specify a single instruction.
    
    macro_rules! generate_opcodes {
        ($vis:vis enum Opcode { $($name:ident,)* }) => {
            #[derive(Debug, Copy, Clone, PartialEq, Eq)]
            $vis enum Opcode {
                $($name,)*
            }
        }
    }

    generate_opcodes! {
        pub enum Opcode {
            Loong64Ld_b,
            Loong64Ld_bu,
            Loong64St_b,
            Loong64Ld_h,
            Loong64Ld_hu,
            Loong64St_h,
            Loong64Ld_w,
            Loong64Ld_wu,
            Loong64St_w,
            Loong64Ld_d,
            Loong64St_d,
            Loong64LoadDecompressTaggedSigned,
            Loong64LoadDecompressTagged,
            Loong64LoadDecompressProtected,
            Loong64StoreCompressTagged,
            Loong64Fld_s,
            Loong64Fst_s,
            Loong64Fld_d,
            Loong64Fst_d,
            Loong64LoadLane,
            Loong64StoreLane,
            Loong64S128LoadSplat,
            Loong64S128Load8x8S,
            Loong64S128Load8x8U,
            Loong64S128Load16x4S,
            Loong64S128Load16x4U,
            Loong64S128Load32x2S,
            Loong64S128Load32x2U,
            Loong64Word64AtomicLoadUint32,
            Loong64Word64AtomicLoadUint64,
            Loong64Word64AtomicStoreWord64,
            Loong64Add_d,
            Loong64Add_w,
            Loong64AddOvf_d,
            Loong64Sub_d,
            Loong64Sub_w,
            Loong64SubOvf_d,
            Loong64Mul_d,
            Loong64MulOvf_w,
            Loong64MulOvf_d,
            Loong64Mulh_d,
            Loong64Mulh_w,
            Loong64Mulh_du,
            Loong64Mulh_wu,
            Loong64Mul_w,
            Loong64Div_d,
            Loong64Div_w,
            Loong64Div_du,
            Loong64Div_wu,
            Loong64Mod_d,
            Loong64Mod_w,
            Loong64Mod_du,
            Loong64Mod_wu,
            Loong64And,
            Loong64And32,
            Loong64Or,
            Loong64Or32,
            Loong64Nor,
            Loong64Nor32,
            Loong64Xor,
            Loong64Xor32,
            Loong64Alsl_d,
            Loong64Alsl_w,
            Loong64Sll_d,
            Loong64Sll_w,
            Loong64Srl_d,
            Loong64Srl_w,
            Loong64Sra_d,
            Loong64Sra_w,
            Loong64Rotr_d,
            Loong64Rotr_w,
            Loong64Bstrpick_d,
            Loong64Bstrpick_w,
            Loong64Bstrins_d,
            Loong64Bstrins_w,
            Loong64ByteSwap64,
            Loong64ByteSwap32,
            Loong64Clz_d,
            Loong64Clz_w,
            Loong64Mov,
            Loong64Tst,
            Loong64Cmp32,
            Loong64Cmp64,
            Loong64Float32Cmp,
            Loong64Float32Add,
            Loong64Float32Sub,
            Loong64Float32Mul,
            Loong64Float32Div,
            Loong64Float32Abs,
            Loong64Float32Neg,
            Loong64Float32Sqrt,
            Loong64Float32Max,
            Loong64Float32Min,
            Loong64Float32ToFloat64,
            Loong64Float32RoundDown,
            Loong64Float32RoundUp,
            Loong64Float32RoundTruncate,
            Loong64Float32RoundTiesEven,
            Loong64Float32ToInt32,
            Loong64Float32ToInt64,
            Loong64Float32ToUint32,
            Loong64Float32ToUint64,
            Loong64Float64Cmp,
            Loong64Float64Add,
            Loong64Float64Sub,
            Loong64Float64Mul,
            Loong64Float64Div,
            Loong64Float64Mod,
            Loong64Float64Abs,
            Loong64Float64Neg,
            Loong64Float64Sqrt,
            Loong64Float64Max,
            Loong64Float64Min,
            Loong64Float64ToFloat32,
            Loong64Float64RoundDown,
            Loong64Float64RoundUp,
            Loong64Float64RoundTruncate,
            Loong64Float64RoundTiesEven,
            Loong64Float64ToInt32,
            Loong64Float64ToInt64,
            Loong64Float64ToUint32,
            Loong64Float64ToUint64,
            Loong64Int32ToFloat32,
            Loong64Int32ToFloat64,
            Loong64Int64ToFloat32,
            Loong64Int64ToFloat64,
            Loong64Uint32ToFloat32,
            Loong64Uint32ToFloat64,
            Loong64Uint64ToFloat32,
            Loong64Uint64ToFloat64,
            Loong64Float64ExtractLowWord32,
            Loong64Float64ExtractHighWord32,
            Loong64Float64FromWord32Pair,
            Loong64Float64InsertLowWord32,
            Loong64Float64InsertHighWord32,
            Loong64BitcastDL,
            Loong64BitcastLD,
            Loong64Float64SilenceNaN,
            Loong64LoadDecodeSandboxedPointer,
            Loong64StoreEncodeSandboxedPointer,
            Loong64StoreIndirectPointer,
            Loong64Push,
            Loong64Peek,
            Loong64Poke,
            Loong64StackClaim,
            Loong64Ext_w_b,
            Loong64Ext_w_h,
            Loong64Dbar,
            Loong64S128Const,
            Loong64S128Zero,
            Loong64S128AllOnes,
            Loong64I32x4Splat,
            Loong64I32x4ExtractLane,
            Loong64I32x4ReplaceLane,
            Loong64I32x4Add,
            Loong64I32x4Sub,
            Loong64F64x2Abs,
            Loong64F64x2Neg,
            Loong64F32x4Splat,
            Loong64F32x4ExtractLane,
            Loong64F32x4ReplaceLane,
            Loong64F32x4SConvertI32x4,
            Loong64F32x4UConvertI32x4,
            Loong64I32x4Mul,
            Loong64I32x4MaxS,
            Loong64I32x4MinS,
            Loong64I32x4Eq,
            Loong64I32x4Ne,
            Loong64I32x4Shl,
            Loong64I32x4ShrS,
            Loong64I32x4ShrU,
            Loong64I32x4MaxU,
            Loong64I32x4MinU,
            Loong64F64x2Sqrt,
            Loong64F64x2Add,
            Loong64F64x2Sub,
            Loong64F64x2Mul,
            Loong64F64x2Div,
            Loong64F64x2Min,
            Loong64F64x2Max,
            Loong64F64x2Eq,
            Loong64F64x2Ne,
            Loong64F64x2Lt,
            Loong64F64x2Le,
            Loong64F64x2Splat,
            Loong64F64x2ExtractLane,
            Loong64F64x2ReplaceLane,
            Loong64F64x2Pmin,
            Loong64F64x2Pmax,
            Loong64F64x2Ceil,
            Loong64F64x2Floor,
            Loong64F64x2Trunc,
            Loong64F64x2NearestInt,
            Loong64F64x2ConvertLowI32x4S,
            Loong64F64x2ConvertLowI32x4U,
            Loong64F64x2PromoteLowF32x4,
            Loong64F64x2RelaxedMin,
            Loong64F64x2RelaxedMax,
            Loong64I64x2Splat,
            Loong64I64x2ExtractLane,
            Loong64I64x2ReplaceLane,
            Loong64I64x2Add,
            Loong64I64x2Sub,
            Loong64I64x2Mul,
            Loong64I64x2Neg,
            Loong64I64x2Shl,
            Loong64I64x2ShrS,
            Loong64I64x2ShrU,
            Loong64I64x2BitMask,
            Loong64I64x2Eq,
            Loong64I64x2Ne,
            Loong64I64x2GtS,
            Loong64I64x2GeS,
            Loong64I64x2Abs,
            Loong64I64x2SConvertI32x4Low,
            Loong64I64x2SConvertI32x4High,
            Loong64I64x2UConvertI32x4Low,
            Loong64I64x2UConvertI32x4High,
            Loong64ExtMulLow,
            Loong64ExtMulHigh,
            Loong64ExtAddPairwise,
            Loong64F32x4Abs,
            Loong64F32x4Neg,
            Loong64F32x4Sqrt,
            Loong64F32x4Add,
            Loong64F32x4Sub,
            Loong64F32x4Mul,
            Loong64F32x4Div,
            Loong64F32x4Max,
            Loong64F32x4Min,
            Loong64F32x4Eq,
            Loong64F32x4Ne,
            Loong64F32x4Lt,
            Loong64F32x4Le,
            Loong64F32x4Pmin,
            Loong64F32x4Pmax,
            Loong64F32x4Ceil,
            Loong64F32x4Floor,
            Loong64F32x4Trunc,
            Loong64F32x4NearestInt,
            Loong64F32x4DemoteF64x2Zero,
            Loong64F32x4RelaxedMin,
            Loong64F32x4RelaxedMax,
            Loong64I32x4SConvertF32x4,
            Loong64I32x4UConvertF32x4,
            Loong64I32x4Neg,
            Loong64I32x4GtS,
            Loong64I32x4GeS,
            Loong64I32x4GtU,
            Loong64I32x4GeU,
            Loong64I32x4Abs,
            Loong64I32x4BitMask,
            Loong64I32x4DotI16x8S,
            Loong64I32x4TruncSatF64x2SZero,
            Loong64I32x4TruncSatF64x2UZero,
            Loong64I32x4RelaxedTruncF32x4S,
            Loong64I32x4RelaxedTruncF32x4U,
            Loong64I32x4RelaxedTruncF64x2SZero,
            Loong64I32x4RelaxedTruncF64x2UZero,
            Loong64I16x8Splat,
            Loong64I16x8ExtractLaneU,
            Loong64I16x8ExtractLaneS,
            Loong64I16x8ReplaceLane,
            Loong64I16x8Neg,
            Loong64I16x8Shl,
            Loong64I16x8ShrS,
            Loong64I16x8ShrU,
            Loong64I16x8Add,
            Loong64I16x8AddSatS,
            Loong64I16x8Sub,
            Loong64I16x8SubSatS,
            Loong64I16x8Mul,
            Loong64I16x8MaxS,
            Loong64I16x8MinS,
            Loong64I16x8Eq,
            Loong64I16x8Ne,
            Loong64I16x8GtS,
            Loong64I16x8GeS,
            Loong64I16x8AddSatU,
            Loong64I16x8SubSatU,
            Loong64I16x8MaxU,
            Loong64I16x8MinU,
            Loong64I16x8GtU,
            Loong64I16x8GeU,
            Loong64I16x8RoundingAverageU,
            Loong64I16x8Abs,
            Loong64I16x8BitMask,
            Loong64I16x8Q15MulRSatS,
            Loong64I16x8RelaxedQ15MulRS,
            Loong64I8x16Splat,
            Loong64I8x16ExtractLaneU,
            Loong64I8x16ExtractLaneS,
            Loong64I8x16ReplaceLane,
            Loong64I8x16Neg,
            Loong64I8x16Shl,
            Loong64I8x16ShrS,
            Loong64I8x16Add,
            Loong64I8x16AddSatS,
            Loong64I8x16Sub,
            Loong64I8x16SubSatS,
            Loong64I8x16MaxS,
            Loong64I8x16MinS,
            Loong64I8x16Eq,
            Loong64I8x16Ne,
            Loong64I8x16GtS,
            Loong64I8x16GeS,
            Loong64I8x16ShrU,
            Loong64I8x16AddSatU,
            Loong64I8x16SubSatU,
            Loong64I8x16MaxU,
            Loong64I8x16MinU,
            Loong64I8x16GtU,
            Loong64I8x16GeU,
            Loong64I8x16RoundingAverageU,
            Loong64I8x16Abs,
            Loong64I8x16Popcnt,
            Loong64I8x16BitMask,
            Loong64S128And,
            Loong64S128Or,
            Loong64S128Xor,
            Loong64S128Not,
            Loong64S128Select,
            Loong64S128AndNot,
            Loong64I64x2AllTrue,
            Loong64I32x4AllTrue,
            Loong64I16x8AllTrue,
            Loong64I8x16AllTrue,
            Loong64V128AnyTrue,
            Loong64S32x4InterleaveRight,
            Loong64S32x4InterleaveLeft,
            Loong64S32x4PackEven,
            Loong64S32x4PackOdd,
            Loong64S32x4InterleaveEven,
            Loong64S32x4InterleaveOdd,
            Loong64S32x4Shuffle,
            Loong64S16x8InterleaveRight,
            Loong64S16x8InterleaveLeft,
            Loong64S16x8PackEven,
            Loong64S16x8PackOdd,
            Loong64S16x8InterleaveEven,
            Loong64S16x8InterleaveOdd,
            Loong64S16x4Reverse,
            Loong64S16x2Reverse,
            Loong64S8x16InterleaveRight,
            Loong64S8x16InterleaveLeft,
            Loong64S8x16PackEven,
            Loong64S8x16PackOdd,
            Loong64S8x16InterleaveEven,
            Loong64S8x16InterleaveOdd,
            Loong64I8x16Shuffle,
            Loong64I8x16Swizzle,
            Loong64S8x16Concat,
            Loong64S8x8Reverse,
            Loong64S8x4Reverse,
            Loong64S8x2Reverse,
            Loong64S128Load32Zero,
            Loong64S128Load64Zero,
            Loong64I32x4SConvertI16x8Low,
            Loong64I32x4SConvertI16x8High,
            Loong64I32x4UConvertI16x8Low,
            Loong64I32x4UConvertI16x8High,
            Loong64I16x8SConvertI8x16Low,
            Loong64I16x8SConvertI8x16High,
            Loong64I16x8SConvertI32x4,
            Loong64I16x8UConvertI32x4,
            Loong64I16x8UConvertI8x16Low,
            Loong64I16x8UConvertI8x16High,
            Loong64I8x16SConvertI16x8,
            Loong64I8x16UConvertI16x8,
            Loong64AtomicLoadDecompressTaggedSigned,
            Loong64AtomicLoadDecompressTagged,
            Loong64AtomicStoreCompressTagged,
            Loong64Word64AtomicAddUint64,
            Loong64Word64AtomicSubUint64,
            Loong64Word64AtomicAndUint64,
            Loong64Word64AtomicOrUint64,
            Loong64Word64AtomicXorUint64,
            Loong64Word64AtomicExchangeUint64,
            Loong64Word64AtomicCompareExchangeUint64,
        }
    }

    /// Addressing modes represent the "shape" of inputs to an instruction.
    /// Many instructions support multiple addressing modes. Addressing modes
    /// are encoded into the InstructionCode of the instruction and tell the
    /// code generator after register allocation which assembler method to call.
    ///
    /// We use the following local notation for addressing modes:
    ///
    /// R = register
    /// O = register or stack slot
    /// D = double register
    /// I = immediate (handle, external, int32)
    /// MRI = [register + immediate]
    /// MRR = [register + register]
    macro_rules! generate_addressing_modes {
        ($vis:vis enum AddressingMode { $($name:ident,)* }) => {
            #[derive(Debug, Copy, Clone, PartialEq, Eq)]
            $vis enum AddressingMode {
                $($name,)*
            }
        }
    }

    generate_addressing_modes! {
        pub enum AddressingMode {
            MRI,  // [%r0 + K]
            MRR,  // [%r0 + %r1]
            Root, // [%rr + K]
        }
    }
}