// Converted from V8 C++ source files:
// Header: parser.h
// Implementation: parser.cc
// 
// This file combines both header and implementation into idiomatic Rust code.

#![allow(dead_code)]
#![allow(unused_variables)]

use std::cell::RefCell;
use std::rc::Rc;

//use crate::ast::ast::{ AstRawString, FunctionLiteral };
use crate::ast::scopes::{DeclarationScope, Scope};
//use crate::base::small_vector::SmallVector;
use crate::parsing::parse_info::ParseInfo;
use crate::parsing::parser_base::{ParserBase, ParserTypes};
use crate::parsing::parsing::LanguageMode;
use crate::scanner::scanner::Scanner;
use crate::tracing::tracing_category_observer::TracingFlags;
use crate::ast::ast::{AstRawString, Expression, FunctionLiteral, Statement};
use crate::builtins::builtins_async_module::MessageTemplate;
//use crate::objects::objects::MessageTemplate;
use crate::ast::scopes::{FunctionKind, FunctionNameValidity, VariableMode, VariableKind, Declaration};
use crate::base::platform::time::Block;
use crate::codegen::compiler::ParseInfo;
use crate::heap::parked_scope::UnparkedScopeIfOnBackground;
use crate::tracing::code_data_source::CodeDataSourceTraceContext;
use crate::runtime::runtime_array::NativeCode;
use crate::objects::script::Script;
use crate::heap::cppgc::visitor::GarbageCollector;
use crate::builtins::builtins_async_gen::Runtime;
use crate::objects::objects::Code;
use crate::builtins::builtins_array::LanguageMode;
use crate::objects::shared_function_info_inl::FunctionSyntaxKind;
use crate::base::container_utils::vector_append;
use crate::objects::scope_info::{ScopeInfo, InitializationFlag};
use crate::builtins::builtins_proxy_gen::Function;
use crate::tracing::code_trace_context::Isolate;
use crate::heap::memory_allocator::MutexGuard;
use crate::codegen::unoptimized_compilation_info::AstFunctionLiteralIdReindexer;
use crate::compiler::turboshaft::graph_visualizer::Operation;
use crate::objects::debug_objects::ZoneObject;
use crate::objects::templates::FunctionKind;
use crate::heap::scavenger::ModuleImportPhase;
use crate::builtins::builtins_array::LanguageMode;
use crate::objects::objects::{Object, JSFunction, HeapObject};
use crate::objects::shared_function_info_inl::FunctionSyntaxKind;
use crate::heap::memory_allocator::Address;
use crate::base::flags::Flag;
use crate::codegen::signature::Parameter;
use crate::objects::js_promise_inl::Promise;
use crate::codegen::interface_descriptors::CodeEntrypointTag;
use crate::objects::call_site_info::JSFunction;
use crate::codegen::code_stub_assembler::operations;
use crate::base::platform::time::Constant;
use crate::builtins::builtins_async_disposable_stack::DisposableStackState;
use crate::objects::value_serializer::Skip;
use crate::torque::cfg::Block;
use crate::heap::cppgc::persistent_node::Use;
use crate::builtins::ia32::builtins_ia32::of;
use crate::builtins::builtins_sharedarraybuffer_gen::this;
use crate::builtins::builtins_async_module::source;
use crate::builtins::ppc::builtins_ppc::code;
use crate::builtins::builtins_async_module::is;
use crate::builtins::builtins_async_module::internal;
use crate::torque::cfg::Parameter;
use crate::objects::objects::bool;
use crate::codegen::unoptimized_compilation_info::literal;
use crate::base::iterator::empty;
use crate::runtime::runtime_wasm::scope;
use crate::compiler::diamond::chain;
use crate::runtime::runtime_wasm::or;
use crate::objects::shared_function_info_inl::native;
use crate::snapshot::object_deserializer::Deserialize;
use crate::runtime::runtime_wasm::to;
use crate::objects::shared_function_info_inl::script;
use crate::base::flags::not;
use crate::objects::feedback_vector_inl::mode;
use crate::builtins::arm::builtins_arm::Move;
use crate::builtins::loong64::builtins_loong64::Isolate;
use crate::objects::objects::bool;
use crate::snapshot::startup_deserializer::with;
use crate::objects::js_disposable_stack_inl::error;
use crate::builtins::builtins_async_disposable_stack::state;
use crate::runtime::runtime_debug::returns;
use crate::ast::source_range_ast_visitor::cases;
use crate::builtins::arm::builtins_arm::stop;
use crate::ast::source_range_ast_visitor::expression;
use crate::builtins::builtins_intl_gen::string;
use crate::heap::young_generation_marking_visitor_inl::second;
use crate::compiler::turboshaft::graph_visualizer::operations;
use crate::objects::js_proxy::assign;
use crate::compiler::backend::move_optimizer::constant;
use crate::compiler::js_type_hint_lowering::changed;
use crate::builtins::growable_fixed_array_gen::into;
use crate::objects::swiss_hash_table_helpers::one;
use crate::objects::js_segments::following;
use crate::regexp::regexp_dotprinter::node;
use crate::include::v8_exception::ReferenceError;
use crate::torque::ls::message::method;
use crate::compiler::backend::spill_placer::definition;
use crate::runtime::runtime_wasm::message;
use crate::objects::js_plural_rules::type;
use crate::base::container_utils::vector_append;
use crate::deoptimizer::translated_state::double_value;
use crate::runtime::runtime_wasm::Returns;
use crate::objects::js_plural_rules::type;
use crate::runtime::runtime_regexp::Lazy;
use crate::codegen::code_stub_assembler::ast;
use crate::torque::ls::message::range;
use crate::base::debug::stack_trace_fuchsia::record;
use crate::objects::call_site_info::function;
use crate::objects::call_site_info::function;
use crate::torque::earley_parser::Invalid;
use crate::tracing::perfetto_utils::string;
use crate::regexp::s390::regexp_macro_assembler_s390::characters;
use crate::runtime::runtime_wasm::pos;
use crate::runtime::runtime_wasm::switch;
use crate::heap::cppgc::persistent_node::Clear;
use crate::base::threaded_list::prepend;
use crate::objects::source_text_module::beg_pos;
use crate::runtime::runtime_wasm::any;
use crate::objects::js_plural_rules::count;
use crate::runtime::runtime_wasm::use;
use crate::heap::marking_progress_tracker::enable;
use crate::snapshot::snapshot_source_sink::peek;
use crate::asmjs::asm_parser::consume;
use crate::builtins::arm::builtins_arm::all;
use crate::asmjs::asm_types::Function;
use crate::objects::js_regexp_string_iterator::global;
use crate::heap::evacuation_allocator::object;
use crate::objects::property_descriptor::enumerable;
use crate::runtime::runtime_wasm::and;
use crate::objects::code::parameter_count;
use crate::objects::js_array::kind;
use crate::builtins::builtins_array::Set;
use crate::base::platform::platform::start;
use crate::runtime::runtime_wasm::and;
use crate::base::platform::platform_cygwin::end;
use crate::interpreter::bytecode_array_writer::lazy;
use crate::objects::js_promise_inl::result;
use crate::codegen::arm64::register_arm64::x;
use crate::objects::script_inl::source_url;
use crate::heap::cppgc::write_barrier::Enable;
use crate::heap::remembered_set::Insert;
use crate::objects::struct_inl::getter;
use crate::torque::global_context::ast;
use crate::regexp::regexp_compiler_tonode::strings;
use crate::objects::code::Bytecode;
use crate::heap::parked_scope::UnparkedScopeIfOnBackground;
use crate::heap::parked_scope::UnparkedScopeIfOnBackground;
use crate::torque::ls::message::range;
use crate::ast::scopes::ScopeType;
use crate::base::strings::string_view;
use crate::builtins::ppc::builtins_ppc::builtins;
use crate::heap::memory_chunk::without;
use crate::torque::torque_code_generator::out;
use crate::base::debug::stack_trace_fuchsia::record;
use crate::builtins::arm64::builtins_arm64::heap;
use crate::builtins::riscv::builtins_riscv::isolate;
use crate::runtime::runtime_wasm::pos;
use crate::runtime::runtime_wasm::any;
use crate::codegen::unoptimized_compilation_info::num_parameters;
use crate::heap::safepoint::counters;
use crate::objects::field_type::Class;
use crate::builtins::builtins_temporal_gen::next;
use crate::codegen::code_stub_assembler::isolate;
use crate::codegen::code_stub_assembler::operations;
use crate::objects::objects::bool;
use crate::builtins::builtins_regexp::prototype;
use crate::codegen::compiler::compile;
use crate::base::platform::platform::open;
use crate::compiler::turboshaft::assembler::hint;
use crate::base::platform::platform_posix_time::time;
use crate::torque::implementation_visitor::binding;
use crate::objects::templates::prototype;
use crate::codegen::riscv::base_constants_riscv::number;
use crate::heap::evacuation_allocator::object;
use crate::objects::templates::flag;
use crate::runtime::runtime_wasm::Return;
use crate::builtins::riscv::builtins_riscv::code;
use crate::objects::js_objects_inl::start_position;
use crate::objects::js_objects_inl::end_position;
use crate::torque::types::ClassDeclaration;
use crate::objects::scope_info::FunctionSyntaxKind;
use crate::objects::script::deserialized;
use crate::objects::script::deserialized;
use crate::objects::objects::objects;
use crate::heap::factory_base::SourceRange;
use crate::codegen::code_stub_assembler::ast;
use crate::objects::tagged_impl::Identifier;
use crate::objects::scope_info::IsStaticFlag;
use crate::objects::templates::FunctionKind;
use crate::codegen::compiler::parse_info;
use crate::objects::objects::objects;
use crate::objects::objects::objects;
use crate::heap::local_factory_inl::Null;
use crate::codegen::code_stub_assembler::isolate;
use crate::ast::scopes::VariableProxy;
use crate::objects::templates::prototype;
use crate::codegen::code_stub_assembler::operations;
use crate::heap::factory_base::SourceRange;
use crate::codegen::code_stub_assembler::isolate;
use crate::codegen::code_stub_assembler::ast;
use crate::objects::tagged_impl::Identifier;
use crate::objects::scope_info::IsStaticFlag;
use crate::objects::templates::FunctionKind;
use crate::codegen::compiler::parse_info;
use crate::objects::tagged_impl::Identifier;
use crate::objects::shared_function_info_inl::FunctionSyntaxKind;
use crate::builtins::builtins_array::LanguageMode;
use crate::heap::factory::V8_WARN_UNUSED_RESULT;
use crate::builtins::builtins_async_disposable_stack::Factory;
use crate::objects::value_serializer::Skip;
use crate::objects::templates::FunctionKind;
use crate::objects::shared_function_info_inl::FunctionSyntaxKind;
use crate::builtins::builtins_array::LanguageMode;
use crate::objects::templates::FunctionKind;
use crate::objects::shared_function_info_inl::FunctionSyntaxKind;
use crate::objects::shared_function_info_inl::FunctionSyntaxKind;
use crate::objects::scope_info::VariableMode;
use crate::ast::scopes::VariableKind;
use crate::objects::scope_info::IsStaticFlag;
use crate::objects::scope_info::InitializationFlag;
use crate::builtins::builtins_array::LanguageMode;
use crate::heap::factory::V8_WARN_UNUSED_RESULT;
use crate::torque::types::StringLiteral;
use crate::objects::templates::FunctionKind;
use crate::objects::shared_function_info_inl::FunctionSyntaxKind;
use crate::objects::scope_info::VariableMode;
use crate::ast::scopes::VariableKind;
use crate::objects::scope_info::IsStaticFlag;
use crate::objects::scope_info::InitializationFlag;
use crate::builtins::builtins_array::LanguageMode;
use crate::heap::factory::V8_WARN_UNUSED_RESULT;
use crate::builtins::builtins_async_disposable_stack::Factory;
use crate::objects::value_serializer::Skip;
use crate::objects::templates::FunctionKind;
use crate::objects::shared_function_info_inl::FunctionSyntaxKind;
use crate::objects::objects::Tagged;
use crate::builtins::builtins_async_module::MessageTemplate;
use crate::runtime::runtime_shadow_realm::AstRawString;
use crate::base::platform::time::Block;
use crate::heap::local_factory_inl::ScopeInfo;
use crate::base::platform::time::Scope;
use crate::runtime::runtime_scopes::Declaration;
use crate::objects::templates::FunctionKind;
use crate::builtins::builtins_async_module::Module;
use crate::torque::types::StringLiteral;
use crate::objects::value_serializer::Skip;
use crate::ast::scopes::Class;
use crate::objects::shared_function_info_inl::FunctionSyntaxKind;
use crate::objects::scope_info::VariableMode;
use crate::ast::scopes::VariableKind;
use crate::objects::scope_info::IsStaticFlag;
use crate::objects::scope_info::InitializationFlag;
use crate::builtins::builtins_array::LanguageMode;
use crate::heap::factory::V8_WARN_UNUSED_RESULT;
use crate::builtins::builtins_async_disposable_stack::Factory;
use crate::objects::value_serializer::Skip;
use crate::objects::templates::FunctionKind;
use crate::objects::shared_function_info_inl::FunctionSyntaxKind;
use crate::builtins::builtins_array::LanguageMode;
use crate::builtins::builtins_proxy_gen::Function;
use crate::wasm::module_decoder_impl::FunctionBody;
use crate::interpreter::bytecode_generator::kNoSourcePosition;
use crate::builtins::arm::builtins_arm::This;
use crate::builtins::riscv::builtins_riscv::If;
use crate::objects::value_serializer::Skip;
use crate::ast::scopes::Parser;
use crate::tracing::code_trace_context::Isolate;
use crate::codegen::compiler::ParseInfo;
use crate::builtins::arm::builtins_arm::This;
use crate::builtins::riscv::builtins_riscv::If;
use crate::ast::scopes::VariableProxy;
use crate::heap::factory_base::SourceRange;
use crate::objects::templates::prototype;
use crate::objects::templates::FunctionKind;
use crate::builtins::arm::builtins_arm::This;
use crate::heap::local_factory_inl::ScopeInfo;
use crate::base::platform::time::Scope;
use crate::builtins::riscv::builtins_riscv::If;
use crate::builtins::arm::builtins_arm::This;
use crate::ast::scopes::Class;
use crate::objects::templates::FunctionKind;
use crate::builtins::builtins_async_module::Module;
use crate::torque::types::StringLiteral;
use crate::heap::scavenger::ModuleImportPhase;
use crate::compiler::turboshaft::representations::MultiSwitch;
use crate::builtins::builtins_async_disposable_stack::MessageTemplate;
use crate::heap::memory_allocator::MutexGuard;
use crate::objects::objects::Objects;
use crate::builtins::builtins_async_module::Runtime;
use crate::torque::cfg::CFG;
use crate::heap::cppgc::persistent_node::Use;
use crate::builtins::ia32::builtins_ia32::of;
use crate::builtins::builtins_sharedarraybuffer_gen::this;
use crate::builtins::builtins_async_module::source;
use crate::builtins::ppc::builtins_ppc::code;
use crate::builtins::builtins_async_module::is;
use crate::builtins::builtins_async_module::internal;
use crate::torque::cfg::Parameter;
use crate::objects::objects::bool;
use crate::codegen::unoptimized_compilation_info::literal;
use crate::base::iterator::empty;
use crate::runtime::runtime_wasm::scope;
use crate::compiler::diamond::chain;
use crate::runtime::runtime_wasm::or;
use crate::objects::shared_function_info_inl::native;
use crate::snapshot::object_deserializer::Deserialize;
use crate::runtime::runtime_wasm::to;
use crate::objects::shared_function_info_inl::script;
use crate::base::flags::not;
use crate::objects::feedback_vector_inl::mode;
use crate::builtins::arm::builtins_arm::Move;
use crate::builtins::loong64::builtins_loong64::Isolate;
use crate::objects::objects::bool;
use crate::snapshot::startup_deserializer::with;
use crate::objects::js_disposable_stack_inl::error;
use crate::builtins::builtins_async_disposable_stack::state;
use crate::runtime::runtime_debug::returns;
use crate::ast::source_range_ast_visitor::cases;
use crate::builtins::arm::builtins_arm::stop;
use crate::ast::source_range_ast_visitor::expression;
use crate::builtins::builtins_intl_gen::string;
use crate::heap::young_generation_marking_visitor_inl::second;
use crate::compiler::turboshaft::graph_visualizer::operations;
use crate::objects::js_proxy::assign;
use crate::compiler::backend::move_optimizer::constant;
use crate::compiler::js_type_hint_lowering::changed;
use crate::builtins::growable_fixed_array_gen::into;
use crate::objects::swiss_hash_table_helpers::one;
use crate::objects::js_segments::following;
use crate::regexp::regexp_dotprinter::node;
use crate::include::v8_exception::ReferenceError;
use crate::torque::ls::message::method;
use crate::compiler::backend::spill_placer::definition;
use crate::runtime::runtime_wasm::message;
use crate::objects::js_plural_rules::type;
use crate::base::container_utils::vector_append;
use crate::deoptimizer::translated_state::double_value;
use crate::runtime::runtime_wasm::Returns;
use crate::ast::source_range_ast_visitor::expression;
use crate::builtins::builtins_async_module::is;
use crate::torque::implementation_visitor::variable;
use crate::builtins::ia32::builtins_ia32::of;
use crate::objects::string_set::has;
use crate::runtime::runtime_wasm::to;
use crate::objects::call_site_info::function;
use crate::codegen::unoptimized_compilation_info::literal;
use crate::snapshot::startup_deserializer::with;
use crate::objects::js_disposable_stack_inl::error;
use crate::runtime::runtime_wasm::to;
use crate::builtins::arm::builtins_arm::stop;
use crate::runtime::runtime_wasm::or;
use crate::base::flags::not;
use crate::objects::js_disposable_stack_inl::error;
use crate::runtime::runtime_wasm::to;
use crate::builtins::builtins_sharedarraybuffer_gen::this;
use crate::runtime::runtime_wasm::and;
use crate::objects::objects::bool;
use crate::base::pointer_with_payload::raw;
use crate::heap::page_metadata::available;
use crate::runtime::runtime_wasm::to;
use crate::builtins::ppc::builtins_ppc::code;
use crate::runtime::runtime_wasm::to;
use crate::torque::earley_parser::Invalid;
use crate::runtime::runtime_wasm::to;
use crate::builtins::ia32::builtins_ia32::of;
use crate::builtins::builtins_sharedarraybuffer_gen::this;
use crate::builtins::builtins_async_module::is;
use crate::base::vector::last;
use crate::objects::objects::bool;
use crate::compiler::wasm_inlining_into_js::Generic;
use crate::builtins::arm::builtins_arm::from;
use crate::objects::objects::bool;
use crate::objects::objects::bool;
use crate::objects::objects::bool;
use crate::objects::objects::bool;
use crate::runtime::runtime_wasm::Returns;
use crate::ast::source_range_ast_visitor::expression;
use crate::builtins::builtins_async_module::is;
use crate::builtins::ia32::builtins_ia32::of;
use crate::objects::js_plural_rules::type;
use crate::objects::objects::bool;
use crate::runtime::runtime_wasm::Returns;
use crate::ast::source_range_ast_visitor::expression;
use crate::builtins::builtins_async_module::is;
use crate::torque::implementation_visitor::variable;
use crate::builtins::ia32::builtins_ia32::of;
use crate::objects::string_set::has;
use crate::runtime::runtime_wasm::to;
use crate::torque::implementation_visitor::variable;
use crate::objects::objects::bool;
use crate::interpreter::bytecode_node::operand;
use crate::interpreter::bytecode_node::operand;
use crate::objects::objects::bool;
use crate::objects::objects::bool;
use crate::objects::objects::bool;
use crate::objects::objects::bool;
use crate::objects::objects::bool;
use crate::runtime::runtime_wasm::Returns;
use crate::builtins::builtins_async_module::is;
use crate::ast::source_range_ast_visitor::expression;
use crate::builtins::builtins_intl_gen::string;
use crate::heap::young_generation_marking_visitor_inl::second;
use crate::builtins::builtins_async_module::is;
use crate::codegen::unoptimized_compilation_info::literal;
use crate::builtins::builtins_async_module::is;
use crate::snapshot::startup_deserializer::with;
use crate::runtime::runtime_wasm::and;
use crate::objects::js_promise_inl::result;
use crate::builtins::builtins_async_module::is;
use crate::objects::objects::bool;
use crate::codegen::unoptimized_compilation_info::literal;
use crate::runtime::runtime_wasm::and;
use crate::compiler::turboshaft::graph_visualizer::operations;
use crate::snapshot::startup_deserializer::with;
use crate::objects::js_proxy::assign;
use crate::objects::call_site_info::function;
use crate::codegen::unoptimized_compilation_info::literal;
use crate::runtime::runtime_wasm::to;
use crate::codegen::unoptimized_compilation_info::literal;
use crate::compiler::backend::move_optimizer::constant;
use crate::objects::call_site_info::function;
use crate::runtime::runtime_wasm::Returns;
use crate::ast::source_range_ast_visitor::expression;
use crate::compiler::js_type_hint_lowering::changed;
use crate::runtime::runtime_wasm::to;
use crate::ast::source_range_ast_visitor::expression;
use crate::builtins::builtins_async_module::is;
use crate::objects::objects::bool;
use crate::objects::objects::bool;
use crate::runtime::runtime_wasm::Returns;
use crate::runtime::runtime_wasm::operation;
use crate::ast::source_range_ast_visitor::expression;
use crate::runtime::runtime_wasm::and;
use crate::builtins::growable_fixed_array_gen::into;
use crate::compiler::js_type_hint_lowering::changed;
use crate::runtime::runtime_wasm::to;
use crate::objects::objects::bool;
use crate::runtime::runtime_wasm::Returns;
use crate::objects::swiss_hash_table_helpers::one;
use crate::builtins::ia32::builtins_ia32::of;
use crate::objects::js_segments::following;
use crate::codegen::unoptimized_compilation_info::literal;
use crate::snapshot::startup_deserializer::with;
use crate::builtins::builtins_async_disposable_stack::value;
use crate::compiler::backend::loong64::code_generator_loong64::Generate;
use crate::regexp::regexp_dotprinter::node;
use crate::include::v8_exception::ReferenceError;
use crate::snapshot::startup_deserializer::with;
use crate::heap::stress_scavenge_observer::This;
use crate::torque::ls::message::method;
use crate::compiler::backend::spill_placer::definition;
use crate::runtime::runtime_wasm::to;
use crate::torque::ls::message::method;
use crate::runtime::runtime_wasm::message;
use crate::objects::js_plural_rules::type;
use crate::base::container_utils::vector_append;
use crate::objects::objects::bool;
use crate::objects::objects::bool;
use crate::base::iterator::empty;
use crate::objects::objects::bool;
use crate::builtins::number_builtins_reducer_inl::data;
use crate::objects::js_promise_inl::result;
use crate::deoptimizer::translated_state::double_value;
use crate::builtins::builtins_intl_gen::string;
use crate::objects::objects::bool;
use crate::interpreter::bytecode_array_builder::parameter;
use crate::objects::objects::bool;
use crate::runtime::runtime_wasm::scope;
use crate::interpreter::bytecode_array_builder::parameter;
use crate::objects::objects::bool;
use crate::interpreter::bytecode_array_builder::parameter;
use crate::builtins::builtins_async_module::is;
use crate::codegen::signature::parameters;
use crate::snapshot::startup_deserializer::with;
use crate::interpreter::bytecode_array_builder::parameter;
use crate::builtins::builtins_async_module::is;
use crate::base::flags::not;
use crate::torque::implementation_visitor::temporary;
use crate::interpreter::bytecode_array_builder::parameter;
use crate::torque::implementation_visitor::variable;
use crate::builtins::builtins_async_module::is;
use crate::runtime::runtime_wasm::Returns;
use crate::base::vector::first;
use crate::objects::call_site_info::function;
use crate::codegen::unoptimized_compilation_info::literal;
use crate::objects::objects::bool;
use crate::runtime::runtime_wasm::ranges;
use crate::torque::ls::message::range;
use crate::torque::ls::message::range;
use crate::torque::ls::message::range;
use crate::torque::ls::message::range;
use crate::torque::ls::message::range;
use crate::runtime::runtime_wasm::to;
use crate::base::debug::stack_trace_fuchsia::record;
use crate::builtins::builtins_async_module::source;
use crate::runtime::runtime_wasm::ranges;
use crate::builtins::ia32::builtins_ia32::of;
use crate::snapshot::startup_deserializer::with;
use crate::objects::templates_inl::callback;
use crate::codegen::backend::loong64::code_generator_loong64::Generate;
use crate::builtins::builtins_temporal_gen::next;
use crate::builtins::builtins_async_module::internal;
use crate::torque::implementation_visitor::variable;
use crate::base::platform::platform::name;
use crate::torque::implementation_visitor::binding;
use crate::heap::evacuation_allocator::object;
use crate::runtime::runtime_wasm::to;
use crate::wasm::struct_types::field;
use crate::runtime::runtime_wasm::and;
use crate::runtime::runtime_wasm::to;
use crate::builtins::loong64::builtins_loong64::Isolate;
use crate::objects::objects::bool;
use crate::objects::objects::bool;
use crate::base::flags::not;
use crate::base::vector::first;
use crate::objects::call_site_info::function;
use crate::codegen::unoptimized_compilation_info::literal;
use crate::heap::stress_scavenge_observer::This;
use crate::wasm::struct_types::field;
use crate::objects::source_text_module::position;
use crate::builtins::ia32::builtins_ia32::of;
use crate::interpreter::bytecode_array_builder::parameter;
use crate::builtins::builtins_async_module::is;
use crate::builtins::builtins_sharedarraybuffer_gen::this;
use crate::wasm::struct_types::field;
use crate::builtins::builtins_async_module::is;
use crate::tracing::code_data_source::reset;
use crate::runtime::runtime_wasm::to;
use crate::builtins::builtins_async_module::internal;

pub mod ast {
pub mod scopes;
pub mod ast;
pub mod ast_value_factory;
pub mod ast_source_ranges;
}

pub mod base {
pub mod compiler_specific;
pub mod small_vector;
pub mod threaded_list;
pub mod ieee754;
pub mod overflowing_math;
pub mod platform {
pub mod platform;
pub mod memory_protection_key;
pub mod platform_cygwin;
pub mod time;
}
pub mod pointer_with_payload;
pub mod vector;
pub mod debug {
pub mod stack_trace_fuchsia;
}
pub mod container_utils;
pub mod flags;
pub mod numbers {
pub mod conversions_inl;
pub mod strtod;
pub mod bignum;
}
pub mod strings {
pub mod char_predicates_inl;
pub mod string_stream;
pub mod unicode_inl;
}
}

pub mod codegen {
pub mod compiler;
pub mod callable;
pub mod unoptimized_compilation_info;
pub mod signature;
pub mod interface_descriptors;
pub mod arm64 {
pub mod register_arm64;
pub mod constants_arm64;
}
pub mod ppc {
pub mod macro_assembler_ppc;
}
pub mod riscv {
pub mod base_constants_riscv;
pub mod instruction_selector_riscv;
}
}

pub mod compiler {
pub mod diamond;
pub mod js_type_hint_lowering;
pub mod wasm_inlining_into_js;
pub mod graph_reducer;
pub mod dead_code_elimination;
pub mod backend {
pub mod move_optimizer;
pub mod instruction_selector_adapter;
pub mod spill_placer;
pub mod mips64 {
pub mod code_generator_mips64;
}
pub mod loong64 {
pub mod code_generator_loong64;
}
}
pub mod turboshaft {
pub mod assembler;
pub mod graph_visualizer;
pub mod representations;
}
pub mod js_generic_lowering;
}

pub mod deoptimizer {
pub mod translated_state;
pub mod frame_translation_builder;
}

pub mod heap {
pub mod scaveng
