// Converted from V8 C++ source files:
// Header: instruction-codes-s390.h
// Implementation: N/A
// 
// This file combines both header and implementation into idiomatic Rust code.

pub mod instruction_codes_s390 {
    // S390-specific opcodes that specify which assembly sequence to emit.
    // Most opcodes specify a single instruction.

    #[derive(Debug, Copy, Clone, PartialEq, Eq)]
    pub enum S390Opcode {
        S390Peek,
        S390Abs32,
        S390Abs64,
        S390And32,
        S390And64,
        S390Or32,
        S390Or64,
        S390Xor32,
        S390Xor64,
        S390ShiftLeft32,
        S390ShiftLeft64,
        S390ShiftRight32,
        S390ShiftRight64,
        S390ShiftRightArith32,
        S390ShiftRightArith64,
        S390RotRight32,
        S390RotRight64,
        S390Not32,
        S390Not64,
        S390RotLeftAndClear64,
        S390RotLeftAndClearLeft64,
        S390RotLeftAndClearRight64,
        S390Lay,
        S390Add32,
        S390Add64,
        S390AddFloat,
        S390AddDouble,
        S390Sub32,
        S390Sub64,
        S390SubFloat,
        S390SubDouble,
        S390Mul32,
        S390Mul32WithOverflow,
        S390Mul64,
        S390Mul64WithOverflow,
        S390MulHighS64,
        S390MulHighU64,
        S390MulHigh32,
        S390MulHighU32,
        S390MulFloat,
        S390MulDouble,
        S390Div32,
        S390Div64,
        S390DivU32,
        S390DivU64,
        S390DivFloat,
        S390DivDouble,
        S390Mod32,
        S390Mod64,
        S390ModU32,
        S390ModU64,
        S390ModDouble,
        S390Neg32,
        S390Neg64,
        S390NegDouble,
        S390NegFloat,
        S390SqrtFloat,
        S390FloorFloat,
        S390CeilFloat,
        S390TruncateFloat,
        S390FloatNearestInt,
        S390AbsFloat,
        S390SqrtDouble,
        S390FloorDouble,
        S390CeilDouble,
        S390TruncateDouble,
        S390RoundDouble,
        S390DoubleNearestInt,
        S390MaxFloat,
        S390MaxDouble,
        S390MinFloat,
        S390MinDouble,
        S390AbsDouble,
        S390Cntlz32,
        S390Cntlz64,
        S390Popcnt32,
        S390Popcnt64,
        S390Cmp32,
        S390Cmp64,
        S390CmpFloat,
        S390CmpDouble,
        S390Tst32,
        S390Tst64,
        S390Push,
        S390PushFrame,
        S390StoreToStackSlot,
        S390SignExtendWord8ToInt32,
        S390SignExtendWord16ToInt32,
        S390SignExtendWord8ToInt64,
        S390SignExtendWord16ToInt64,
        S390SignExtendWord32ToInt64,
        S390Uint32ToUint64,
        S390Int64ToInt32,
        S390Int64ToFloat32,
        S390Int64ToDouble,
        S390Uint64ToFloat32,
        S390Uint64ToDouble,
        S390Int32ToFloat32,
        S390Int32ToDouble,
        S390Uint32ToFloat32,
        S390Uint32ToDouble,
        S390Float32ToInt64,
        S390Float32ToUint64,
        S390Float32ToInt32,
        S390Float32ToUint32,
        S390Float32ToDouble,
        S390Float64SilenceNaN,
        S390DoubleToInt32,
        S390DoubleToUint32,
        S390DoubleToInt64,
        S390DoubleToUint64,
        S390DoubleToFloat32,
        S390DoubleExtractLowWord32,
        S390DoubleExtractHighWord32,
        S390DoubleFromWord32Pair,
        S390DoubleInsertLowWord32,
        S390DoubleInsertHighWord32,
        S390DoubleConstruct,
        S390BitcastInt32ToFloat32,
        S390BitcastFloat32ToInt32,
        S390BitcastInt64ToDouble,
        S390BitcastDoubleToInt64,
        S390LoadWordS8,
        S390LoadWordU8,
        S390LoadWordS16,
        S390LoadWordU16,
        S390LoadWordS32,
        S390LoadWordU32,
        S390LoadAndTestWord32,
        S390LoadAndTestWord64,
        S390LoadAndTestFloat32,
        S390LoadAndTestFloat64,
        S390LoadReverse16RR,
        S390LoadReverse32RR,
        S390LoadReverse64RR,
        S390LoadReverseSimd128RR,
        S390LoadReverseSimd128,
        S390LoadReverse16,
        S390LoadReverse32,
        S390LoadReverse64,
        S390LoadWord64,
        S390LoadFloat32,
        S390LoadDouble,
        S390StoreWord8,
        S390StoreWord16,
        S390StoreWord32,
        S390StoreWord64,
        S390StoreReverse16,
        S390StoreReverse32,
        S390StoreReverse64,
        S390StoreReverseSimd128,
        S390StoreFloat32,
        S390StoreDouble,
        S390Word64AtomicExchangeUint64,
        S390Word64AtomicCompareExchangeUint64,
        S390Word64AtomicAddUint64,
        S390Word64AtomicSubUint64,
        S390Word64AtomicAndUint64,
        S390Word64AtomicOrUint64,
        S390Word64AtomicXorUint64,
        S390F64x2Splat,
        S390F64x2ReplaceLane,
        S390F64x2Abs,
        S390F64x2Neg,
        S390F64x2Sqrt,
        S390F64x2Add,
        S390F64x2Sub,
        S390F64x2Mul,
        S390F64x2Div,
        S390F64x2Eq,
        S390F64x2Ne,
        S390F64x2Lt,
        S390F64x2Le,
        S390F64x2Min,
        S390F64x2Max,
        S390F64x2ExtractLane,
        S390F64x2Qfma,
        S390F64x2Qfms,
        S390F64x2Pmin,
        S390F64x2Pmax,
        S390F64x2Ceil,
        S390F64x2Floor,
        S390F64x2Trunc,
        S390F64x2NearestInt,
        S390F64x2ConvertLowI32x4S,
        S390F64x2ConvertLowI32x4U,
        S390F64x2PromoteLowF32x4,
        S390F32x4Splat,
        S390F32x4ExtractLane,
        S390F32x4ReplaceLane,
        S390F32x4Add,
        S390F32x4Sub,
        S390F32x4Mul,
        S390F32x4Eq,
        S390F32x4Ne,
        S390F32x4Lt,
        S390F32x4Le,
        S390F32x4Abs,
        S390F32x4Neg,
        S390F32x4SConvertI32x4,
        S390F32x4UConvertI32x4,
        S390F32x4Sqrt,
        S390F32x4Div,
        S390F32x4Min,
        S390F32x4Max,
        S390F32x4Qfma,
        S390F32x4Qfms,
        S390F32x4Pmin,
        S390F32x4Pmax,
        S390F32x4Ceil,
        S390F32x4Floor,
        S390F32x4Trunc,
        S390F32x4NearestInt,
        S390F32x4DemoteF64x2Zero,
        S390I64x2Neg,
        S390I64x2Add,
        S390I64x2Sub,
        S390I64x2Shl,
        S390I64x2ShrS,
        S390I64x2ShrU,
        S390I64x2Mul,
        S390I64x2Splat,
        S390I64x2ReplaceLane,
        S390I64x2ExtractLane,
        S390I64x2Eq,
        S390I64x2BitMask,
        S390I64x2ExtMulLowI32x4S,
        S390I64x2ExtMulHighI32x4S,
        S390I64x2ExtMulLowI32x4U,
        S390I64x2ExtMulHighI32x4U,
        S390I64x2SConvertI32x4Low,
        S390I64x2SConvertI32x4High,
        S390I64x2UConvertI32x4Low,
        S390I64x2UConvertI32x4High,
        S390I64x2Ne,
        S390I64x2GtS,
        S390I64x2GeS,
        S390I64x2Abs,
        S390I32x4Splat,
        S390I32x4ExtractLane,
        S390I32x4ReplaceLane,
        S390I32x4Add,
        S390I32x4Sub,
        S390I32x4Mul,
        S390I32x4MinS,
        S390I32x4MinU,
        S390I32x4MaxS,
        S390I32x4MaxU,
        S390I32x4Eq,
        S390I32x4Ne,
        S390I32x4GtS,
        S390I32x4GeS,
        S390I32x4GtU,
        S390I32x4GeU,
        S390I32x4Neg,
        S390I32x4Shl,
        S390I32x4ShrS,
        S390I32x4ShrU,
        S390I32x4SConvertF32x4,
        S390I32x4UConvertF32x4,
        S390I32x4SConvertI16x8Low,
        S390I32x4SConvertI16x8High,
        S390I32x4UConvertI16x8Low,
        S390I32x4UConvertI16x8High,
        S390I32x4Abs,
        S390I32x4BitMask,
        S390I32x4DotI16x8S,
        S390I32x4ExtMulLowI16x8S,
        S390I32x4ExtMulHighI16x8S,
        S390I32x4ExtMulLowI16x8U,
        S390I32x4ExtMulHighI16x8U,
        S390I32x4ExtAddPairwiseI16x8S,
        S390I32x4ExtAddPairwiseI16x8U,
        S390I32x4TruncSatF64x2SZero,
        S390I32x4TruncSatF64x2UZero,
        S390I32x4DotI8x16AddS,
        S390I16x8Splat,
        S390I16x8ExtractLaneU,
        S390I16x8ExtractLaneS,
        S390I16x8ReplaceLane,
        S390I16x8Add,
        S390I16x8Sub,
        S390I16x8Mul,
        S390I16x8MinS,
        S390I16x8MinU,
        S390I16x8MaxS,
        S390I16x8MaxU,
        S390I16x8Eq,
        S390I16x8Ne,
        S390I16x8GtS,
        S390I16x8GeS,
        S390I16x8GtU,
        S390I16x8GeU,
        S390I16x8Shl,
        S390I16x8ShrS,
        S390I16x8ShrU,
        S390I16x8Neg,
        S390I16x8SConvertI32x4,
        S390I16x8UConvertI32x4,
        S390I16x8SConvertI8x16Low,
        S390I16x8SConvertI8x16High,
        S390I16x8UConvertI8x16Low,
        S390I16x8UConvertI8x16High,
        S390I16x8AddSatS,
        S390I16x8SubSatS,
        S390I16x8AddSatU,
        S390I16x8SubSatU,
        S390I16x8RoundingAverageU,
        S390I16x8Abs,
        S390I16x8BitMask,
        S390I16x8ExtMulLowI8x16S,
        S390I16x8ExtMulHighI8x16S,
        S390I16x8ExtMulLowI8x16U,
        S390I16x8ExtMulHighI8x16U,
        S390I16x8ExtAddPairwiseI8x16S,
        S390I16x8ExtAddPairwiseI8x16U,
        S390I16x8Q15MulRSatS,
        S390I16x8DotI8x16S,
        S390I8x16Splat,
        S390I8x16ExtractLaneU,
        S390I8x16ExtractLaneS,
        S390I8x16ReplaceLane,
        S390I8x16Add,
        S390I8x16Sub,
        S390I8x16MinS,
        S390I8x16MinU,
        S390I8x16MaxS,
        S390I8x16MaxU,
        S390I8x16Eq,
        S390I8x16Ne,
        S390I8x16GtS,
        S390I8x16GeS,
        S390I8x16GtU,
        S390I8x16GeU,
        S390I8x16Shl,
        S390I8x16ShrS,
        S390I8x16ShrU,
        S390I8x16Neg,
        S390I8x16SConvertI16x8,
        S390I8x16UConvertI16x8,
        S390I8x16AddSatS,
        S390I8x16SubSatS,
        S390I8x16AddSatU,
        S390I8x16SubSatU,
        S390I8x16RoundingAverageU,
        S390I8x16Abs,
        S390I8x16BitMask,
        S390I8x16Shuffle,
        S390I8x16Swizzle,
        S390I8x16Popcnt,
        S390I64x2AllTrue,
        S390I32x4AllTrue,
        S390I16x8AllTrue,
        S390I8x16AllTrue,
        S390V128AnyTrue,
        S390S128And,
        S390S128Or,
        S390S128Xor,
        S390S128Const,
        S390S128Zero,
        S390S128AllOnes,
        S390S128Not,
        S390S128Select,
        S390S128AndNot,
        S390S128Load8Splat,
        S390S128Load16Splat,
        S390S128Load32Splat,
        S390S128Load64Splat,
        S390S128Load8x8S,
        S390S128Load8x8U,
        S390S128Load16x4S,
        S390S128Load16x4U,
        S390S128Load32x2S,
        S390S128Load32x2U,
        S390S128Load32Zero,
        S390S128Load64Zero,
        S390S128Load8Lane,
        S390S128Load16Lane,
        S390S128Load32Lane,
        S390S128Load64Lane,
        S390S128Store8Lane,
        S390S128Store16Lane,
        S390S128Store32Lane,
        S390S128Store64Lane,
        S390StoreSimd128,
        S390LoadSimd128,
        S390StoreCompressTagged,
        S390LoadDecompressTaggedSigned,
        S390LoadDecompressTagged,
    }

    // Addressing modes represent the "shape" of inputs to an instruction.
    // Many instructions support multiple addressing modes. Addressing modes
    // are encoded into the InstructionCode of the instruction and tell the
    // code generator after register allocation which assembler method to call.
    //
    // We use the following local notation for addressing modes:
    //
    // R = register
    // O = register or stack slot
    // D = double register
    // I = immediate (handle, external, int32)
    // MRI = [register + immediate]
    // MRR = [register + register]
    #[derive(Debug, Copy, Clone, PartialEq, Eq)]
    pub enum AddressingMode {
        MR,   /* [%r0          ] */
        MRI,  /* [%r0       + K] */
        MRR,  /* [%r0 + %r1    ] */
        MRRI, /* [%r0 + %r1 + K] */
        Root, /* [%r0 + K] */
    }
}
