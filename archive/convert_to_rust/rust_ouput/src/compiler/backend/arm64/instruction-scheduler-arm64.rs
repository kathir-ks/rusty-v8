// Converted from V8 C++ source files:
// Header: N/A
// Implementation: instruction-scheduler-arm64.cc
// 
// This file combines both header and implementation into idiomatic Rust code.

#![allow(dead_code)]
#![allow(unused_variables)]

use std::convert::TryInto;

pub struct InstructionScheduler {}

impl InstructionScheduler {
    pub fn new() -> Self {
        InstructionScheduler {}
    }

    pub fn scheduler_supported() -> bool {
        true
    }
}

#[derive(Debug, PartialEq, Eq, Copy, Clone)]
pub enum ArchOpcode {
    Arm64Add,
    Arm64Add32,
    Arm64And,
    Arm64And32,
    Arm64Bic,
    Arm64Bic32,
    Arm64Clz,
    Arm64Clz32,
    Arm64Cmp,
    Arm64Cmp32,
    Arm64Cmn,
    Arm64Cmn32,
    Arm64Cnt,
    Arm64Cnt32,
    Arm64Cnt64,
    Arm64Tst,
    Arm64Tst32,
    Arm64Or,
    Arm64Or32,
    Arm64Orn,
    Arm64Orn32,
    Arm64Eor,
    Arm64Eor32,
    Arm64Eon,
    Arm64Eon32,
    Arm64Sub,
    Arm64Sub32,
    Arm64Mul,
    Arm64Mul32,
    Arm64Smulh,
    Arm64Smull,
    Arm64Smull2,
    Arm64Umulh,
    Arm64Umull,
    Arm64Umull2,
    Arm64Madd,
    Arm64Madd32,
    Arm64Msub,
    Arm64Msub32,
    Arm64Mneg,
    Arm64Mneg32,
    Arm64Idiv,
    Arm64Idiv32,
    Arm64Udiv,
    Arm64Udiv32,
    Arm64Imod,
    Arm64Imod32,
    Arm64Umod,
    Arm64Umod32,
    Arm64Not,
    Arm64Not32,
    Arm64Lsl,
    Arm64Lsl32,
    Arm64Lsr,
    Arm64Lsr32,
    Arm64Asr,
    Arm64Asr32,
    Arm64Ror,
    Arm64Ror32,
    Arm64Mov32,
    Arm64Sxtb,
    Arm64Sxtb32,
    Arm64Sxth,
    Arm64Sxth32,
    Arm64Sxtw,
    Arm64Sbfx,
    Arm64Sbfx32,
    Arm64Ubfx,
    Arm64Ubfx32,
    Arm64Ubfiz32,
    Arm64Sbfiz,
    Arm64Bfi,
    Arm64Rbit,
    Arm64Rbit32,
    Arm64Rev,
    Arm64Rev32,
    Arm64Float16RoundDown,
    Arm64Float16RoundTiesEven,
    Arm64Float16RoundTruncate,
    Arm64Float16RoundUp,
    Arm64Float32Cmp,
    Arm64Float32Add,
    Arm64Float32Sub,
    Arm64Float32Mul,
    Arm64Float32Div,
    Arm64Float32Abs,
    Arm64Float32Abd,
    Arm64Float32Neg,
    Arm64Float32Sqrt,
    Arm64Float32Fnmul,
    Arm64Float32RoundDown,
    Arm64Float32Max,
    Arm64Float32Min,
    Arm64Float64Cmp,
    Arm64Float64Add,
    Arm64Float64Sub,
    Arm64Float64Mul,
    Arm64Float64Div,
    Arm64Float64Max,
    Arm64Float64Min,
    Arm64Float64Abs,
    Arm64Float64Abd,
    Arm64Float64Neg,
    Arm64Float64Sqrt,
    Arm64Float64Fnmul,
    Arm64Float64RoundDown,
    Arm64Float64RoundTiesAway,
    Arm64Float64RoundTruncate,
    Arm64Float64RoundTiesEven,
    Arm64Float64RoundUp,
    Arm64Float32RoundTiesEven,
    Arm64Float32RoundTruncate,
    Arm64Float32RoundUp,
    Arm64Float32ToFloat64,
    Arm64Float64ToFloat32,
    Arm64Float64ToFloat16RawBits,
    Arm64Float16RawBitsToFloat64,
    Arm64Float32ToInt32,
    Arm64Float64ToInt32,
    Arm64Float32ToUint32,
    Arm64Float64ToUint32,
    Arm64Float32ToInt64,
    Arm64Float64ToInt64,
    Arm64Float32ToUint64,
    Arm64Float64ToUint64,
    Arm64Int32ToFloat32,
    Arm64Int32ToFloat64,
    Arm64Int64ToFloat32,
    Arm64Int64ToFloat64,
    Arm64Uint32ToFloat32,
    Arm64Uint32ToFloat64,
    Arm64Uint64ToFloat32,
    Arm64Uint64ToFloat64,
    Arm64Float64ExtractLowWord32,
    Arm64Float64ExtractHighWord32,
    Arm64Float64InsertLowWord32,
    Arm64Float64InsertHighWord32,
    Arm64Float64Mod,
    Arm64Float64MoveU64,
    Arm64U64MoveFloat64,
    Arm64Float64SilenceNaN,
    Arm64Sadalp,
    Arm64Saddlp,
    Arm64Uadalp,
    Arm64Uaddlp,
    Arm64Smlal,
    Arm64Smlal2,
    Arm64Umlal,
    Arm64Umlal2,
    Arm64FAdd,
    Arm64FSub,
    Arm64FMul,
    Arm64FMulElement,
    Arm64FDiv,
    Arm64FMin,
    Arm64FMax,
    Arm64FEq,
    Arm64FNe,
    Arm64FLt,
    Arm64FLe,
    Arm64FGt,
    Arm64FGe,
    Arm64FExtractLane,
    Arm64FReplaceLane,
    Arm64FSplat,
    Arm64FAbs,
    Arm64FNeg,
    Arm64FSqrt,
    Arm64F64x2Qfma,
    Arm64F64x2Qfms,
    Arm64F64x2Pmin,
    Arm64F64x2Pmax,
    Arm64F64x2ConvertLowI32x4S,
    Arm64F64x2ConvertLowI32x4U,
    Arm64F64x2PromoteLowF32x4,
    Arm64F32x4SConvertI32x4,
    Arm64F32x4UConvertI32x4,
    Arm64F32x4Qfma,
    Arm64F32x4Qfms,
    Arm64F32x4Pmin,
    Arm64F32x4Pmax,
    Arm64F32x4DemoteF64x2Zero,
    Arm64F16x8Pmin,
    Arm64F16x8Pmax,
    Arm64F32x4PromoteLowF16x8,
    Arm64F16x8SConvertI16x8,
    Arm64F16x8UConvertI16x8,
    Arm64F16x8DemoteF32x4Zero,
    Arm64F16x8DemoteF64x2Zero,
    Arm64I16x8SConvertF16x8,
    Arm64I16x8UConvertF16x8,
    Arm64F16x8Qfma,
    Arm64F16x8Qfms,
    Arm64IExtractLane,
    Arm64IReplaceLane,
    Arm64ISplat,
    Arm64IAbs,
    Arm64INeg,
    Arm64Mla,
    Arm64Mls,
    Arm64I64x2Shl,
    Arm64I64x2ShrS,
    Arm64I64x2Mul,
    Arm64I64x2ShrU,
    Arm64I64x2BitMask,
    Arm64I32x4SConvertF32x4,
    Arm64Sxtl,
    Arm64Sxtl2,
    Arm64Uxtl,
    Arm64Uxtl2,
    Arm64I32x4Shl,
    Arm64I32x4ShrS,
    Arm64I32x4Mul,
    Arm64I32x4UConvertF32x4,
    Arm64I32x4ShrU,
    Arm64I32x4BitMask,
    Arm64I32x4DotI16x8S,
    Arm64I16x8DotI8x16S,
    Arm64I32x4DotI8x16AddS,
    Arm64I8x16Addv,
    Arm64I16x8Addv,
    Arm64I32x4Addv,
    Arm64I64x2AddPair,
    Arm64F32x4AddReducePairwise,
    Arm64F64x2AddPair,
    Arm64I32x4TruncSatF64x2SZero,
    Arm64I32x4TruncSatF64x2UZero,
    Arm64IExtractLaneU,
    Arm64IExtractLaneS,
    Arm64I16x8Shl,
    Arm64I16x8ShrS,
    Arm64I16x8SConvertI32x4,
    Arm64I16x8Mul,
    Arm64I16x8ShrU,
    Arm64I16x8UConvertI32x4,
    Arm64I16x8Q15MulRSatS,
    Arm64I16x8BitMask,
    Arm64I8x16Shl,
    Arm64I8x16ShrS,
    Arm64I8x16SConvertI16x8,
    Arm64I8x16UConvertI16x8,
    Arm64I8x16ShrU,
    Arm64I8x16BitMask,
    Arm64S128Const,
    Arm64S128Dup,
    Arm64S128And,
    Arm64S128Or,
    Arm64S128Xor,
    Arm64S128Not,
    Arm64S128Select,
    Arm64S128AndNot,
    Arm64Ssra,
    Arm64Usra,
    Arm64S64x2UnzipLeft,
    Arm64S64x2UnzipRight,
    Arm64S32x4ZipLeft,
    Arm64S32x4ZipRight,
    Arm64S32x4UnzipLeft,
    Arm64S32x4UnzipRight,
    Arm64S32x4TransposeLeft,
    Arm64S32x4TransposeRight,
    Arm64S32x4OneLaneSwizzle,
    Arm64S64x1Shuffle,
    Arm64S64x2Shuffle,
    Arm64S32x1Shuffle,
    Arm64S32x2Shuffle,
    Arm64S32x4Shuffle,
    Arm64S16x1Shuffle,
    Arm64S16x2Shuffle,
    Arm64S8x2Shuffle,
    Arm64S16x8ZipLeft,
    Arm64S16x8ZipRight,
    Arm64S16x8UnzipLeft,
    Arm64S16x8UnzipRight,
    Arm64S16x8TransposeLeft,
    Arm64S16x8TransposeRight,
    Arm64S8x16ZipLeft,
    Arm64S8x16ZipRight,
    Arm64S8x16UnzipLeft,
    Arm64S8x16UnzipRight,
    Arm64S8x16TransposeLeft,
    Arm64S8x16TransposeRight,
    Arm64S8x16Concat,
    Arm64I8x16Swizzle,
    Arm64I8x16Shuffle,
    Arm64S32x4Reverse,
    Arm64S32x2Reverse,
    Arm64S16x4Reverse,
    Arm64S16x2Reverse,
    Arm64S8x8Reverse,
    Arm64S8x4Reverse,
    Arm64S8x2Reverse,
    Arm64V128AnyTrue,
    Arm64I64x2AllTrue,
    Arm64I32x4AllTrue,
    Arm64I16x8AllTrue,
    Arm64I8x16AllTrue,
    Arm64RoundingAverageU,
    Arm64IAdd,
    Arm64ISub,
    Arm64IEq,
    Arm64INe,
    Arm64IGtS,
    Arm64IGeS,
    Arm64ILtS,
    Arm64ILeS,
    Arm64IMinS,
    Arm64IMaxS,
    Arm64IMinU,
    Arm64IMaxU,
    Arm64IGtU,
    Arm64IGeU,
    Arm64IAddSatS,
    Arm64ISubSatS,
    Arm64IAddSatU,
    Arm64ISubSatU,
    Arm64TestAndBranch32,
    Arm64TestAndBranch,
    Arm64CompareAndBranch32,
    Arm64CompareAndBranch,
    Arm64LdrH,
    Arm64LdrS,
    Arm64LdrD,
    Arm64LdrQ,
    Arm64Ldrb,
    Arm64Ldrsb,
    Arm64LdrsbW,
    Arm64Ldrh,
    Arm64Ldrsh,
    Arm64LdrshW,
    Arm64Ldrsw,
    Arm64LdrW,
    Arm64Ldr,
    Arm64LdrDecompressTaggedSigned,
    Arm64LdrDecompressTagged,
    Arm64LdrDecompressProtected,
    Arm64LdarDecompressTaggedSigned,
    Arm64LdarDecompressTagged,
    Arm64LdrDecodeSandboxedPointer,
    Arm64Peek,
    Arm64LoadSplat,
    Arm64LoadLane,
    Arm64S128Load8x8S,
    Arm64S128Load8x8U,
    Arm64S128Load16x4S,
    Arm64S128Load16x4U,
    Arm64S128Load32x2S,
    Arm64S128Load32x2U,
    Arm64Claim,
    Arm64Poke,
    Arm64PokePair,
    Arm64StrH,
    Arm64StrS,
    Arm64StrD,
    Arm64StrQ,
    Arm64Strb,
    Arm64Strh,
    Arm64StrW,
    Arm64StrWPair,
    Arm64Str,
    Arm64StrPair,
    Arm64StrCompressTagged,
    Arm64StlrCompressTagged,
    Arm64StrIndirectPointer,
    Arm64StrEncodeSandboxedPointer,
    Arm64DmbIsh,
    Arm64DsbIsb,
    Arm64StoreLane,
    Arm64Word64AtomicLoadUint64,
    Arm64Word64AtomicStoreWord64,
    Arm64Word64AtomicAddUint64,
    Arm64Word64AtomicSubUint64,
    Arm64Word64AtomicAndUint64,
    Arm64Word64AtomicOrUint64,
    Arm64Word64AtomicXorUint64,
    Arm64Word64AtomicExchangeUint64,
    Arm64Word64AtomicCompareExchangeUint64,
    Unknown,
}

impl ArchOpcode {
    fn from_u32(value: u32) -> Self {
        match value {
            0 => ArchOpcode::Arm64Add,
            1 => ArchOpcode::Arm64Add32,
            2 => ArchOpcode::Arm64And,
            3 => ArchOpcode::Arm64And32,
            4 => ArchOpcode::Arm64Bic,
            5 => ArchOpcode::Arm64Bic32,
            6 => ArchOpcode::Arm64Clz,
            7 => ArchOpcode::Arm64Clz32,
            8 => ArchOpcode::Arm64Cmp,
            9 => ArchOpcode::Arm64Cmp32,
            10 => ArchOpcode::Arm64Cmn,
            11 => ArchOpcode::Arm64Cmn32,
            12 => ArchOpcode::Arm64Cnt,
            13 => ArchOpcode::Arm64Cnt32,
            14 => ArchOpcode::Arm64Cnt64,
            15 => ArchOpcode::Arm64Tst,
            16 => ArchOpcode::Arm64Tst32,
            17 => ArchOpcode::Arm64Or,
            18 => ArchOpcode::Arm64Or32,
            19 => ArchOpcode::Arm64Orn,
            20 => ArchOpcode::Arm64Orn32,
            21 => ArchOpcode::Arm64Eor,
            22 => ArchOpcode::Arm64Eor32,
            23 => ArchOpcode::Arm64Eon,
            24 => ArchOpcode::Arm64Eon32,
            25 => ArchOpcode::Arm64Sub,
            26 => ArchOpcode::Arm64Sub32,
            27 => ArchOpcode::Arm64Mul,
            28 => ArchOpcode::Arm64Mul32,
            29 => ArchOpcode::Arm64Smulh,
            30 => ArchOpcode::Arm64Smull,
            31 => ArchOpcode::Arm64Smull2,
            32 => ArchOpcode::Arm64Umulh,
            33 => ArchOpcode::Arm64Umull,
            34 => ArchOpcode::Arm64Umull2,
            35 => ArchOpcode::Arm64Madd,
            36 => ArchOpcode::Arm64Madd32,
            37 => ArchOpcode::Arm64Msub,
            38 => ArchOpcode::Arm64Msub32,
            39 => ArchOpcode::Arm64Mneg,
            40 => ArchOpcode::Arm64Mneg32,
            41 => ArchOpcode::Arm64Idiv,
            42 => ArchOpcode::Arm64Idiv32,
            43 => ArchOpcode::Arm64Udiv,
            44 => ArchOpcode::Arm64Udiv32,
            45 => ArchOpcode::Arm64Imod,
            46 => ArchOpcode::Arm64Imod32,
            47 => ArchOpcode::Arm64Umod,
            48 => ArchOpcode::Arm64Umod32,
            49 => ArchOpcode::Arm64Not,
            50 => ArchOpcode::Arm64Not32,
            51 => ArchOpcode::Arm64Lsl,
            52 => ArchOpcode::Arm64Lsl32,
            53 => ArchOpcode::Arm64Lsr,
            54 => ArchOpcode::Arm64Lsr32,
            55 => ArchOpcode::Arm64Asr,
            56 => ArchOpcode::Arm64Asr32,
            57 => ArchOpcode::Arm64Ror,
            58 => ArchOpcode::Arm64Ror32,
            59 => ArchOpcode::Arm64Mov32,
            60 => ArchOpcode::Arm64Sxtb,
            61 => ArchOpcode::Arm64Sxtb32,
            62 => ArchOpcode::Arm64Sxth,
            63 => ArchOpcode::Arm64Sxth32,
            64 => ArchOpcode::Arm64Sxtw,
            65 => ArchOpcode::Arm64Sbfx,
            66 => ArchOpcode::Arm64Sbfx32,
            67 => ArchOpcode::Arm64Ubfx,
            68 => ArchOpcode::Arm64Ubfx32,
            69 => ArchOpcode::Arm64Ubfiz32,
            70 => ArchOpcode::Arm64Sbfiz,
            71 => ArchOpcode::Arm64Bfi,
            72 => ArchOpcode::Arm64Rbit,
            73 => ArchOpcode::Arm64Rbit32,
            74 => ArchOpcode::Arm64Rev,
            75 => ArchOpcode::Arm64Rev32,
            76 => ArchOpcode::Arm64Float16RoundDown,
            77 => ArchOpcode::Arm64Float16RoundTiesEven,
            78 => ArchOpcode::Arm64Float16RoundTruncate,
            79 => ArchOpcode::Arm64Float16RoundUp,
            80 => ArchOpcode::Arm64Float32Cmp,
            81 => ArchOpcode::Arm64Float32Add,
            82 => ArchOpcode::Arm64Float32Sub,
            83 => ArchOpcode::Arm64Float32Mul,
            84 => ArchOpcode::Arm64Float32Div,
            85 => ArchOpcode::Arm64Float32Abs,
            86 => ArchOpcode::Arm64Float32Abd,
            87 => ArchOpcode::Arm64Float32Neg,
            88 => ArchOpcode::Arm64Float32Sqrt,
            89 => ArchOpcode::Arm64Float32Fnmul,
            90 => ArchOpcode::Arm64Float32RoundDown,
            91 => ArchOpcode::Arm64Float32Max,
            92 => ArchOpcode::Arm64Float32Min,
            93 => ArchOpcode::Arm64Float64Cmp,
            94 => ArchOpcode::Arm64Float64Add,
            95 => ArchOpcode::Arm64Float64Sub,
            96 => ArchOpcode::Arm64Float64Mul,
            97 => ArchOpcode::Arm64Float64Div,
            98 => ArchOpcode::Arm64Float64Max,
            99 => ArchOpcode::Arm64Float64Min,
            100 => ArchOpcode::Arm64Float64Abs,
            101 => ArchOpcode::Arm64Float64Abd,
            102 => ArchOpcode::Arm64Float64Neg,
            103 => ArchOpcode::Arm64Float64Sqrt,
            104 => ArchOpcode::Arm64Float64Fnmul,
            105 => ArchOpcode::Arm64Float64RoundDown,
            106 => ArchOpcode::Arm64Float64RoundTiesAway,
            107 => ArchOpcode::Arm64Float64RoundTruncate,
            108 => ArchOpcode::Arm64Float64RoundTiesEven,
            109 => ArchOpcode::Arm64Float64RoundUp,
            110 => ArchOpcode::Arm64Float32RoundTiesEven,
            111 => ArchOpcode::Arm64Float32RoundTruncate,
            112 => ArchOpcode::Arm64Float32RoundUp,
            113 => ArchOpcode::Arm64Float32ToFloat64,
            114 => ArchOpcode::Arm64Float64ToFloat32,
            115 => ArchOpcode::Arm64Float64ToFloat16RawBits,
            116 => ArchOpcode::Arm64Float16RawBitsToFloat64,
            117 => ArchOpcode::Arm64Float32ToInt32,
            118 => ArchOpcode::Arm64Float64ToInt32,
            119 => ArchOpcode::Arm64Float32ToUint32,
            120 => ArchOpcode::Arm64Float64ToUint32,
            121 => ArchOpcode::Arm64Float32ToInt64,
            122 => ArchOpcode::Arm64Float64ToInt64,
            123 => ArchOpcode::Arm64Float32ToUint64,
            124 => ArchOpcode::Arm64Float64ToUint64,
            125 => ArchOpcode::Arm64Int32ToFloat32,
            126 => ArchOpcode::Arm64Int32ToFloat64,
            127 => ArchOpcode::Arm64Int64ToFloat32,
            128 => ArchOpcode::Arm64Int64ToFloat64,
            129 => ArchOpcode::Arm64Uint32ToFloat32,
            130 => ArchOpcode::Arm64Uint32ToFloat64,
            131 => ArchOpcode::Arm64Uint64ToFloat32,
            132 => ArchOpcode::Arm64Uint64ToFloat64,
            133 => ArchOpcode::Arm64Float64ExtractLowWord32,
            134 => ArchOpcode::Arm64Float64ExtractHighWord32,
            135 => ArchOpcode::Arm64Float64InsertLowWord32,
            136 => ArchOpcode::Arm64Float64InsertHighWord32,
            137 => ArchOpcode::Arm64Float64Mod,
            138 => ArchOpcode::Arm64Float64MoveU64,
            139 => ArchOpcode::Arm64U64MoveFloat64,
            140 => ArchOpcode::Arm64Float64SilenceNaN,
            141 => ArchOpcode::Arm64Sadalp,
            142 => ArchOpcode::Arm64Saddlp,
            143 => ArchOpcode::Arm64Uadalp,
            144 => ArchOpcode::Arm64Uaddlp,
            145 => ArchOpcode::Arm64Smlal,
            146 => ArchOpcode::Arm64Smlal2,
            147 => ArchOpcode::Arm64Umlal,
            148 => ArchOpcode::Arm64Umlal2,
            149 => ArchOpcode::Arm64FAdd,
            150 => ArchOpcode::Arm64FSub,
            151 => ArchOpcode::Arm64FMul,
            152 => ArchOpcode::Arm64FMulElement,
            153 => ArchOpcode::Arm64FDiv,
            154 => ArchOpcode::Arm64FMin,
            155 => ArchOpcode::Arm64FMax,
            156 => ArchOpcode::Arm64FEq,
            157 => ArchOpcode::Arm64FNe,
            158 => ArchOpcode::Arm64FLt,
            159 => ArchOpcode::Arm64FLe,
            160 => ArchOpcode::Arm64FGt,
            161 => ArchOpcode::Arm64FGe,
            162 => ArchOpcode::Arm64FExtractLane,
            163 => ArchOpcode::Arm64FReplaceLane,
            164 => ArchOpcode::Arm64FSplat,
            165 => ArchOpcode::Arm64FAbs,
            166 => ArchOpcode::Arm64FNeg,
            167 => ArchOpcode::Arm64FSqrt,
            168 => ArchOpcode::Arm64F64x2Qfma,
            169 => ArchOpcode::Arm64F64x2Qfms,
            170 => ArchOpcode::Arm64F64x2Pmin,
            171 => ArchOpcode::Arm64F64x2Pmax,
            172 => ArchOpcode::Arm64F64x2ConvertLowI32x4S,
            173 => ArchOpcode::Arm64F64x2ConvertLowI32x4U,
            174 => ArchOpcode::Arm64F64x2PromoteLowF32x4,
            175 => ArchOpcode::Arm64F32x4SConvertI32x4,
            176 => ArchOpcode::Arm64F32x4UConvertI32x4,
            177 => ArchOpcode::Arm64F32x4Qfma,
            178 => ArchOpcode::Arm64F32x4Qfms,
            179 => ArchOpcode::Arm64F32x4Pmin,
            180 => ArchOpcode::Arm64F32x4Pmax,
            181 => ArchOpcode::Arm64F32x4DemoteF64x2Zero,
            182 => ArchOpcode::Arm64F16x8Pmin,
            183 => ArchOpcode::Arm64F16x8Pmax,
            184 => ArchOpcode::Arm64F32x4PromoteLowF16x8,
            185 => ArchOpcode::Arm64F16x8SConvertI16x8,
            186 => ArchOpcode::Arm64F16x8UConvertI16x8,
            187 => ArchOpcode::Arm64F16x8DemoteF32x4Zero,
            188 => ArchOpcode::Arm64F16x8DemoteF64x2Zero,
            189 => ArchOpcode::Arm64I16x8SConvertF16x8,
            190 => ArchOpcode::Arm64I16x8UConvertF16x8,
            191 => ArchOpcode::Arm64F16x8Qfma,
            192 => ArchOpcode::Arm64F16x8Qfms,
            193 => ArchOpcode::Arm64IExtractLane,
            194 => ArchOpcode::Arm64IReplaceLane,
            195 => ArchOpcode::Arm64ISplat,
            196 => ArchOpcode::Arm64IAbs,
            197 => ArchOpcode::Arm64INeg,
            198 => ArchOpcode::Arm64Mla,
            199 => ArchOpcode::Arm64Mls,
            200 => ArchOpcode::Arm64I64x2Shl,
            201 => ArchOpcode::Arm64I64x2ShrS,
            202 => ArchOpcode::Arm64I64x2Mul,
            203 => ArchOpcode::Arm64I64x2ShrU,
            204 => ArchOpcode::Arm64I64x2BitMask,
            205 => ArchOpcode::Arm64I32x4SConvertF32x4,
            206 => ArchOpcode::Arm64Sxtl,
            207 => ArchOpcode::Arm64Sxtl2,
            208 => ArchOpcode::Arm64Uxtl,
            209 => ArchOpcode::Arm64Uxtl2,
            210 => ArchOpcode::Arm64I32x4Shl,
            211 => ArchOpcode::Arm6
