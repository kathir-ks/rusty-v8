{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/torque/kythe-data.h",
  "imports": [
    "src/base/contextual.h",
    "src/torque/ast.h",
    "src/torque/global-context.h",
    "src/torque/implementation-visitor.h"
  ],
  "classes": [
    {
      "name": "KythePosition",
      "properties": [
        "file_path",
        "start_offset",
        "end_offset"
      ],
      "methods": []
    },
    {
      "name": "KytheConsumer",
      "properties": [],
      "methods": [
        {
          "name": "~KytheConsumer",
          "parameters": [],
          "return_type": "virtual",
          "logic": "Virtual destructor.  Must be defined in derived classes.  Ensures proper cleanup in polymorphic scenarios."
        },
        {
          "name": "AddDefinition",
          "parameters": [
            "Kind kind",
            "std::string name",
            "KythePosition pos"
          ],
          "return_type": "kythe_entity_t",
          "logic": "Adds a definition to the Kythe graph.  Represents the point where an entity (e.g., variable, function) is defined."
        },
        {
          "name": "AddUse",
          "parameters": [
            "Kind kind",
            "kythe_entity_t entity",
            "KythePosition use_pos"
          ],
          "return_type": "void",
          "logic": "Adds a use to the Kythe graph. Represents a point where an existing entity is used or referenced."
        },
        {
          "name": "AddCall",
          "parameters": [
            "Kind kind",
            "kythe_entity_t caller_entity",
            "KythePosition call_pos",
            "kythe_entity_t callee_entity"
          ],
          "return_type": "void",
          "logic": "Adds a call edge to the Kythe graph. Represents a function call, connecting the caller to the callee."
        }
      ]
    },
    {
      "name": "KytheData",
      "properties": [
        "consumer_",
        "constants_",
        "callables_",
        "field_uses_",
        "local_bindings_",
        "types_",
        "class_fields_"
      ],
      "methods": [
        {
          "name": "KytheData",
          "parameters": [],
          "return_type": "void",
          "logic": "Default constructor."
        },
        {
          "name": "SetConsumer",
          "parameters": [
            "KytheConsumer* consumer"
          ],
          "return_type": "static void",
          "logic": "Sets the KytheConsumer to be used by the KytheData instance. This allows for different KytheConsumers to be used at different times."
        },
        {
          "name": "AddConstantDefinition",
          "parameters": [
            "const Value* constant"
          ],
          "return_type": "static kythe_entity_t",
          "logic": "Adds a definition for a constant to the Kythe graph."
        },
        {
          "name": "AddConstantUse",
          "parameters": [
            "SourcePosition use_position",
            "const Value* constant"
          ],
          "return_type": "static void",
          "logic": "Adds a use of a constant to the Kythe graph."
        },
        {
          "name": "AddFunctionDefinition",
          "parameters": [
            "Callable* callable"
          ],
          "return_type": "static kythe_entity_t",
          "logic": "Adds a definition for a callable (function, method) to the Kythe graph."
        },
        {
          "name": "AddCall",
          "parameters": [
            "Callable* caller",
            "SourcePosition call_position",
            "Callable* callee"
          ],
          "return_type": "static void",
          "logic": "Adds a call edge between a caller and callee function to the Kythe graph."
        },
        {
          "name": "AddClassFieldDefinition",
          "parameters": [
            "const Field* field"
          ],
          "return_type": "static kythe_entity_t",
          "logic": "Adds a definition for a class field to the Kythe graph."
        },
        {
          "name": "AddClassFieldUse",
          "parameters": [
            "SourcePosition use_position",
            "const Field* field"
          ],
          "return_type": "static void",
          "logic": "Adds a use of a class field to the Kythe graph."
        },
        {
          "name": "AddBindingDefinition",
          "parameters": [
            "Binding<LocalValue>* binding"
          ],
          "return_type": "static kythe_entity_t",
          "logic": "Adds a definition for a binding (local variable) to the Kythe graph."
        },
        {
          "name": "AddBindingDefinition",
          "parameters": [
            "Binding<LocalLabel>* binding"
          ],
          "return_type": "static kythe_entity_t",
          "logic": "Adds a definition for a binding (local label) to the Kythe graph."
        },
        {
          "name": "AddBindingUse",
          "parameters": [
            "SourcePosition use_position",
            "Binding<LocalValue>* binding"
          ],
          "return_type": "static void",
          "logic": "Adds a use of a local value binding to the Kythe graph."
        },
        {
          "name": "AddBindingUse",
          "parameters": [
            "SourcePosition use_position",
            "Binding<LocalLabel>* binding"
          ],
          "return_type": "static void",
          "logic": "Adds a use of a local label binding to the Kythe graph."
        },
        {
          "name": "AddTypeDefinition",
          "parameters": [
            "const Declarable* type_decl"
          ],
          "return_type": "static kythe_entity_t",
          "logic": "Adds a definition for a type to the Kythe graph."
        },
        {
          "name": "AddTypeUse",
          "parameters": [
            "SourcePosition use_position",
            "const Declarable* type_decl"
          ],
          "return_type": "static void",
          "logic": "Adds a use of a type to the Kythe graph."
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "AddBindingDefinitionImpl",
      "parameters": [
        "uint64_t binding_index",
        "const std::string& name",
        "const SourcePosition& ident_pos"
      ],
      "return_type": "kythe_entity_t",
      "logic": "Implementation detail for adding a binding definition to Kythe."
    }
  ]
}