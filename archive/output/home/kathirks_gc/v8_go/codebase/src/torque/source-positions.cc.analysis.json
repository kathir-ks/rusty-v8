{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/torque/source-positions.cc",
  "imports": [
    "src/torque/source-positions.h",
    "fstream",
    "src/torque/utils.h"
  ],
  "classes": [
    {
      "name": "SourceFileMap",
      "properties": [
        "sources_",
        "v8_root_"
      ],
      "methods": [
        {
          "name": "PathFromV8Root",
          "parameters": [
            "SourceId file"
          ],
          "return_type": "const std::string&",
          "logic": "Returns the path of the source file relative to the V8 root directory, given a SourceId.  Asserts that the SourceId is valid."
        },
        {
          "name": "AbsolutePath",
          "parameters": [
            "SourceId file"
          ],
          "return_type": "std::string",
          "logic": "Returns the absolute path of the source file. If the path from root starts with \"file://\", it returns the path as is, otherwise it prepends the V8 root path."
        },
        {
          "name": "PathFromV8RootWithoutExtension",
          "parameters": [
            "SourceId file"
          ],
          "return_type": "std::string",
          "logic": "Returns the path of the source file relative to the V8 root directory, without the \".tq\" extension. Throws an error if the file doesn't have a \".tq\" extension."
        },
        {
          "name": "AddSource",
          "parameters": [
            "std::string path"
          ],
          "return_type": "SourceId",
          "logic": "Adds a new source file path to the map and returns its SourceId.  The SourceId is the index of the path in the internal vector."
        },
        {
          "name": "GetSourceId",
          "parameters": [
            "const std::string& path"
          ],
          "return_type": "SourceId",
          "logic": "Returns the SourceId for a given source file path. If the path is not found in the map, returns SourceId::Invalid()."
        },
        {
          "name": "AllSources",
          "parameters": [],
          "return_type": "std::vector<SourceId>",
          "logic": "Returns a vector containing all valid SourceIds currently in the map."
        },
        {
          "name": "FileRelativeToV8RootExists",
          "parameters": [
            "const std::string& path"
          ],
          "return_type": "bool",
          "logic": "Checks if a file exists relative to the V8 root directory by attempting to open it. Returns true if the file exists and can be opened, false otherwise."
        }
      ]
    }
  ],
  "functions": [],
  "EXPORTED_CONTEXTUAL_VARIABLES": [
    "v8::internal::torque::CurrentSourceFile",
    "v8::internal::torque::SourceFileMap"
  ]
}