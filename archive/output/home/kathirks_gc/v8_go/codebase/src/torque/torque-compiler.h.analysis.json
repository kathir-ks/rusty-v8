{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/torque/torque-compiler.h",
  "imports": [
    "<optional>",
    "src/base/contextual.h",
    "src/torque/ast.h",
    "src/torque/kythe-data.h",
    "src/torque/server-data.h",
    "src/torque/source-positions.h",
    "src/torque/utils.h"
  ],
  "classes": [
    {
      "name": "TorqueCompilerOptions",
      "properties": [
        "output_directory",
        "v8_root",
        "collect_language_server_data",
        "collect_kythe_data",
        "force_assert_statements",
        "force_32bit_output",
        "annotate_ir",
        "strip_v8_root"
      ],
      "methods": []
    },
    {
      "name": "TorqueCompilerResult",
      "properties": [
        "source_file_map",
        "language_server_data",
        "messages"
      ],
      "methods": []
    },
    {
      "name": "TorqueCompilationUnit",
      "properties": [
        "source_file_path",
        "file_content"
      ],
      "methods": []
    }
  ],
  "functions": [
    {
      "name": "CompileTorque",
      "parameters": [
        "const std::string& source",
        "TorqueCompilerOptions options"
      ],
      "return_type": "TorqueCompilerResult",
      "logic": "Compiles Torque source code from a string with given options."
    },
    {
      "name": "CompileTorque",
      "parameters": [
        "const std::vector<std::string>& files",
        "TorqueCompilerOptions options"
      ],
      "return_type": "TorqueCompilerResult",
      "logic": "Compiles Torque source code from a vector of file paths with given options."
    },
    {
      "name": "CompileTorqueForKythe",
      "parameters": [
        "std::vector<TorqueCompilationUnit> units",
        "TorqueCompilerOptions options",
        "KytheConsumer* kythe_consumer"
      ],
      "return_type": "TorqueCompilerResult",
      "logic": "Compiles Torque source code for Kythe indexing using given options, compilation units and a Kythe consumer."
    }
  ]
}