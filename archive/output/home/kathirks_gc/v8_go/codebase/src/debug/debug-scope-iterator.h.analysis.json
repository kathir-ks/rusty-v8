{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/debug/debug-scope-iterator.h",
  "imports": [
    "src/debug/debug-frames.h",
    "src/debug/debug-interface.h",
    "src/debug/debug-scopes.h"
  ],
  "classes": [
    {
      "name": "DebugScopeIterator",
      "properties": [
        "iterator_"
      ],
      "methods": [
        {
          "name": "DebugScopeIterator",
          "parameters": [
            "Isolate* isolate",
            "FrameInspector* frame_inspector"
          ],
          "return_type": "",
          "logic": "Constructor that initializes the DebugScopeIterator using an Isolate and a FrameInspector."
        },
        {
          "name": "DebugScopeIterator",
          "parameters": [
            "Isolate* isolate",
            "DirectHandle<JSFunction> function"
          ],
          "return_type": "",
          "logic": "Constructor that initializes the DebugScopeIterator using an Isolate and a JSFunction."
        },
        {
          "name": "DebugScopeIterator",
          "parameters": [
            "Isolate* isolate",
            "Handle<JSGeneratorObject> generator"
          ],
          "return_type": "",
          "logic": "Constructor that initializes the DebugScopeIterator using an Isolate and a JSGeneratorObject."
        },
        {
          "name": "Done",
          "parameters": [],
          "return_type": "bool",
          "logic": "Checks if the scope iteration is complete."
        },
        {
          "name": "Advance",
          "parameters": [],
          "return_type": "void",
          "logic": "Moves the iterator to the next scope."
        },
        {
          "name": "GetType",
          "parameters": [],
          "return_type": "ScopeType",
          "logic": "Returns the type of the current scope."
        },
        {
          "name": "GetObject",
          "parameters": [],
          "return_type": "v8::Local<v8::Object>",
          "logic": "Returns the object associated with the current scope."
        },
        {
          "name": "GetFunctionDebugName",
          "parameters": [],
          "return_type": "v8::Local<v8::Value>",
          "logic": "Returns the debug name of the function associated with the current scope."
        },
        {
          "name": "GetScriptId",
          "parameters": [],
          "return_type": "int",
          "logic": "Returns the script ID of the current scope."
        },
        {
          "name": "HasLocationInfo",
          "parameters": [],
          "return_type": "bool",
          "logic": "Checks if the current scope has location information."
        },
        {
          "name": "GetStartLocation",
          "parameters": [],
          "return_type": "debug::Location",
          "logic": "Returns the start location of the current scope."
        },
        {
          "name": "GetEndLocation",
          "parameters": [],
          "return_type": "debug::Location",
          "logic": "Returns the end location of the current scope."
        },
        {
          "name": "SetVariableValue",
          "parameters": [
            "v8::Local<v8::String> name",
            "v8::Local<v8::Value> value"
          ],
          "return_type": "bool",
          "logic": "Sets the value of a variable in the current scope."
        },
        {
          "name": "ShouldIgnore",
          "parameters": [],
          "return_type": "bool",
          "logic": "Determines if the current scope should be ignored during iteration."
        }
      ]
    }
  ],
  "functions": []
}