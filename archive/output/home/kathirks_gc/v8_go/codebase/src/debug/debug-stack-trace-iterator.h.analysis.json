{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/debug/debug-stack-trace-iterator.h",
  "imports": [
    "<memory>",
    "src/debug/debug-frames.h",
    "src/debug/debug-interface.h",
    "src/execution/frames.h"
  ],
  "classes": [
    {
      "name": "DebugStackTraceIterator",
      "properties": [
        "isolate_",
        "iterator_",
        "frame_inspector_",
        "inlined_frame_index_",
        "is_top_frame_",
        "resumable_fn_on_stack_"
      ],
      "methods": [
        {
          "name": "DebugStackTraceIterator",
          "parameters": [
            "Isolate* isolate",
            "int index"
          ],
          "return_type": "void",
          "logic": "Constructor for the DebugStackTraceIterator.  Initializes the iterator with the given isolate and stack frame index."
        },
        {
          "name": "~DebugStackTraceIterator",
          "parameters": [],
          "return_type": "void",
          "logic": "Destructor for the DebugStackTraceIterator.  Releases resources."
        },
        {
          "name": "Done",
          "parameters": [],
          "return_type": "bool",
          "logic": "Checks if the iteration is complete (end of the stack trace)."
        },
        {
          "name": "Advance",
          "parameters": [],
          "return_type": "void",
          "logic": "Moves the iterator to the next stack frame."
        },
        {
          "name": "GetContextId",
          "parameters": [],
          "return_type": "int",
          "logic": "Returns the context ID of the current stack frame."
        },
        {
          "name": "GetReceiver",
          "parameters": [],
          "return_type": "v8::MaybeLocal<v8::Value>",
          "logic": "Returns the 'this' value (receiver) of the current stack frame."
        },
        {
          "name": "GetReturnValue",
          "parameters": [],
          "return_type": "v8::Local<v8::Value>",
          "logic": "Returns the return value of the function in the current stack frame."
        },
        {
          "name": "GetFunctionDebugName",
          "parameters": [],
          "return_type": "v8::Local<v8::String>",
          "logic": "Returns the debug name of the function in the current stack frame."
        },
        {
          "name": "GetScript",
          "parameters": [],
          "return_type": "v8::Local<v8::debug::Script>",
          "logic": "Returns the script object associated with the current stack frame."
        },
        {
          "name": "GetSourceLocation",
          "parameters": [],
          "return_type": "debug::Location",
          "logic": "Returns the source location (line number, column number) of the current statement in the current stack frame."
        },
        {
          "name": "GetFunctionLocation",
          "parameters": [],
          "return_type": "debug::Location",
          "logic": "Returns the source location of the function definition in the current stack frame."
        },
        {
          "name": "GetFunction",
          "parameters": [],
          "return_type": "v8::Local<v8::Function>",
          "logic": "Returns the function object associated with the current stack frame."
        },
        {
          "name": "GetScopeIterator",
          "parameters": [],
          "return_type": "std::unique_ptr<v8::debug::ScopeIterator>",
          "logic": "Returns an iterator for the scopes available in the current stack frame."
        },
        {
          "name": "CanBeRestarted",
          "parameters": [],
          "return_type": "bool",
          "logic": "Checks if the execution can be restarted from the current stack frame."
        },
        {
          "name": "Evaluate",
          "parameters": [
            "v8::Local<v8::String> source",
            "bool throw_on_side_effect"
          ],
          "return_type": "v8::MaybeLocal<v8::Value>",
          "logic": "Evaluates the given source code in the context of the current stack frame."
        },
        {
          "name": "PrepareRestart",
          "parameters": [],
          "return_type": "void",
          "logic": "Prepares the current stack frame for restarting execution from that point."
        },
        {
          "name": "GetSharedFunctionInfo",
          "parameters": [],
          "return_type": "Handle<SharedFunctionInfo>",
          "logic": "Returns the SharedFunctionInfo object associated with the current function."
        },
        {
          "name": "UpdateInlineFrameIndexAndResumableFnOnStack",
          "parameters": [],
          "return_type": "void",
          "logic": "Updates internal state related to inline frames and resumable functions on the stack.  (Private method)"
        }
      ]
    }
  ],
  "functions": []
}