{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/debug/wasm/gdb-server/wasm-module-debug.h",
  "imports": [
    "src/debug/debug-interface.h",
    "src/debug/wasm/gdb-server/gdb-remote-util.h",
    "src/execution/frames.h"
  ],
  "classes": [
    {
      "name": "WasmModuleDebug",
      "properties": [
        "v8::Isolate* isolate_",
        "Global<debug::WasmScript> wasm_script_"
      ],
      "methods": [
        {
          "name": "WasmModuleDebug",
          "parameters": [
            "v8::Isolate* isolate",
            "Local<debug::WasmScript> script"
          ],
          "return_type": "void",
          "logic": "Constructor for the WasmModuleDebug class, initializes the isolate and WasmScript."
        },
        {
          "name": "GetModuleName",
          "parameters": [],
          "return_type": "std::string",
          "logic": "Returns the name of the Wasm module."
        },
        {
          "name": "GetIsolate",
          "parameters": [],
          "return_type": "i::Isolate*",
          "logic": "Returns the internal isolate pointer associated with the Wasm module."
        },
        {
          "name": "GetWasmGlobal",
          "parameters": [
            "Isolate* isolate",
            "uint32_t frame_index",
            "uint32_t index",
            "uint8_t* buffer",
            "uint32_t buffer_size",
            "uint32_t* size"
          ],
          "return_type": "bool",
          "logic": "Gets the value of the specified global variable in the given stack frame, writing it to the buffer."
        },
        {
          "name": "GetWasmLocal",
          "parameters": [
            "Isolate* isolate",
            "uint32_t frame_index",
            "uint32_t index",
            "uint8_t* buffer",
            "uint32_t buffer_size",
            "uint32_t* size"
          ],
          "return_type": "bool",
          "logic": "Gets the value of the specified local variable in the given stack frame, writing it to the buffer."
        },
        {
          "name": "GetWasmStackValue",
          "parameters": [
            "Isolate* isolate",
            "uint32_t frame_index",
            "uint32_t index",
            "uint8_t* buffer",
            "uint32_t buffer_size",
            "uint32_t* size"
          ],
          "return_type": "bool",
          "logic": "Gets the value of the specified operand stack value in the given stack frame, writing it to the buffer."
        },
        {
          "name": "GetWasmMemory",
          "parameters": [
            "Isolate* isolate",
            "uint32_t offset",
            "uint8_t* buffer",
            "uint32_t size"
          ],
          "return_type": "uint32_t",
          "logic": "Reads data from the Wasm memory instance associated with the module."
        },
        {
          "name": "GetWasmData",
          "parameters": [
            "Isolate* isolate",
            "uint32_t offset",
            "uint8_t* buffer",
            "uint32_t size"
          ],
          "return_type": "uint32_t",
          "logic": "Reads data from the Wasm data segment associated with the module."
        },
        {
          "name": "GetWasmModuleBytes",
          "parameters": [
            "wasm_addr_t wasm_addr",
            "uint8_t* buffer",
            "uint32_t size"
          ],
          "return_type": "uint32_t",
          "logic": "Gets bytes from the Code space of the Wasm module."
        },
        {
          "name": "AddBreakpoint",
          "parameters": [
            "uint32_t offset",
            "int* breakpoint_id"
          ],
          "return_type": "bool",
          "logic": "Inserts a breakpoint at the given offset in the Wasm module."
        },
        {
          "name": "RemoveBreakpoint",
          "parameters": [
            "uint32_t offset",
            "int breakpoint_id"
          ],
          "return_type": "void",
          "logic": "Removes a breakpoint at the given offset in the Wasm module."
        },
        {
          "name": "PrepareStep",
          "parameters": [],
          "return_type": "void",
          "logic": "Prepares the Wasm interpreter for single-stepping."
        },
        {
          "name": "GetCallStack",
          "parameters": [
            "uint32_t debug_context_id",
            "Isolate* isolate"
          ],
          "return_type": "std::vector<wasm_addr_t>",
          "logic": "Returns the current call stack as a vector of instruction pointers."
        },
        {
          "name": "GetWasmInstance",
          "parameters": [
            "Isolate* isolate",
            "uint32_t frame_index"
          ],
          "return_type": "Handle<WasmInstanceObject>",
          "logic": "Returns the WasmInstance associated with the given stack frame."
        },
        {
          "name": "GetFirstWasmInstance",
          "parameters": [],
          "return_type": "Handle<WasmInstanceObject>",
          "logic": "Returns the first WasmInstance for this Wasm module."
        },
        {
          "name": "FindWasmFrame",
          "parameters": [
            "DebuggableStackFrameIterator* frame_it",
            "uint32_t* frame_index"
          ],
          "return_type": "std::vector<FrameSummary>",
          "logic": "Iterates through the stack frames and returns information for the specified Wasm stack frame."
        },
        {
          "name": "GetWasmValue",
          "parameters": [
            "const wasm::WasmValue& wasm_value",
            "uint8_t* buffer",
            "uint32_t buffer_size",
            "uint32_t* size"
          ],
          "return_type": "bool",
          "logic": "Converts a WasmValue into an array of bytes."
        }
      ]
    }
  ],
  "functions": []
}