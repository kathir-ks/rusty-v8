{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/debug/wasm/gdb-server/gdb-server-thread.h",
  "imports": [
    "src/base/platform/platform.h",
    "src/base/platform/semaphore.h",
    "src/debug/wasm/gdb-server/target.h",
    "src/debug/wasm/gdb-server/transport.h"
  ],
  "classes": [
    {
      "name": "GdbServerThread",
      "properties": [
        "gdb_server_",
        "start_semaphore_",
        "mutex_",
        "transport_",
        "target_"
      ],
      "methods": [
        {
          "name": "GdbServerThread",
          "parameters": [
            "GdbServer* gdb_server"
          ],
          "return_type": "explicit",
          "logic": "Constructor of the GdbServerThread. Takes a GdbServer pointer as argument."
        },
        {
          "name": "operator=",
          "parameters": [
            "const GdbServerThread&"
          ],
          "return_type": "GdbServerThread&",
          "logic": "Deleted copy assignment operator."
        },
        {
          "name": "GdbServerThread",
          "parameters": [
            "const GdbServerThread&"
          ],
          "return_type": null,
          "logic": "Deleted copy constructor."
        },
        {
          "name": "Run",
          "parameters": [],
          "return_type": "void",
          "logic": "The main function executed by the GDB server thread. Implements the communication with a debugger."
        },
        {
          "name": "StartAndInitialize",
          "parameters": [],
          "return_type": "bool",
          "logic": "Starts the GDB-server thread and waits for initialization to complete."
        },
        {
          "name": "Stop",
          "parameters": [],
          "return_type": "void",
          "logic": "Stops the GDB-server thread, gracefully closing any active debugging session."
        },
        {
          "name": "GetTarget",
          "parameters": [],
          "return_type": "Target&",
          "logic": "Returns a reference to the Target object associated with this server."
        },
        {
          "name": "CleanupThread",
          "parameters": [],
          "return_type": "void",
          "logic": "Performs thread cleanup operations, such as releasing resources."
        }
      ]
    }
  ],
  "functions": []
}