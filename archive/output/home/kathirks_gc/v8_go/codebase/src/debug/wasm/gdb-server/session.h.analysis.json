{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/debug/wasm/gdb-server/session.h",
  "imports": [
    "src/base/macros.h"
  ],
  "classes": [
    {
      "name": "Session",
      "properties": [
        "io_",
        "connected_",
        "ack_enabled_"
      ],
      "methods": [
        {
          "name": "Session",
          "parameters": [
            "TransportBase* transport"
          ],
          "return_type": "explicit",
          "logic": "Constructor for the Session class. Initializes the transport object."
        },
        {
          "name": "Session",
          "parameters": [
            "const Session&"
          ],
          "return_type": "deleted",
          "logic": "Deleted copy constructor to prevent copying."
        },
        {
          "name": "operator=",
          "parameters": [
            "const Session&"
          ],
          "return_type": "Session&",
          "logic": "Deleted assignment operator to prevent assignment."
        },
        {
          "name": "SendPacket",
          "parameters": [
            "Packet* packet",
            "bool expect_ack"
          ],
          "return_type": "bool",
          "logic": "Sends a packet through the transport, optionally waiting for an acknowledgement."
        },
        {
          "name": "GetPacket",
          "parameters": [
            "Packet* packet"
          ],
          "return_type": "bool",
          "logic": "Receives a packet from the transport."
        },
        {
          "name": "IsDataAvailable",
          "parameters": [],
          "return_type": "bool",
          "logic": "Checks if there is data available to read from the transport."
        },
        {
          "name": "IsConnected",
          "parameters": [],
          "return_type": "bool",
          "logic": "Checks if the connection to the GDB client is still valid."
        },
        {
          "name": "Disconnect",
          "parameters": [],
          "return_type": "void",
          "logic": "Shuts down the connection to the GDB client."
        },
        {
          "name": "WaitForDebugStubEvent",
          "parameters": [],
          "return_type": "void",
          "logic": "Blocks the GDB-remote thread until a network or thread event occurs."
        },
        {
          "name": "SignalThreadEvent",
          "parameters": [],
          "return_type": "bool",
          "logic": "Signals that the debuggee execution stopped due to a trap or breakpoint."
        },
        {
          "name": "EnableAck",
          "parameters": [
            "bool ack_enabled"
          ],
          "return_type": "void",
          "logic": "Enables or disables the acknowledgement mechanism for packet transmission."
        },
        {
          "name": "GetChar",
          "parameters": [
            "char* ch"
          ],
          "return_type": "bool",
          "logic": "Reads a single character from the transport."
        },
        {
          "name": "GetPayload",
          "parameters": [
            "Packet* pkt",
            "uint8_t* checksum"
          ],
          "return_type": "bool",
          "logic": "Reads the payload of a packet from the transport, including checksum verification."
        }
      ]
    }
  ],
  "functions": []
}