{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/zone/zone-chunk-list.h",
  "imports": [
    "<algorithm>",
    "src/base/iterator.h",
    "src/common/globals.h",
    "src/utils/memcopy.h",
    "src/zone/zone.h"
  ],
  "classes": [
    {
      "name": "ZoneChunkList",
      "properties": [
        "zone_",
        "size_",
        "front_",
        "last_nonempty_"
      ],
      "methods": [
        {
          "name": "ZoneChunkList",
          "parameters": [
            "Zone* zone"
          ],
          "return_type": "constructor",
          "logic": "Constructor that initializes the ZoneChunkList with a given Zone."
        },
        {
          "name": "size",
          "parameters": [],
          "return_type": "size_t",
          "logic": "Returns the number of elements in the list."
        },
        {
          "name": "empty",
          "parameters": [],
          "return_type": "bool",
          "logic": "Checks if the list is empty."
        },
        {
          "name": "front",
          "parameters": [],
          "return_type": "T&",
          "logic": "Returns a reference to the first element in the list."
        },
        {
          "name": "front",
          "parameters": [],
          "return_type": "const T&",
          "logic": "Returns a const reference to the first element in the list."
        },
        {
          "name": "back",
          "parameters": [],
          "return_type": "T&",
          "logic": "Returns a reference to the last element in the list."
        },
        {
          "name": "back",
          "parameters": [],
          "return_type": "const T&",
          "logic": "Returns a const reference to the last element in the list."
        },
        {
          "name": "push_back",
          "parameters": [
            "const T& item"
          ],
          "return_type": "void",
          "logic": "Adds an item to the end of the list. Allocates a new chunk if the last one is full."
        },
        {
          "name": "push_front",
          "parameters": [
            "const T& item"
          ],
          "return_type": "void",
          "logic": "Adds an item to the front of the list. Allocates a new chunk if the first one is full."
        },
        {
          "name": "Rewind",
          "parameters": [
            "const size_t limit = 0"
          ],
          "return_type": "void",
          "logic": "Reduces the size of the list to the given limit, without freeing the allocated memory. Resets the position of chunks beyond the limit."
        },
        {
          "name": "Find",
          "parameters": [
            "const size_t index"
          ],
          "return_type": "iterator",
          "logic": "Finds and returns an iterator to the element at the given index (does not check bounds)."
        },
        {
          "name": "Find",
          "parameters": [
            "const size_t index"
          ],
          "return_type": "const_iterator",
          "logic": "Finds and returns a const iterator to the element at the given index (does not check bounds)."
        },
        {
          "name": "SplitAt",
          "parameters": [
            "iterator split_begin"
          ],
          "return_type": "ZoneChunkList<T>",
          "logic": "Splits the list into two, where the new list contains all elements starting at `split_begin`."
        },
        {
          "name": "Append",
          "parameters": [
            "ZoneChunkList<T>& other"
          ],
          "return_type": "void",
          "logic": "Appends another ZoneChunkList to the end of this list."
        },
        {
          "name": "CopyTo",
          "parameters": [
            "T* ptr"
          ],
          "return_type": "void",
          "logic": "Copies the contents of the list to the given pointer."
        },
        {
          "name": "begin",
          "parameters": [],
          "return_type": "iterator",
          "logic": "Returns an iterator to the beginning of the list."
        },
        {
          "name": "end",
          "parameters": [],
          "return_type": "iterator",
          "logic": "Returns an iterator to the end of the list."
        },
        {
          "name": "rbegin",
          "parameters": [],
          "return_type": "reverse_iterator",
          "logic": "Returns a reverse iterator to the beginning of the list."
        },
        {
          "name": "rend",
          "parameters": [],
          "return_type": "reverse_iterator",
          "logic": "Returns a reverse iterator to the end of the list."
        },
        {
          "name": "begin",
          "parameters": [],
          "return_type": "const_iterator",
          "logic": "Returns a const iterator to the beginning of the list."
        },
        {
          "name": "end",
          "parameters": [],
          "return_type": "const_iterator",
          "logic": "Returns a const iterator to the end of the list."
        },
        {
          "name": "rbegin",
          "parameters": [],
          "return_type": "const_reverse_iterator",
          "logic": "Returns a const reverse iterator to the beginning of the list."
        },
        {
          "name": "rend",
          "parameters": [],
          "return_type": "const_reverse_iterator",
          "logic": "Returns a const reverse iterator to the end of the list."
        },
        {
          "name": "swap",
          "parameters": [
            "ZoneChunkList<T>& other"
          ],
          "return_type": "void",
          "logic": "Swaps the contents of this list with another."
        }
      ]
    },
    {
      "name": "ZoneChunkList::Chunk",
      "properties": [
        "capacity_",
        "position_",
        "next_",
        "previous_"
      ],
      "methods": [
        {
          "name": "size",
          "parameters": [],
          "return_type": "uint32_t",
          "logic": "Returns the number of elements currently stored in the chunk."
        },
        {
          "name": "empty",
          "parameters": [],
          "return_type": "bool",
          "logic": "Checks if the chunk is empty."
        },
        {
          "name": "full",
          "parameters": [],
          "return_type": "bool",
          "logic": "Checks if the chunk is full."
        },
        {
          "name": "items",
          "parameters": [],
          "return_type": "T*",
          "logic": "Returns a pointer to the beginning of the chunk's data."
        },
        {
          "name": "items",
          "parameters": [],
          "return_type": "const T*",
          "logic": "Returns a const pointer to the beginning of the chunk's data."
        }
      ]
    },
    {
      "name": "ZoneChunkListIterator",
      "properties": [
        "current_",
        "position_"
      ],
      "methods": [
        {
          "name": "operator*",
          "parameters": [],
          "return_type": "maybe_const<T>&",
          "logic": "Dereferences the iterator and returns a reference to the current element."
        },
        {
          "name": "operator->",
          "parameters": [],
          "return_type": "maybe_const<T>*",
          "logic": "Returns a pointer to the current element."
        },
        {
          "name": "operator==",
          "parameters": [
            "const ZoneChunkListIterator& other"
          ],
          "return_type": "bool",
          "logic": "Checks if two iterators are equal."
        },
        {
          "name": "operator!=",
          "parameters": [
            "const ZoneChunkListIterator& other"
          ],
          "return_type": "bool",
          "logic": "Checks if two iterators are not equal."
        },
        {
          "name": "operator++",
          "parameters": [],
          "return_type": "ZoneChunkListIterator&",
          "logic": "Pre-increment operator: Moves the iterator to the next element."
        },
        {
          "name": "operator++",
          "parameters": [
            "int"
          ],
          "return_type": "ZoneChunkListIterator",
          "logic": "Post-increment operator: Moves the iterator to the next element."
        },
        {
          "name": "operator--",
          "parameters": [],
          "return_type": "ZoneChunkListIterator&",
          "logic": "Pre-decrement operator: Moves the iterator to the previous element."
        },
        {
          "name": "operator--",
          "parameters": [
            "int"
          ],
          "return_type": "ZoneChunkListIterator",
          "logic": "Post-decrement operator: Moves the iterator to the previous element."
        },
        {
          "name": "Advance",
          "parameters": [
            "uint32_t amount"
          ],
          "return_type": "void",
          "logic": "Advances the iterator by a specified amount."
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "ZoneChunkList::NewChunk",
      "parameters": [
        "const uint32_t capacity"
      ],
      "return_type": "Chunk*",
      "logic": "Allocates a new chunk with the given capacity in the zone."
    },
    {
      "name": "ZoneChunkList::NextChunkCapacity",
      "parameters": [
        "uint32_t previous_capacity"
      ],
      "return_type": "uint32_t",
      "logic": "Calculates the capacity of the next chunk, doubling the previous capacity up to a maximum."
    }
  ]
}