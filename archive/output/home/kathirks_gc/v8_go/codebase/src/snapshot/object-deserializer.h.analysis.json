{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/snapshot/object-deserializer.h",
  "imports": [
    "src/snapshot/deserializer.h"
  ],
  "classes": [
    {
      "name": "ObjectDeserializer",
      "properties": [],
      "methods": [
        {
          "name": "DeserializeSharedFunctionInfo",
          "parameters": [
            "Isolate* isolate",
            "const SerializedCodeData* data",
            "DirectHandle<String> source"
          ],
          "return_type": "MaybeDirectHandle<SharedFunctionInfo>",
          "logic": "Deserializes a SharedFunctionInfo object from serialized data, using the provided source string."
        },
        {
          "name": "ObjectDeserializer",
          "parameters": [
            "Isolate* isolate",
            "const SerializedCodeData* data"
          ],
          "return_type": "explicit",
          "logic": "Constructor for ObjectDeserializer. Initializes the deserializer with the given isolate and serialized data."
        },
        {
          "name": "Deserialize",
          "parameters": [],
          "return_type": "MaybeDirectHandle<HeapObject>",
          "logic": "Deserializes an object graph. Returns a handle to the root object, or a MaybeHandle indicating failure."
        },
        {
          "name": "LinkAllocationSites",
          "parameters": [],
          "return_type": "void",
          "logic": "Links allocation sites after deserialization, likely to maintain heap consistency."
        },
        {
          "name": "CommitPostProcessedObjects",
          "parameters": [],
          "return_type": "void",
          "logic": "Commits post-processed objects after deserialization, likely finalizing the deserialization process and making objects fully available."
        }
      ]
    },
    {
      "name": "OffThreadObjectDeserializer",
      "properties": [],
      "methods": [
        {
          "name": "DeserializeSharedFunctionInfo",
          "parameters": [
            "LocalIsolate* isolate",
            "const SerializedCodeData* data",
            "std::vector<IndirectHandle<Script>>* deserialized_scripts"
          ],
          "return_type": "MaybeDirectHandle<SharedFunctionInfo>",
          "logic": "Deserializes a SharedFunctionInfo object off-thread from serialized data, also capturing any deserialized scripts."
        },
        {
          "name": "OffThreadObjectDeserializer",
          "parameters": [
            "LocalIsolate* isolate",
            "const SerializedCodeData* data"
          ],
          "return_type": "explicit",
          "logic": "Constructor for OffThreadObjectDeserializer. Initializes the deserializer with the given local isolate and serialized data."
        },
        {
          "name": "Deserialize",
          "parameters": [
            "std::vector<IndirectHandle<Script>>* deserialized_scripts"
          ],
          "return_type": "MaybeDirectHandle<HeapObject>",
          "logic": "Deserializes an object graph off-thread.  Stores any deserialized scripts in the provided vector. Returns a handle to the root object, or a MaybeHandle indicating failure."
        }
      ]
    }
  ],
  "functions": []
}