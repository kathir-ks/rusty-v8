{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/snapshot/object-deserializer.cc",
  "imports": [
    "src/execution/isolate.h",
    "src/heap/heap-inl.h",
    "src/heap/local-factory-inl.h",
    "src/objects/allocation-site-inl.h",
    "src/objects/objects.h",
    "src/snapshot/code-serializer.h",
    "src/snapshot/object-deserializer.h"
  ],
  "classes": [
    {
      "name": "ObjectDeserializer",
      "properties": [],
      "methods": [
        {
          "name": "ObjectDeserializer",
          "parameters": [
            "Isolate* isolate",
            "const SerializedCodeData* data"
          ],
          "return_type": "void",
          "logic": "Constructor for the ObjectDeserializer. Initializes the deserializer with the isolate and serialized code data."
        },
        {
          "name": "DeserializeSharedFunctionInfo",
          "parameters": [
            "Isolate* isolate",
            "const SerializedCodeData* data",
            "DirectHandle<String> source"
          ],
          "return_type": "MaybeDirectHandle<SharedFunctionInfo>",
          "logic": "Deserializes a SharedFunctionInfo object from the provided data. Attaches the source string to the deserialization context."
        },
        {
          "name": "Deserialize",
          "parameters": [],
          "return_type": "MaybeDirectHandle<HeapObject>",
          "logic": "Deserializes the main object. Handles deferred object deserialization, linking allocation sites, weakening descriptor arrays, rehashing and committing post-processed objects."
        },
        {
          "name": "CommitPostProcessedObjects",
          "parameters": [],
          "return_type": "void",
          "logic": "Commits post-processed objects, specifically scripts. Assigns new script IDs, logs script events, and adds scripts to the isolate's script list."
        },
        {
          "name": "LinkAllocationSites",
          "parameters": [],
          "return_type": "void",
          "logic": "Links allocation sites into a list by setting the weak_next field of each allocation site to the appropriate value based on the heap's allocation_sites_list."
        }
      ]
    },
    {
      "name": "OffThreadObjectDeserializer",
      "properties": [],
      "methods": [
        {
          "name": "OffThreadObjectDeserializer",
          "parameters": [
            "LocalIsolate* isolate",
            "const SerializedCodeData* data"
          ],
          "return_type": "void",
          "logic": "Constructor for the OffThreadObjectDeserializer. Initializes the deserializer with the local isolate and serialized code data."
        },
        {
          "name": "DeserializeSharedFunctionInfo",
          "parameters": [
            "LocalIsolate* isolate",
            "const SerializedCodeData* data",
            "std::vector<IndirectHandle<Script>>* deserialized_scripts"
          ],
          "return_type": "MaybeDirectHandle<SharedFunctionInfo>",
          "logic": "Deserializes a SharedFunctionInfo object from the provided data in an off-thread context.  Populates the deserialized_scripts vector with any deserialized scripts."
        },
        {
          "name": "Deserialize",
          "parameters": [
            "std::vector<IndirectHandle<Script>>* deserialized_scripts"
          ],
          "return_type": "MaybeDirectHandle<HeapObject>",
          "logic": "Deserializes the main object in an off-thread context. Populates a vector of deserialized scripts for later use."
        }
      ]
    }
  ],
  "functions": []
}