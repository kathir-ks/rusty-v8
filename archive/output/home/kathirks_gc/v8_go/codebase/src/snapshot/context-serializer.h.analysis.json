{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/snapshot/context-serializer.h",
  "imports": [
    "src/objects/contexts.h",
    "src/snapshot/serializer.h",
    "src/snapshot/snapshot-source-sink.h"
  ],
  "classes": [
    {
      "name": "ContextSerializer",
      "properties": [
        "startup_serializer_",
        "serialize_embedder_fields_",
        "can_be_rehashed_",
        "context_",
        "embedder_fields_sink_",
        "api_wrapper_sink_"
      ],
      "methods": [
        {
          "name": "ContextSerializer",
          "parameters": [
            "Isolate* isolate",
            "Snapshot::SerializerFlags flags",
            "StartupSerializer* startup_serializer",
            "SerializeEmbedderFieldsCallback callback"
          ],
          "return_type": "N/A (Constructor)",
          "logic": "Constructor for the ContextSerializer class. Initializes the serializer with the isolate, flags, startup serializer, and embedder fields serialization callback."
        },
        {
          "name": "~ContextSerializer",
          "parameters": [],
          "return_type": "N/A (Destructor)",
          "logic": "Destructor for the ContextSerializer class."
        },
        {
          "name": "Serialize",
          "parameters": [
            "Tagged<Context>* o",
            "const DisallowGarbageCollection& no_gc"
          ],
          "return_type": "void",
          "logic": "Serializes the objects reachable from a single Context pointer."
        },
        {
          "name": "can_be_rehashed",
          "parameters": [],
          "return_type": "bool",
          "logic": "Returns whether the serialized hash tables can be rehashed."
        },
        {
          "name": "SerializeObjectImpl",
          "parameters": [
            "Handle<HeapObject> o",
            "SlotType slot_type"
          ],
          "return_type": "void",
          "logic": "Implementation for serializing a single HeapObject."
        },
        {
          "name": "ShouldBeInTheStartupObjectCache",
          "parameters": [
            "Tagged<HeapObject> o"
          ],
          "return_type": "bool",
          "logic": "Determines whether a HeapObject should be placed in the startup object cache."
        },
        {
          "name": "ShouldBeInTheSharedObjectCache",
          "parameters": [
            "Tagged<HeapObject> o"
          ],
          "return_type": "bool",
          "logic": "Determines whether a HeapObject should be placed in the shared object cache."
        },
        {
          "name": "CheckRehashability",
          "parameters": [
            "Tagged<HeapObject> obj"
          ],
          "return_type": "void",
          "logic": "Checks if a HeapObject is rehashable."
        },
        {
          "name": "SerializeObjectWithEmbedderFields",
          "parameters": [
            "Handle<V8Type> data_holder",
            "int embedder_fields_count",
            "UserSerializerWrapper wrapper",
            "UserCallback user_callback",
            "ApiObjectType api_obj"
          ],
          "return_type": "void",
          "logic": "Serializes an object with embedder-controlled data."
        },
        {
          "name": "SerializeApiWrapperFields",
          "parameters": [
            "DirectHandle<JSObject> js_object"
          ],
          "return_type": "void",
          "logic": "Serializes embedder-controlled data for JS API wrapper objects."
        }
      ]
    }
  ],
  "functions": []
}