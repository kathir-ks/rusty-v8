{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/execution/isolate-utils.h",
  "imports": [
    "src/common/globals.h"
  ],
  "classes": [
    {
      "name": "HeapObjectLayout",
      "properties": [],
      "methods": []
    }
  ],
  "functions": [
    {
      "name": "GetPtrComprCageBase",
      "parameters": [
        "Tagged<HeapObject> object"
      ],
      "return_type": "PtrComprCageBase",
      "logic": "Computes the pointer compression cage base from a heap object.  This is for optimizing value decompression in accessors. Returns nullptr if pointer compression is disabled."
    },
    {
      "name": "GetHeapFromWritableObject",
      "parameters": [
        "Tagged<HeapObject> object"
      ],
      "return_type": "Heap*",
      "logic": "Returns the Heap object associated with the given writable HeapObject."
    },
    {
      "name": "GetIsolateFromWritableObject",
      "parameters": [
        "Tagged<HeapObject> object"
      ],
      "return_type": "Isolate*",
      "logic": "Returns the Isolate object associated with the given writable HeapObject."
    },
    {
      "name": "GetHeapFromWritableObject",
      "parameters": [
        "const HeapObjectLayout& object"
      ],
      "return_type": "Heap*",
      "logic": "Returns the Heap object associated with the given writable HeapObjectLayout (or subclass).  Intended to be used via `*this` pointer."
    },
    {
      "name": "GetIsolateFromWritableObject",
      "parameters": [
        "const HeapObjectLayout& object"
      ],
      "return_type": "Isolate*",
      "logic": "Returns the Isolate object associated with the given writable HeapObjectLayout (or subclass). Intended to be used via `*this` pointer."
    },
    {
      "name": "GetIsolateFromHeapObject",
      "parameters": [
        "Tagged<HeapObject> object",
        "Isolate** isolate"
      ],
      "return_type": "bool",
      "logic": "Attempts to retrieve the Isolate associated with the given HeapObject. Returns true on success.  If it fails, the object is likely read-only.  However, it might still succeed for read-only objects if pointer compression is enabled."
    }
  ]
}