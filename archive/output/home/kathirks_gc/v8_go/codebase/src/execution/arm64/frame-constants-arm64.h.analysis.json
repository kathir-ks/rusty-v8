{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/execution/arm64/frame-constants-arm64.h",
  "imports": [
    "src/base/bits.h",
    "src/base/macros.h",
    "src/codegen/register.h",
    "src/codegen/reglist.h",
    "src/common/globals.h",
    "src/execution/frame-constants.h"
  ],
  "classes": [
    {
      "name": "EntryFrameConstants",
      "properties": [
        "kNextExitFrameFPOffset",
        "kNextFastCallFrameFPOffset",
        "kNextFastCallFramePCOffset",
        "kFixedFrameSize",
        "kCalleeSavedRegisterBytesPushedBeforeFpLrPair",
        "kCalleeSavedRegisterBytesPushedAfterFpLrPair",
        "kOffsetToCalleeSavedRegisters",
        "kDirectCallerFPOffset",
        "kDirectCallerPCOffset",
        "kDirectCallerSPOffset"
      ],
      "methods": []
    },
    {
      "name": "WasmLiftoffSetupFrameConstants",
      "properties": [
        "kNumberOfSavedGpParamRegs",
        "kNumberOfSavedFpParamRegs",
        "kInstanceSpillOffset",
        "kParameterSpillsOffset",
        "kWasmInstanceDataOffset",
        "kDeclaredFunctionIndexOffset",
        "kNativeModuleOffset"
      ],
      "methods": []
    },
    {
      "name": "WasmLiftoffFrameConstants",
      "properties": [
        "kFeedbackVectorOffset",
        "kInstanceDataOffset"
      ],
      "methods": []
    },
    {
      "name": "WasmDebugBreakFrameConstants",
      "properties": [
        "kPushedGpRegs",
        "kPushedFpRegs",
        "kNumPushedGpRegisters",
        "kNumPushedFpRegisters",
        "kLastPushedGpRegisterOffset",
        "kLastPushedFpRegisterOffset"
      ],
      "methods": [
        {
          "name": "GetPushedGpRegisterOffset",
          "parameters": [
            "int reg_code"
          ],
          "return_type": "int",
          "logic": "Calculates the stack offset of a given pushed general-purpose register within the WasmDebugBreak frame based on its register code. It uses bit manipulation to count the number of pushed registers with lower codes."
        },
        {
          "name": "GetPushedFpRegisterOffset",
          "parameters": [
            "int reg_code"
          ],
          "return_type": "int",
          "logic": "Calculates the stack offset of a given pushed floating-point register within the WasmDebugBreak frame based on its register code. It uses bit manipulation to count the number of pushed registers with lower codes. The offset is calculated using kSimd128Size because FP registers are pushed as 128-bit SIMD registers."
        }
      ]
    }
  ],
  "functions": []
}