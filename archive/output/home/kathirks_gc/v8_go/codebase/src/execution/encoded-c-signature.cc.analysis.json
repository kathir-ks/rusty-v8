{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/execution/encoded-c-signature.cc",
  "imports": [
    "src/execution/encoded-c-signature.h",
    "include/v8-fast-api-calls.h",
    "src/base/bits.h",
    "src/base/logging.h"
  ],
  "classes": [
    {
      "name": "EncodedCSignature",
      "properties": [
        "parameter_count_",
        "bitfield_"
      ],
      "methods": [
        {
          "name": "FPParameterCount",
          "parameters": [],
          "return_type": "int",
          "logic": "Calculates the number of floating-point parameters by counting the set bits in the `bitfield_` (excluding the bit indicating the return value)."
        },
        {
          "name": "EncodedCSignature",
          "parameters": [
            "const CFunctionInfo* signature"
          ],
          "return_type": "void",
          "logic": "Constructor. Takes a `CFunctionInfo` pointer as input. Iterates through the arguments of the C function, and for each floating-point argument, sets the corresponding bit in the `bitfield_`. It also handles incrementing `parameter_count_` if the CFunction has options.  Finally, it checks the return type, and if it's a float, sets the return float bit appropriately."
        }
      ]
    }
  ],
  "functions": []
}