{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/execution/arguments.h",
  "imports": [
    "src/execution/clobber-registers.h",
    "src/handles/handles.h",
    "src/logging/runtime-call-stats-scope.h",
    "src/objects/objects.h",
    "src/objects/slots.h",
    "src/sandbox/check.h",
    "src/tracing/trace-event.h",
    "src/utils/allocation.h"
  ],
  "classes": [
    {
      "name": "Arguments::ChangeValueScope",
      "properties": [
        "location_",
        "old_value_"
      ],
      "methods": [
        {
          "name": "ChangeValueScope",
          "parameters": [
            "Isolate* isolate",
            "Arguments* args",
            "int index",
            "Tagged<Object> value"
          ],
          "return_type": "void",
          "logic": "Constructor for the ChangeValueScope. Initializes the scope to temporarily change the value of an argument."
        },
        {
          "name": "~ChangeValueScope",
          "parameters": [],
          "return_type": "void",
          "logic": "Destructor for the ChangeValueScope. Restores the original value of the argument."
        }
      ]
    },
    {
      "name": "Arguments",
      "properties": [
        "length_",
        "arguments_"
      ],
      "methods": [
        {
          "name": "Arguments",
          "parameters": [
            "int length",
            "Address* arguments"
          ],
          "return_type": "void",
          "logic": "Constructor for the Arguments class. Initializes the length and arguments pointer."
        },
        {
          "name": "operator[]",
          "parameters": [
            "int index"
          ],
          "return_type": "Tagged<Object>",
          "logic": "Returns the Tagged<Object> at the specified index in the argument list."
        },
        {
          "name": "at",
          "parameters": [
            "int index"
          ],
          "return_type": "Handle<S>",
          "logic": "Returns a Handle to the object at the specified index in the argument list, cast to type S."
        },
        {
          "name": "slot_from_address_at",
          "parameters": [
            "int index",
            "int offset"
          ],
          "return_type": "FullObjectSlot",
          "logic": "Returns a FullObjectSlot at a given index and offset within the arguments array."
        },
        {
          "name": "smi_value_at",
          "parameters": [
            "int index"
          ],
          "return_type": "int",
          "logic": "Returns the smi value at the specified index in the argument list."
        },
        {
          "name": "positive_smi_value_at",
          "parameters": [
            "int index"
          ],
          "return_type": "uint32_t",
          "logic": "Returns the positive smi value at the specified index in the argument list."
        },
        {
          "name": "tagged_index_value_at",
          "parameters": [
            "int index"
          ],
          "return_type": "int",
          "logic": "Returns the tagged index value at the specified index in the argument list."
        },
        {
          "name": "number_value_at",
          "parameters": [
            "int index"
          ],
          "return_type": "double",
          "logic": "Returns the number value at the specified index in the argument list."
        },
        {
          "name": "atOrUndefined",
          "parameters": [
            "Isolate* isolate",
            "int index"
          ],
          "return_type": "Handle<Object>",
          "logic": "Returns a Handle to the object at the specified index or a handle to undefined if the index is out of bounds."
        },
        {
          "name": "address_of_arg_at",
          "parameters": [
            "int index"
          ],
          "return_type": "Address*",
          "logic": "Calculates and returns the address of the argument at the specified index. Includes a sandbox check to prevent out-of-bounds access."
        },
        {
          "name": "length",
          "parameters": [],
          "return_type": "int",
          "logic": "Returns the number of arguments."
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "Stats_##Name",
      "parameters": [
        "int args_length",
        "Address* args_object",
        "Isolate* isolate"
      ],
      "return_type": "Type",
      "logic": "This is a macro that wraps runtime call statistics and trace events around the internal runtime function __RT_impl_##Name."
    },
    {
      "name": "Name",
      "parameters": [
        "int args_length",
        "Address* args_object",
        "Isolate* isolate"
      ],
      "return_type": "Type",
      "logic": "This macro defines the entry point for a runtime function. It performs checks, clobbers double registers, retrieves runtime stats (conditionally), and calls the internal implementation __RT_impl_##Name."
    },
    {
      "name": "__RT_impl_##Name",
      "parameters": [
        "RuntimeArguments args",
        "Isolate* isolate"
      ],
      "return_type": "InternalType",
      "logic": "This is a placeholder for the actual implementation of the runtime function. It receives the arguments and the isolate and performs the core logic of the function."
    }
  ]
}