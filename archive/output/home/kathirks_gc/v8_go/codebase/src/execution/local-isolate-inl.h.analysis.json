{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/execution/local-isolate-inl.h",
  "imports": [
    "src/execution/isolate.h",
    "src/execution/local-isolate.h",
    "src/roots/roots-inl.h"
  ],
  "classes": [
    {
      "name": "LocalIsolate",
      "properties": [],
      "methods": [
        {
          "name": "cage_base",
          "parameters": [],
          "return_type": "Address",
          "logic": "Returns the cage base address from the underlying isolate."
        },
        {
          "name": "code_cage_base",
          "parameters": [],
          "return_type": "Address",
          "logic": "Returns the code cage base address from the underlying isolate."
        },
        {
          "name": "read_only_heap",
          "parameters": [],
          "return_type": "ReadOnlyHeap*",
          "logic": "Returns the read-only heap of the underlying isolate."
        },
        {
          "name": "roots_table",
          "parameters": [],
          "return_type": "RootsTable&",
          "logic": "Returns a reference to the roots table of the underlying isolate."
        },
        {
          "name": "roots_table",
          "parameters": [],
          "return_type": "const RootsTable&",
          "logic": "Returns a const reference to the roots table of the underlying isolate."
        },
        {
          "name": "root",
          "parameters": [
            "RootIndex index"
          ],
          "return_type": "Tagged<Object>",
          "logic": "Returns the root object at the given index from the underlying isolate's root table. Checks that the root is ImmortalImmovable."
        },
        {
          "name": "root_handle",
          "parameters": [
            "RootIndex index"
          ],
          "return_type": "Handle<Object>",
          "logic": "Returns a handle to the root object at the given index from the underlying isolate's root table. Checks that the root is ImmortalImmovable."
        },
        {
          "name": "ExecuteMainThreadWhileParked",
          "parameters": [
            "Callback callback"
          ],
          "return_type": "void",
          "logic": "Executes the given callback on the main thread while it is parked."
        },
        {
          "name": "ParkIfOnBackgroundAndExecute",
          "parameters": [
            "Callback callback"
          ],
          "return_type": "void",
          "logic": "If the current thread is the main thread, executes the callback directly. Otherwise, it parks the background thread and executes the callback."
        }
      ]
    }
  ],
  "functions": []
}