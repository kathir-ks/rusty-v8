{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/execution/local-isolate.cc",
  "imports": [
    "src/execution/local-isolate.h",
    "src/bigint/bigint.h",
    "src/execution/isolate.h",
    "src/execution/thread-id.h",
    "src/handles/handles-inl.h",
    "src/logging/local-logger.h",
    "src/logging/runtime-call-stats-scope.h"
  ],
  "classes": [
    {
      "name": "LocalIsolate",
      "properties": [
        "HiddenLocalFactory (base class)",
        "heap_",
        "isolate_",
        "logger_",
        "thread_id_",
        "stack_limit_",
        "bigint_processor_",
        "runtime_call_stats_",
        "rcs_scope_",
        "default_locale_"
      ],
      "methods": [
        {
          "name": "LocalIsolate",
          "parameters": [
            "Isolate* isolate",
            "ThreadKind kind"
          ],
          "return_type": "constructor",
          "logic": "Constructor for LocalIsolate. Initializes member variables such as heap, isolate pointer, logger, thread ID, and stack limit. Also handles runtime call stats initialization based on thread kind."
        },
        {
          "name": "~LocalIsolate",
          "parameters": [],
          "return_type": "destructor",
          "logic": "Destructor for LocalIsolate. Destroys the bigint processor if it exists."
        },
        {
          "name": "RegisterDeserializerStarted",
          "parameters": [],
          "return_type": "void",
          "logic": "Delegates the deserializer started registration to the main isolate."
        },
        {
          "name": "RegisterDeserializerFinished",
          "parameters": [],
          "return_type": "void",
          "logic": "Delegates the deserializer finished registration to the main isolate."
        },
        {
          "name": "has_active_deserializer",
          "parameters": [],
          "return_type": "bool",
          "logic": "Delegates the check for an active deserializer to the main isolate."
        },
        {
          "name": "GetNextScriptId",
          "parameters": [],
          "return_type": "int",
          "logic": "Delegates the retrieval of the next script ID to the main isolate."
        },
        {
          "name": "InitializeBigIntProcessor",
          "parameters": [],
          "return_type": "void",
          "logic": "Initializes the BigInt processor if it hasn't been initialized already. Performs lazy initialization."
        },
        {
          "name": "DefaultLocale",
          "parameters": [],
          "return_type": "const std::string&",
          "logic": "Returns the default locale, either from the main isolate if it's the main thread, or from the local copy. Uses a check to ensure data consistency with the main thread."
        }
      ]
    },
    {
      "name": "StackLimitCheck",
      "properties": [],
      "methods": [
        {
          "name": "HasOverflowed",
          "parameters": [
            "LocalIsolate* local_isolate"
          ],
          "return_type": "bool",
          "logic": "Checks if the stack has overflowed by comparing the current stack position to the stack limit of the local isolate."
        }
      ]
    }
  ],
  "functions": []
}