{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/maglev/maglev-deopt-frame-visitor.h",
  "imports": [
    "src/maglev/maglev-interpreter-frame-state.h",
    "src/maglev/maglev-ir.h",
    "<type_traits>"
  ],
  "classes": [
    {
      "name": "DeoptInfoVisitor",
      "properties": [
        "deopt_info_",
        "virtual_objects_"
      ],
      "methods": [
        {
          "name": "ForEager",
          "parameters": [
            "DeoptInfoT* deopt_info",
            "Function&& f"
          ],
          "return_type": "void",
          "logic": "Static method to visit the DeoptFrames from the top frame for eager deopts. It creates a DeoptInfoVisitor instance and calls the Visit method to traverse and process the frames, applying the provided function 'f' to each relevant node."
        },
        {
          "name": "ForLazy",
          "parameters": [
            "DeoptInfoT* deopt_info",
            "Function&& f"
          ],
          "return_type": "void",
          "logic": "Static method to visit the DeoptFrames for lazy deopts. It first visits the parent frame (if it exists) and then visits the top frame. A flag is used to skip the result location for lazy deopts, as it is irrelevant for unoptimized code."
        },
        {
          "name": "DeoptInfoVisitor",
          "parameters": [
            "DeoptInfoT* deopt_info"
          ],
          "return_type": "DeoptInfoVisitor",
          "logic": "Constructor for the DeoptInfoVisitor class. It initializes the deopt_info_ and virtual_objects_ member variables."
        },
        {
          "name": "Visit",
          "parameters": [
            "DeoptFrameT& frame",
            "Function&& f"
          ],
          "return_type": "void",
          "logic": "Recursive method to visit the DeoptFrames. It first visits the parent frame (if it exists) and then calls VisitSingleFrame to process the current frame."
        },
        {
          "name": "VisitSingleFrame",
          "parameters": [
            "DeoptFrameT& frame",
            "Function&& f"
          ],
          "return_type": "void",
          "logic": "Method to visit a single DeoptFrame. It iterates through the frame's content (closure, frame state, arguments, receiver, context, or parameters, depending on the frame type) and applies the provided function 'f' to each relevant node. It also handles VirtualObjects created by inlined allocations."
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "EagerDeoptInfo::ForEachInput",
      "parameters": [
        "Function&& f"
      ],
      "return_type": "void",
      "logic": "Calls DeoptInfoVisitor::ForEager to iterate through inputs of EagerDeoptInfo with a given function 'f'. It handles the non-const case."
    },
    {
      "name": "EagerDeoptInfo::ForEachInput",
      "parameters": [
        "Function&& f"
      ],
      "return_type": "void",
      "logic": "Calls DeoptInfoVisitor::ForEager to iterate through inputs of const EagerDeoptInfo with a given function 'f'. It handles the const case."
    },
    {
      "name": "LazyDeoptInfo::ForEachInput",
      "parameters": [
        "Function&& f"
      ],
      "return_type": "void",
      "logic": "Calls DeoptInfoVisitor::ForLazy to iterate through inputs of LazyDeoptInfo with a given function 'f'. It handles the non-const case."
    },
    {
      "name": "LazyDeoptInfo::ForEachInput",
      "parameters": [
        "Function&& f"
      ],
      "return_type": "void",
      "logic": "Calls DeoptInfoVisitor::ForLazy to iterate through inputs of const LazyDeoptInfo with a given function 'f'. It handles the const case."
    }
  ]
}