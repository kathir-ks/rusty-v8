{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/maglev/maglev-graph-printer.h",
  "imports": [
    "<memory>",
    "<ostream>",
    "<set>",
    "<vector>",
    "src/maglev/maglev-compilation-unit.h",
    "src/maglev/maglev-graph-labeller.h",
    "src/maglev/maglev-graph-processor.h",
    "src/maglev/maglev-ir.h"
  ],
  "classes": [
    {
      "name": "MaglevPrintingVisitor",
      "properties": [
        "graph_labeller_",
        "os_",
        "os_for_additional_info_",
        "loop_headers_",
        "targets_",
        "max_node_id_",
        "existing_provenance_"
      ],
      "methods": [
        {
          "name": "MaglevPrintingVisitor",
          "parameters": [
            "MaglevGraphLabeller* graph_labeller",
            "std::ostream& os"
          ],
          "return_type": "void",
          "logic": "Constructor for the MaglevPrintingVisitor.  It initializes the graph labeller and output stream."
        },
        {
          "name": "PreProcessGraph",
          "parameters": [
            "Graph* graph"
          ],
          "return_type": "void",
          "logic": "Called before processing the graph. Does some initial setup.  The empty definition when V8_ENABLE_MAGLEV_GRAPH_PRINTER is not defined serves as a no-op."
        },
        {
          "name": "PostProcessGraph",
          "parameters": [
            "Graph* graph"
          ],
          "return_type": "void",
          "logic": "Called after processing the graph. Does some final cleanup.  The empty definition when V8_ENABLE_MAGLEV_GRAPH_PRINTER is not defined serves as a no-op."
        },
        {
          "name": "PostProcessBasicBlock",
          "parameters": [
            "BasicBlock* block"
          ],
          "return_type": "void",
          "logic": "Called after processing a basic block.  The empty definition when V8_ENABLE_MAGLEV_GRAPH_PRINTER is not defined serves as a no-op."
        },
        {
          "name": "PreProcessBasicBlock",
          "parameters": [
            "BasicBlock* block"
          ],
          "return_type": "BlockProcessResult",
          "logic": "Called before processing a basic block. Returns a result to indicate if the block should be processed. The dummy definition returns kContinue when V8_ENABLE_MAGLEV_GRAPH_PRINTER is not defined."
        },
        {
          "name": "PostPhiProcessing",
          "parameters": [],
          "return_type": "void",
          "logic": "Called after processing Phi nodes. The empty definition when V8_ENABLE_MAGLEV_GRAPH_PRINTER is not defined serves as a no-op."
        },
        {
          "name": "Process",
          "parameters": [
            "Phi* phi",
            "const ProcessingState& state"
          ],
          "return_type": "ProcessResult",
          "logic": "Processes a Phi node.  The dummy definition returns kContinue when V8_ENABLE_MAGLEV_GRAPH_PRINTER is not defined."
        },
        {
          "name": "Process",
          "parameters": [
            "Node* node",
            "const ProcessingState& state"
          ],
          "return_type": "ProcessResult",
          "logic": "Processes a Node. The dummy definition returns kContinue when V8_ENABLE_MAGLEV_GRAPH_PRINTER is not defined."
        },
        {
          "name": "Process",
          "parameters": [
            "ControlNode* node",
            "const ProcessingState& state"
          ],
          "return_type": "ProcessResult",
          "logic": "Processes a ControlNode. The dummy definition returns kContinue when V8_ENABLE_MAGLEV_GRAPH_PRINTER is not defined."
        },
        {
          "name": "os",
          "parameters": [],
          "return_type": "std::ostream&",
          "logic": "Returns the output stream for additional information."
        }
      ]
    },
    {
      "name": "PrintNode",
      "properties": [
        "graph_labeller_",
        "node_",
        "skip_targets_"
      ],
      "methods": [
        {
          "name": "PrintNode",
          "parameters": [
            "MaglevGraphLabeller* graph_labeller",
            "const NodeBase* node",
            "bool skip_targets"
          ],
          "return_type": "void",
          "logic": "Constructor for the PrintNode class. It initializes the graph labeller, node, and skip_targets flag. The dummy definition does nothing when V8_ENABLE_MAGLEV_GRAPH_PRINTER is not defined."
        },
        {
          "name": "Print",
          "parameters": [
            "std::ostream& os"
          ],
          "return_type": "void",
          "logic": "Prints the node information to the output stream. The dummy definition does nothing when V8_ENABLE_MAGLEV_GRAPH_PRINTER is not defined."
        }
      ]
    },
    {
      "name": "PrintNodeLabel",
      "properties": [
        "graph_labeller_",
        "node_"
      ],
      "methods": [
        {
          "name": "PrintNodeLabel",
          "parameters": [
            "MaglevGraphLabeller* graph_labeller",
            "const NodeBase* node"
          ],
          "return_type": "void",
          "logic": "Constructor for the PrintNodeLabel class. It initializes the graph labeller and node. The dummy definition does nothing when V8_ENABLE_MAGLEV_GRAPH_PRINTER is not defined."
        },
        {
          "name": "Print",
          "parameters": [
            "std::ostream& os"
          ],
          "return_type": "void",
          "logic": "Prints the node label to the output stream. The dummy definition does nothing when V8_ENABLE_MAGLEV_GRAPH_PRINTER is not defined."
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "PrintGraph",
      "parameters": [
        "std::ostream& os",
        "MaglevCompilationInfo* compilation_info",
        "Graph* const graph"
      ],
      "return_type": "void",
      "logic": "Prints the entire graph to the output stream. The dummy definition does nothing when V8_ENABLE_MAGLEV_GRAPH_PRINTER is not defined."
    },
    {
      "name": "operator<<",
      "parameters": [
        "std::ostream& os",
        "const PrintNode& printer"
      ],
      "return_type": "std::ostream&",
      "logic": "Overloads the << operator for the PrintNode class, allowing it to be easily printed to an output stream."
    },
    {
      "name": "operator<<",
      "parameters": [
        "std::ostream& os",
        "const PrintNodeLabel& printer"
      ],
      "return_type": "std::ostream&",
      "logic": "Overloads the << operator for the PrintNodeLabel class, allowing it to be easily printed to an output stream."
    }
  ]
}