{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/compiler/turboshaft/wasm-in-js-inlining-reducer-inl.h",
  "error": "JSON parsing error",
  "raw_response": "```json\n{\n  \"file_path\": \"/home/kathirks_gc/v8_go/codebase/src/compiler/turboshaft/wasm-in-js-inlining-reducer-inl.h\",\n  \"imports\": [\n    \"src/compiler/js-inlining.h\",\n    \"src/compiler/turboshaft/assembler.h\",\n    \"src/compiler/turboshaft/define-assembler-macros.inc\",\n    \"src/compiler/turboshaft/index.h\",\n    \"src/compiler/turboshaft/operations.h\",\n    \"src/compiler/turboshaft/wasm-assembler-helpers.h\",\n    \"src/heap/factory-inl.h\",\n    \"src/objects/instance-type-inl.h\",\n    \"src/wasm/compilation-environment-inl.h\",\n    \"src/wasm/decoder.h\",\n    \"src/wasm/function-body-decoder-impl.h\",\n    \"src/wasm/wasm-engine.h\",\n    \"src/wasm/wasm-module.h\",\n    \"src/wasm/wasm-objects.h\",\n    \"src/wasm/wasm-opcodes-inl.h\",\n    \"src/wasm/wasm-subtyping.h\"\n  ],\n  \"classes\": [\n    {\n      \"name\": \"WasmInJSInliningReducer\",\n      \"properties\": [],\n      \"methods\": [\n        {\n          \"name\": \"REDUCE(Call)\",\n          \"parameters\": [\n            \"V<CallTarget> callee\",\n            \"OptionalV<turboshaft::FrameState> frame_state\",\n            \"base::Vector<const OpIndex> arguments\",\n            \"const TSCallDescriptor* descriptor\",\n            \"OpEffects effects\"\n          ],\n          \"return_type\": \"V<Any>\",\n          \"logic\": \"Reduces a call operation by attempting to inline a Wasm function call. If inlining fails, it toggles a thread-in-Wasm flag before and after a regular call.\"\n        },\n        {\n          \"name\": \"TryInlineWasmCall\",\n          \"parameters\": [\n            \"const wasm::WasmModule* module\",\n            \"wasm::NativeModule* native_module\",\n            \"uint32_t func_idx\",\n            \"base::Vector<const OpIndex> arguments\"\n          ],\n          \"return_type\": \"V<Any>\",\n          \"logic\": \"Attempts to inline a Wasm function call, decoding and emitting the Wasm bytecode into the Turboshaft graph.\"\n        }\n      ]\n    },\n    {\n      \"name\": \"WasmInJsInliningInterface\",\n      \"properties\": [\n        \"asm_\",\n        \"locals_\",\n        \"arguments_\",\n        \"trusted_instance_data_\",\n        \"result_\"\n      ],\n      \"methods\": [\n        {\n          \"name\": \"WasmInJsInliningInterface\",\n          \"parameters\": [\n            \"Assembler& assembler\",\n            \"base::Vector<const OpIndex> arguments\",\n            \"V<WasmTrustedInstanceData> trusted_instance_data\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Constructor for the WasmInJsInliningInterface, initializes the assembler, locals, arguments and trusted instance data.\"\n        },\n        {\n          \"name\": \"Result\",\n          \"parameters\": [],\n          \"return_type\": \"V<Any>\",\n          \"logic\": \"Returns the final result of the inlined function.\"\n        },\n        {\n          \"name\": \"OnFirstError\",\n          \"parameters\": [\n            \"FullDecoder*\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"A no-op. Intended to handle the first error encountered during decoding.\"\n        },\n        {\n          \"name\": \"Bailout\",\n          \"parameters\": [\n            \"FullDecoder* decoder\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Handles unsupported operations by reporting an error and stopping decoding.\"\n        },\n        {\n          \"name\": \"StartFunction\",\n          \"parameters\": [\n            \"FullDecoder* decoder\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Initializes the function's local variables with default values, based on their types and parameter count.\"\n        },\n        {\n          \"name\": \"StartFunctionBody\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"Control* block\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Currently a no-op, reserved for when control flow is supported.\"\n        },\n        {\n          \"name\": \"FinishFunction\",\n          \"parameters\": [\n            \"FullDecoder* decoder\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Currently a no-op.\"\n        },\n        {\n          \"name\": \"NextInstruction\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"WasmOpcode\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Reserved for setting the current origin of the instruction, but currently not implemented.\"\n        },\n        {\n          \"name\": \"NopForTestingUnsupportedInLiftoff\",\n          \"parameters\": [\n            \"FullDecoder* decoder\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"A no-op used for testing bailout scenarios in Liftoff.\"\n        },\n        {\n          \"name\": \"TraceInstruction\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"uint32_t markid\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Calls bailout, used when trace instruction is encountered.\"\n        },\n        {\n          \"name\": \"UnOp\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"WasmOpcode opcode\",\n            \"const Value& value\",\n            \"Value* result\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Handles unary operations by calling UnOpImpl and assigning the result to the result's op.\"\n        },\n        {\n          \"name\": \"BinOp\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"WasmOpcode opcode\",\n            \"const Value& lhs\",\n            \"const Value& rhs\",\n            \"Value* result\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Handles binary operations by calling BinOpImpl and assigning the result to the result's op.\"\n        },\n        {\n          \"name\": \"UnOpImpl\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"WasmOpcode opcode\",\n            \"OpIndex arg\",\n            \"ValueType input_type\"\n          ],\n          \"return_type\": \"OpIndex\",\n          \"logic\": \"Implements unary operations, generating appropriate Turboshaft operations for supported opcodes. Bailouts for unsupported operations.\"\n        },\n        {\n          \"name\": \"BinOpImpl\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"WasmOpcode opcode\",\n            \"OpIndex lhs\",\n            \"OpIndex rhs\"\n          ],\n          \"return_type\": \"OpIndex\",\n          \"logic\": \"Implements binary operations, generating appropriate Turboshaft operations for supported opcodes. Bailouts for unsupported operations.\"\n        },\n        {\n          \"name\": \"I32Const\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"Value* result\",\n            \"int32_t value\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Handles i32.const instruction, creating a Word32Constant operation.\"\n        },\n        {\n          \"name\": \"I64Const\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"Value* result\",\n            \"int64_t value\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Handles i64.const instruction, bailing out as i64 operations are currently unsupported.\"\n        },\n        {\n          \"name\": \"F32Const\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"Value* result\",\n            \"float value\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Handles f32.const instruction, creating a Float32Constant operation.\"\n        },\n        {\n          \"name\": \"F64Const\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"Value* result\",\n            \"double value\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Handles f64.const instruction, creating a Float64Constant operation.\"\n        },\n        {\n          \"name\": \"S128Const\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const Simd128Immediate& imm\",\n            \"Value* result\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout for SIMD const\"\n        },\n        {\n          \"name\": \"RefNull\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"ValueType type\",\n            \"Value* result\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout for ref.null\"\n        },\n                {\n          \"name\": \"RefFunc\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"uint32_t function_index\",\n            \"Value* result\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout for ref.func\"\n        },\n        {\n          \"name\": \"RefAsNonNull\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const Value& arg\",\n            \"Value* result\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout for ref.as_non_null\"\n        },\n        {\n          \"name\": \"Drop\",\n          \"parameters\": [\n            \"FullDecoder* decoder\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Handles drop instruction (no-op as stack values are not explicitly managed).\"\n        },\n        {\n          \"name\": \"LocalGet\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"Value* result\",\n            \"const IndexImmediate& imm\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Handles local.get instruction, retrieving a local variable's value from the local's array.\"\n        },\n        {\n          \"name\": \"LocalSet\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const Value& value\",\n            \"const IndexImmediate& imm\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Handles local.set instruction, setting a local variable's value in the local's array.\"\n        },\n        {\n          \"name\": \"LocalTee\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const Value& value\",\n            \"Value* result\",\n            \"const IndexImmediate& imm\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Handles local.tee instruction, setting a local variable's value and returning the same value.\"\n        },\n        {\n          \"name\": \"GlobalGet\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"Value* result\",\n            \"const GlobalIndexImmediate& imm\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Handles global.get instruction, retrieving a global variable's value.\"\n        },\n        {\n          \"name\": \"GlobalSet\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const Value& value\",\n            \"const GlobalIndexImmediate& imm\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Handles global.set instruction, setting a global variable's value.\"\n        },\n        {\n          \"name\": \"Block\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"Control* block\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout, control flow not supported\"\n        },\n        {\n          \"name\": \"Loop\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"Control* block\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout, control flow not supported\"\n        },\n        {\n          \"name\": \"If\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const Value& cond\",\n            \"Control* if_block\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout, control flow not supported\"\n        },\n        {\n          \"name\": \"Else\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"Control* if_block\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout, control flow not supported\"\n        },\n        {\n          \"name\": \"BrOrRet\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"uint32_t depth\",\n            \"uint32_t drop_values\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout, control flow not supported\"\n        },\n        {\n          \"name\": \"BrIf\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const Value& cond\",\n            \"uint32_t depth\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout, control flow not supported\"\n        },\n        {\n          \"name\": \"BrTable\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const BranchTableImmediate& imm\",\n            \"const Value& key\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout, control flow not supported\"\n        },\n        {\n          \"name\": \"FallThruTo\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"Control* block\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout, control flow not supported\"\n        },\n        {\n          \"name\": \"PopControl\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"Control* block\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout, control flow not supported\"\n        },\n        {\n          \"name\": \"DoReturn\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"uint32_t drop_values\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Handles the return instruction, setting the result of the inlining to the returned value.\"\n        },\n        {\n          \"name\": \"Select\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const Value& cond\",\n            \"const Value& fval\",\n            \"const Value& tval\",\n            \"Value* result\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout, control flow not supported\"\n        },\n        {\n          \"name\": \"Try\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"Control* block\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout, exceptions are not supported in inlinee.\"\n        },\n        {\n          \"name\": \"Throw\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const TagIndexImmediate& imm\",\n            \"const Value arg_values[]\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout, exceptions are not supported in inlinee.\"\n        },\n        {\n          \"name\": \"Rethrow\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"Control* block\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout, exceptions are not supported in inlinee.\"\n        },\n        {\n          \"name\": \"CatchException\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const TagIndexImmediate& imm\",\n            \"Control* block\",\n            \"base::Vector<Value> values\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout, exceptions are not supported in inlinee.\"\n        },\n        {\n          \"name\": \"Delegate\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"uint32_t depth\",\n            \"Control* block\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout, exceptions are not supported in inlinee.\"\n        },\n        {\n          \"name\": \"CatchAll\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"Control* block\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout, exceptions are not supported in inlinee.\"\n        },\n        {\n          \"name\": \"TryTable\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"Control* block\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout, exceptions are not supported in inlinee.\"\n        },\n        {\n          \"name\": \"CatchCase\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"Control* block\",\n            \"const wasm::CatchCase& catch_case\",\n            \"base::Vector<Value> values\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout, exceptions are not supported in inlinee.\"\n        },\n        {\n          \"name\": \"ThrowRef\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"Value* value\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout, exceptions are not supported in inlinee.\"\n        },\n        {\n          \"name\": \"Trap\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"wasm::TrapReason reason\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout, traps not supported in inlinee.\"\n        },\n                {\n          \"name\": \"AssertNullTypecheck\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const Value& obj\",\n            \"Value* result\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"AssertNotNullTypecheck\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const Value& obj\",\n            \"Value* result\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"AtomicNotify\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const MemoryAccessImmediate& imm\",\n            \"OpIndex index\",\n            \"OpIndex num_waiters_to_wake\",\n            \"Value* result\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout, atomics are not supported in inlinee.\"\n        },\n        {\n          \"name\": \"AtomicWait\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"WasmOpcode opcode\",\n            \"const MemoryAccessImmediate& imm\",\n            \"OpIndex index\",\n            \"OpIndex expected\",\n            \"V<Word64> timeout\",\n            \"Value* result\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout, atomics are not supported in inlinee.\"\n        },\n        {\n          \"name\": \"AtomicOp\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"WasmOpcode opcode\",\n            \"const Value args[]\",\n            \"const size_t argc\",\n            \"const MemoryAccessImmediate& imm\",\n            \"Value* result\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout, atomics are not supported in inlinee.\"\n        },\n        {\n          \"name\": \"AtomicFence\",\n          \"parameters\": [\n            \"FullDecoder* decoder\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout, atomics are not supported in inlinee.\"\n        },\n        {\n          \"name\": \"MemoryInit\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const MemoryInitImmediate& imm\",\n            \"const Value& dst\",\n            \"const Value& src\",\n            \"const Value& size\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout, memory operations are not supported in inlinee.\"\n        },\n        {\n          \"name\": \"MemoryCopy\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const MemoryCopyImmediate& imm\",\n            \"const Value& dst\",\n            \"const Value& src\",\n            \"const Value& size\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout, memory operations are not supported in inlinee.\"\n        },\n        {\n          \"name\": \"MemoryFill\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const MemoryIndexImmediate& imm\",\n            \"const Value& dst\",\n            \"const Value& value\",\n            \"const Value& size\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout, memory operations are not supported in inlinee.\"\n        },\n        {\n          \"name\": \"DataDrop\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const IndexImmediate& imm\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout, memory operations are not supported in inlinee.\"\n        },\n        {\n          \"name\": \"TableGet\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const Value& index\",\n            \"Value* result\",\n            \"const TableIndexImmediate& imm\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"TableSet\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const Value& index\",\n            \"const Value& value\",\n            \"const TableIndexImmediate& imm\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"TableInit\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const TableInitImmediate& imm\",\n            \"const Value& dst_val\",\n            \"const Value& src_val\",\n            \"const Value& size_val\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"TableCopy\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const TableCopyImmediate& imm\",\n            \"const Value& dst_val\",\n            \"const Value& src_val\",\n            \"const Value& size_val\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"TableGrow\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const TableIndexImmediate& imm\",\n            \"const Value& value\",\n            \"const Value& delta\",\n            \"Value* result\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"TableFill\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const TableIndexImmediate& imm\",\n            \"const Value& start\",\n            \"const Value& value\",\n            \"const Value& count\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"TableSize\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const TableIndexImmediate& imm\",\n            \"Value* result\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"ElemDrop\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const IndexImmediate& imm\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"StructNew\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const StructIndexImmediate& imm\",\n            \"const Value args[]\",\n            \"Value* result\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"StructNewDefault\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const StructIndexImmediate& imm\",\n            \"Value* result\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"StructGet\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const Value& struct_object\",\n            \"const FieldImmediate& field\",\n            \"bool is_signed\",\n            \"Value* result\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"StructSet\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const Value& struct_object\",\n            \"const FieldImmediate& field\",\n            \"const Value& field_value\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"ArrayNew\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const ArrayIndexImmediate& imm\",\n            \"const Value& length\",\n            \"const Value& initial_value\",\n            \"Value* result\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"ArrayNewDefault\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const ArrayIndexImmediate& imm\",\n            \"const Value& length\",\n            \"Value* result\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"ArrayGet\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const Value& array_obj\",\n            \"const ArrayIndexImmediate& imm\",\n            \"const Value& index\",\n            \"bool is_signed\",\n            \"Value* result\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"ArraySet\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const Value& array_obj\",\n            \"const ArrayIndexImmediate& imm\",\n            \"const Value& index\",\n            \"const Value& value\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"ArrayLen\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const Value& array_obj\",\n            \"Value* result\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"ArrayCopy\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const Value& dst\",\n            \"const Value& dst_index\",\n            \"const Value& src\",\n            \"const Value& src_index\",\n            \"const ArrayIndexImmediate& src_imm\",\n            \"const Value& length\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"ArrayFill\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"ArrayIndexImmediate& imm\",\n            \"const Value& array\",\n            \"const Value& index\",\n            \"const Value& value\",\n            \"const Value& length\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"ArrayNewFixed\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const ArrayIndexImmediate& array_imm\",\n            \"const IndexImmediate& length_imm\",\n            \"const Value elements[]\",\n            \"Value* result\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"ArrayNewSegment\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const ArrayIndexImmediate& array_imm\",\n            \"const IndexImmediate& segment_imm\",\n            \"const Value& offset\",\n            \"const Value& length\",\n            \"Value* result\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"ArrayInitSegment\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const ArrayIndexImmediate& array_imm\",\n            \"const IndexImmediate& segment_imm\",\n            \"const Value& array\",\n            \"const Value& array_index\",\n            \"const Value& segment_offset\",\n            \"const Value& length\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"RefI31\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const Value& input\",\n            \"Value* result\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"I31GetS\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const Value& input\",\n            \"Value* result\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"I31GetU\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const Value& input\",\n            \"Value* result\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"RefTest\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"wasm::ModuleTypeIndex ref_index\",\n            \"const Value& object\",\n            \"Value* result\",\n            \"bool null_succeeds\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"RefTestAbstract\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const Value& object\",\n            \"wasm::HeapType type\",\n            \"Value* result\",\n            \"bool null_succeeds\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"RefCast\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"wasm::ModuleTypeIndex ref_index\",\n            \"const Value& object\",\n            \"Value* result\",\n            \"bool null_succeeds\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"RefCastAbstract\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const Value& object\",\n            \"wasm::HeapType type\",\n            \"Value* result\",\n            \"bool null_succeeds\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"LoadMem\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"wasm::LoadType type\",\n            \"const MemoryAccessImmediate& imm\",\n            \"const Value& index\",\n            \"Value* result\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"LoadTransform\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"wasm::LoadType type\",\n            \"wasm::LoadTransformationKind transform\",\n            \"const MemoryAccessImmediate& imm\",\n            \"const Value& index\",\n            \"Value* result\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"LoadLane\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"wasm::LoadType type\",\n            \"const Value& value\",\n            \"const Value& index\",\n            \"const MemoryAccessImmediate& imm\",\n            \"const uint8_t laneidx\",\n            \"Value* result\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"StoreMem\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"wasm::StoreType type\",\n            \"const MemoryAccessImmediate& imm\",\n            \"const Value& index\",\n            \"const Value& value\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"StoreLane\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"wasm::StoreType type\",\n            \"const MemoryAccessImmediate& imm\",\n            \"const Value& index\",\n            \"const Value& value\",\n            \"const uint8_t laneidx\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n        },\n        {\n          \"name\": \"CurrentMemoryPages\",\n          \"parameters\": [\n            \"FullDecoder* decoder\",\n            \"const MemoryIndexImmediate& imm\",\n            \"Value* result\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Bailout\"\n"
}