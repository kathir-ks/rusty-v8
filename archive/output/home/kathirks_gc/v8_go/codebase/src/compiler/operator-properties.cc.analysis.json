{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/compiler/operator-properties.cc",
  "imports": [
    "src/compiler/operator-properties.h",
    "src/compiler/js-operator.h",
    "src/compiler/linkage.h",
    "src/compiler/opcodes.h",
    "src/runtime/runtime.h"
  ],
  "classes": [
    {
      "name": "OperatorProperties",
      "properties": [],
      "methods": [
        {
          "name": "HasContextInput",
          "parameters": [
            "const Operator* op"
          ],
          "return_type": "bool",
          "logic": "Determines if an operator has a context input based on whether it's a JavaScript operator."
        },
        {
          "name": "NeedsExactContext",
          "parameters": [
            "const Operator* op"
          ],
          "return_type": "bool",
          "logic": "Determines if an operator needs an exact context. This depends on the specific JS opcode and whether it requires a specific context for operations like accessing context-allocated variables or calling specific runtime functions."
        },
        {
          "name": "HasFrameStateInput",
          "parameters": [
            "const Operator* op"
          ],
          "return_type": "bool",
          "logic": "Determines if an operator has a frame state input, which is needed for deoptimization purposes. It checks for specific opcodes like Checkpoint, FrameState, and JSCallRuntime (based on Linkage::NeedsFrameStateInput)."
        },
        {
          "name": "GetTotalInputCount",
          "parameters": [
            "const Operator* op"
          ],
          "return_type": "int",
          "logic": "Calculates the total number of inputs for an operator by summing the value, context, frame state, effect, and control input counts."
        },
        {
          "name": "IsBasicBlockBegin",
          "parameters": [
            "const Operator* op"
          ],
          "return_type": "bool",
          "logic": "Determines if an operator marks the beginning of a basic block in the control flow graph. Checks for specific opcodes like Start, End, Loop, Merge, IfTrue, IfFalse, IfSuccess, IfException, IfValue and IfDefault."
        }
      ]
    }
  ],
  "functions": []
}