{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/compiler/common-operator-reducer.h",
  "imports": [
    "src/base/compiler-specific.h",
    "src/compiler/common-operator.h",
    "src/compiler/graph-reducer.h"
  ],
  "classes": [
    {
      "name": "CommonOperatorReducer",
      "properties": [
        "graph_",
        "broker_",
        "common_",
        "machine_",
        "dead_",
        "zone_",
        "default_branch_semantics_"
      ],
      "methods": [
        {
          "name": "CommonOperatorReducer",
          "parameters": [
            "Editor* editor",
            "TFGraph* graph",
            "JSHeapBroker* broker",
            "CommonOperatorBuilder* common",
            "MachineOperatorBuilder* machine",
            "Zone* temp_zone",
            "BranchSemantics default_branch_semantics"
          ],
          "return_type": "void",
          "logic": "Constructor for the CommonOperatorReducer. Initializes member variables."
        },
        {
          "name": "~CommonOperatorReducer",
          "parameters": [],
          "return_type": "void",
          "logic": "Destructor for the CommonOperatorReducer (default implementation)."
        },
        {
          "name": "reducer_name",
          "parameters": [],
          "return_type": "const char*",
          "logic": "Returns the name of the reducer: \"CommonOperatorReducer\"."
        },
        {
          "name": "Reduce",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces the given node by performing strength reduction based on common operators."
        },
        {
          "name": "ReduceBranch",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces a Branch node."
        },
        {
          "name": "ReduceDeoptimizeConditional",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces a DeoptimizeConditional node."
        },
        {
          "name": "ReduceMerge",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces a Merge node."
        },
        {
          "name": "ReduceEffectPhi",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces an EffectPhi node."
        },
        {
          "name": "ReducePhi",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces a Phi node."
        },
        {
          "name": "ReduceReturn",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces a Return node."
        },
        {
          "name": "ReduceSelect",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces a Select node."
        },
        {
          "name": "ReduceSwitch",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces a Switch node."
        },
        {
          "name": "ReduceStaticAssert",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces a StaticAssert node."
        },
        {
          "name": "ReduceTrapConditional",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces a TrapConditional node."
        },
        {
          "name": "Change",
          "parameters": [
            "Node* node",
            "Operator const* op",
            "Node* a"
          ],
          "return_type": "Reduction",
          "logic": "Helper to change a node's operator and single input."
        },
        {
          "name": "Change",
          "parameters": [
            "Node* node",
            "Operator const* op",
            "Node* a",
            "Node* b"
          ],
          "return_type": "Reduction",
          "logic": "Helper to change a node's operator and two inputs."
        },
        {
          "name": "DecideCondition",
          "parameters": [
            "Node* const cond",
            "BranchSemantics branch_semantics"
          ],
          "return_type": "Decision",
          "logic": "Helper to determine if conditions are true or false, based on the semantics provided"
        },
        {
          "name": "BranchSemanticsOf",
          "parameters": [
            "const Node* branch"
          ],
          "return_type": "BranchSemantics",
          "logic": "Determines the branch semantics of the node."
        },
        {
          "name": "graph",
          "parameters": [],
          "return_type": "TFGraph*",
          "logic": "Getter for the graph_ member."
        },
        {
          "name": "broker",
          "parameters": [],
          "return_type": "JSHeapBroker*",
          "logic": "Getter for the broker_ member."
        },
        {
          "name": "common",
          "parameters": [],
          "return_type": "CommonOperatorBuilder*",
          "logic": "Getter for the common_ member."
        },
        {
          "name": "machine",
          "parameters": [],
          "return_type": "MachineOperatorBuilder*",
          "logic": "Getter for the machine_ member."
        },
        {
          "name": "dead",
          "parameters": [],
          "return_type": "Node*",
          "logic": "Getter for the dead_ member."
        }
      ]
    }
  ],
  "functions": []
}