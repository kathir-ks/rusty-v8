{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/compiler/js-graph.cc",
  "imports": [
    "src/compiler/js-graph.h",
    "src/codegen/code-factory.h",
    "src/compiler/heap-refs.h",
    "src/compiler/js-heap-broker.h",
    "src/objects/objects-inl.h"
  ],
  "classes": [
    {
      "name": "JSGraph",
      "properties": [
        "CEntryStub1Constant_",
        "CEntryStub2Constant_",
        "CEntryStub3Constant_",
        "CEntryStub1WithBuiltinExitFrameConstant_",
        "cache_"
      ],
      "methods": [
        {
          "name": "CEntryStubConstant",
          "parameters": [
            "int result_size",
            "ArgvMode argv_mode",
            "bool builtin_exit_frame"
          ],
          "return_type": "Node*",
          "logic": "Returns a cached CEntry stub constant Node, handling different result sizes and argv modes, and utilizing builtin exit frames where applicable."
        },
        {
          "name": "ConstantNoHole",
          "parameters": [
            "ObjectRef ref",
            "JSHeapBroker* broker"
          ],
          "return_type": "Node*",
          "logic": "Returns a constant Node, but ensures that it does not represent a hole.  It will use the 'actual' string value for thin strings."
        },
        {
          "name": "ConstantMaybeHole",
          "parameters": [
            "ObjectRef ref",
            "JSHeapBroker* broker"
          ],
          "return_type": "Node*",
          "logic": "Returns a constant Node, which may or may not represent a hole."
        },
        {
          "name": "Constant",
          "parameters": [
            "ObjectRef ref",
            "JSHeapBroker* broker"
          ],
          "return_type": "Node*",
          "logic": "Returns a constant Node. It handles different types of objects, including Smis, HeapNumbers, and HeapObjects.  It also handles different types of holes by returning specific hole constants and resolves Oddballs."
        },
        {
          "name": "ConstantMutableHeapNumber",
          "parameters": [
            "HeapNumberRef ref",
            "JSHeapBroker* broker"
          ],
          "return_type": "Node*",
          "logic": "Returns a constant Node representing a mutable HeapNumber."
        },
        {
          "name": "ConstantNoHole",
          "parameters": [
            "double value"
          ],
          "return_type": "Node*",
          "logic": "Returns a constant Node for a double value, asserting that the value is not a hole. Returns a cached value or creates a new one."
        },
        {
          "name": "ConstantMaybeHole",
          "parameters": [
            "double value"
          ],
          "return_type": "Node*",
          "logic": "Returns a constant Node for a double value, which may be a hole. Returns a cached zero or one constant if possible, otherwise creates a new number constant."
        },
        {
          "name": "NumberConstant",
          "parameters": [
            "double value"
          ],
          "return_type": "Node*",
          "logic": "Returns a cached number constant Node or creates a new one if it's not in the cache."
        },
        {
          "name": "HeapConstantNoHole",
          "parameters": [
            "Handle<HeapObject> value"
          ],
          "return_type": "Node*",
          "logic": "Returns a cached HeapConstant Node, asserting that it is not a hole.  If the value is not cached, it creates a new one."
        },
        {
          "name": "HeapConstantMaybeHole",
          "parameters": [
            "Handle<HeapObject> value"
          ],
          "return_type": "Node*",
          "logic": "Returns a cached HeapConstant Node, which may be a hole.  If the value is not cached, it creates a new one."
        },
        {
          "name": "HeapConstantHole",
          "parameters": [
            "Handle<HeapObject> value"
          ],
          "return_type": "Node*",
          "logic": "Returns a cached HeapConstant Node, asserting that it is a hole.  If the value is not cached, it creates a new one."
        },
        {
          "name": "TrustedHeapConstant",
          "parameters": [
            "Handle<HeapObject> value"
          ],
          "return_type": "Node*",
          "logic": "Returns a TrustedHeapConstant Node, which is not cached."
        },
        {
          "name": "GetCachedNodes",
          "parameters": [
            "NodeVector* nodes"
          ],
          "return_type": "void",
          "logic": "Appends all cached nodes to the given vector."
        },
        {
          "name": "AllocateInYoungGenerationStubConstant",
          "parameters": [],
          "return_type": "TNode<Code>",
          "logic": "Returns a Code TNode for allocation in young generation, cached."
        },
        {
          "name": "AllocateInOldGenerationStubConstant",
          "parameters": [],
          "return_type": "TNode<Code>",
          "logic": "Returns a Code TNode for allocation in old generation, cached."
        },
        {
          "name": "WasmAllocateInYoungGenerationStubConstant",
          "parameters": [],
          "return_type": "TNode<Code>",
          "logic": "Returns a Code TNode for WASM allocation in young generation, cached."
        },
        {
          "name": "WasmAllocateInOldGenerationStubConstant",
          "parameters": [],
          "return_type": "TNode<Code>",
          "logic": "Returns a Code TNode for WASM allocation in old generation, cached."
        },
        {
          "name": "ArrayConstructorStubConstant",
          "parameters": [],
          "return_type": "TNode<Code>",
          "logic": "Returns a Code TNode for the ArrayConstructorImpl, cached."
        },
        {
          "name": "BigIntMapConstant",
          "parameters": [],
          "return_type": "TNode<Map>",
          "logic": "Returns a Map TNode for BigInt, cached."
        },
        {
          "name": "BooleanMapConstant",
          "parameters": [],
          "return_type": "TNode<Map>",
          "logic": "Returns a Map TNode for Boolean, cached."
        },
        {
          "name": "ToNumberBuiltinConstant",
          "parameters": [],
          "return_type": "TNode<Code>",
          "logic": "Returns a Code TNode for ToNumber builtin, cached."
        },
        {
          "name": "PlainPrimitiveToNumberBuiltinConstant",
          "parameters": [],
          "return_type": "TNode<Code>",
          "logic": "Returns a Code TNode for PlainPrimitiveToNumber builtin, cached."
        },
        {
          "name": "EmptyFixedArrayConstant",
          "parameters": [],
          "return_type": "TNode<FixedArray>",
          "logic": "Returns a FixedArray TNode for an empty fixed array, cached."
        },
        {
          "name": "EmptyStringConstant",
          "parameters": [],
          "return_type": "TNode<String>",
          "logic": "Returns a String TNode for an empty string, cached."
        },
        {
          "name": "FixedArrayMapConstant",
          "parameters": [],
          "return_type": "TNode<Map>",
          "logic": "Returns a Map TNode for a fixed array, cached."
        },
        {
          "name": "PropertyArrayMapConstant",
          "parameters": [],
          "return_type": "TNode<Map>",
          "logic": "Returns a Map TNode for a property array, cached."
        },
        {
          "name": "FixedDoubleArrayMapConstant",
          "parameters": [],
          "return_type": "TNode<Map>",
          "logic": "Returns a Map TNode for a fixed double array, cached."
        },
        {
          "name": "WeakFixedArrayMapConstant",
          "parameters": [],
          "return_type": "TNode<Map>",
          "logic": "Returns a Map TNode for a weak fixed array, cached."
        },
        {
          "name": "HeapNumberMapConstant",
          "parameters": [],
          "return_type": "TNode<Map>",
          "logic": "Returns a Map TNode for a heap number, cached."
        },
        {
          "name": "UndefinedConstant",
          "parameters": [],
          "return_type": "TNode<Undefined>",
          "logic": "Returns an Undefined TNode, cached."
        },
        {
          "name": "TheHoleConstant",
          "parameters": [],
          "return_type": "TNode<Hole>",
          "logic": "Returns a Hole TNode representing 'the hole', cached."
        },
        {
          "name": "PropertyCellHoleConstant",
          "parameters": [],
          "return_type": "TNode<Hole>",
          "logic": "Returns a Hole TNode representing a property cell hole, cached."
        },
        {
          "name": "HashTableHoleConstant",
          "parameters": [],
          "return_type": "TNode<Hole>",
          "logic": "Returns a Hole TNode representing a hash table hole, cached."
        },
        {
          "name": "PromiseHoleConstant",
          "parameters": [],
          "return_type": "TNode<Hole>",
          "logic": "Returns a Hole TNode representing a promise hole, cached."
        },
        {
          "name": "UninitializedConstant",
          "parameters": [],
          "return_type": "TNode<Hole>",
          "logic": "Returns a Hole TNode representing an uninitialized value, cached."
        },
        {
          "name": "OptimizedOutConstant",
          "parameters": [],
          "return_type": "TNode<Hole>",
          "logic": "Returns a Hole TNode representing an optimized out value, cached."
        },
        {
          "name": "StaleRegisterConstant",
          "parameters": [],
          "return_type": "TNode<Hole>",
          "logic": "Returns a Hole TNode representing a stale register, cached."
        },
        {
          "name": "TrueConstant",
          "parameters": [],
          "return_type": "TNode<True>",
          "logic": "Returns a True TNode, cached."
        },
        {
          "name": "FalseConstant",
          "parameters": [],
          "return_type": "TNode<False>",
          "logic": "Returns a False TNode, cached."
        },
        {
          "name": "NullConstant",
          "parameters": [],
          "return_type": "TNode<Null>",
          "logic": "Returns a Null TNode, cached."
        },
        {
          "name": "ZeroConstant",
          "parameters": [],
          "return_type": "TNode<Number>",
          "logic": "Returns a Number TNode representing 0.0, cached."
        },
        {
          "name": "MinusZeroConstant",
          "parameters": [],
          "return_type": "TNode<Number>",
          "logic": "Returns a Number TNode representing -0.0, cached."
        },
        {
          "name": "OneConstant",
          "parameters": [],
          "return_type": "TNode<Number>",
          "logic": "Returns a Number TNode representing 1.0, cached."
        },
        {
          "name": "MinusOneConstant",
          "parameters": [],
          "return_type": "TNode<Number>",
          "logic": "Returns a Number TNode representing -1.0, cached."
        },
        {
          "name": "NaNConstant",
          "parameters": [],
          "return_type": "TNode<Number>",
          "logic": "Returns a Number TNode representing NaN, cached."
        },
        {
          "name": "EmptyStateValues",
          "parameters": [],
          "return_type": "TNode<UntaggedT>",
          "logic": "Returns a StateValues TNode, cached."
        },
        {
          "name": "SingleDeadTypedStateValues",
          "parameters": [],
          "return_type": "TNode<UntaggedT>",
          "logic": "Returns a TypedStateValues TNode, cached."
        },
        {
          "name": "ExternalObjectMapConstant",
          "parameters": [],
          "return_type": "TNode<Map>",
          "logic": "Returns a Map TNode for an external object, cached."
        }
      ]
    }
  ],
  "functions": []
}