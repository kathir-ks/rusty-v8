{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/compiler/js-heap-broker-inl.h",
  "imports": [
    "src/compiler/js-heap-broker.h",
    "src/heap/parked-scope-inl.h"
  ],
  "classes": [
    {
      "name": "JSHeapBroker::RecursiveMutexGuardIfNeeded",
      "properties": [
        "mutex_depth_address_",
        "initial_mutex_depth_",
        "mutex_guard_"
      ],
      "methods": [
        {
          "name": "RecursiveMutexGuardIfNeeded",
          "parameters": [
            "LocalIsolate* local_isolate",
            "base::Mutex* mutex",
            "int* mutex_depth_address"
          ],
          "return_type": "void",
          "logic": "Constructor. Initializes mutex_depth_address_, initial_mutex_depth_, and mutex_guard_. Increments the mutex depth counter."
        }
      ]
    },
    {
      "name": "JSHeapBroker::MapUpdaterGuardIfNeeded",
      "properties": [],
      "methods": [
        {
          "name": "MapUpdaterGuardIfNeeded",
          "parameters": [
            "JSHeapBroker* broker"
          ],
          "return_type": "void",
          "logic": "Constructor. Initializes the RecursiveMutexGuardIfNeeded using the broker's isolate's map updater mutex and the map updater mutex depth counter. Provides RAII-style locking/unlocking for map updater access."
        }
      ]
    },
    {
      "name": "JSHeapBroker::BoilerplateMigrationGuardIfNeeded",
      "properties": [],
      "methods": [
        {
          "name": "BoilerplateMigrationGuardIfNeeded",
          "parameters": [
            "JSHeapBroker* broker"
          ],
          "return_type": "void",
          "logic": "Constructor. Initializes the RecursiveMutexGuardIfNeeded using the broker's isolate's boilerplate migration mutex and the boilerplate migration mutex depth counter. Provides RAII-style locking/unlocking for boilerplate migration access."
        }
      ]
    }
  ],
  "functions": []
}