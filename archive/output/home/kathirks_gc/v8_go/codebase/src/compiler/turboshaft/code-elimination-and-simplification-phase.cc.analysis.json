{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/compiler/turboshaft/code-elimination-and-simplification-phase.cc",
  "imports": [
    "src/compiler/turboshaft/code-elimination-and-simplification-phase.h",
    "src/compiler/js-heap-broker.h",
    "src/compiler/turboshaft/copying-phase.h",
    "src/compiler/turboshaft/dead-code-elimination-reducer.h",
    "src/compiler/turboshaft/duplication-optimization-reducer.h",
    "src/compiler/turboshaft/instruction-selection-normalization-reducer.h",
    "src/compiler/turboshaft/load-store-simplification-reducer.h",
    "src/compiler/turboshaft/phase.h",
    "src/compiler/turboshaft/stack-check-lowering-reducer.h",
    "src/compiler/turboshaft/wasm-js-lowering-reducer.h"
  ],
  "classes": [
    {
      "name": "CodeEliminationAndSimplificationPhase",
      "properties": [],
      "methods": [
        {
          "name": "Run",
          "parameters": [
            "PipelineData* data",
            "Zone* temp_zone"
          ],
          "return_type": "void",
          "logic": "This method orchestrates the code elimination and simplification phase. It uses the CopyingPhase framework to run a sequence of reducers, including DeadCodeEliminationReducer, StackCheckLoweringReducer, WasmJSLoweringReducer (if WASM is enabled), LoadStoreSimplificationReducer, DuplicationOptimizationReducer, InstructionSelectionNormalizationReducer, and ValueNumberingReducer, in order to optimize the turboshaft graph."
        }
      ]
    }
  ],
  "functions": [],
  "namespace": "v8::internal::compiler::turboshaft"
}