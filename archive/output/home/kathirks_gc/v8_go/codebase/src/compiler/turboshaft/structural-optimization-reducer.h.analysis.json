{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/compiler/turboshaft/structural-optimization-reducer.h",
  "imports": [
    "<cstdio>",
    "src/compiler/turboshaft/assembler.h",
    "src/compiler/turboshaft/index.h",
    "src/compiler/turboshaft/opmasks.h",
    "src/zone/zone.h"
  ],
  "classes": [
    {
      "name": "StructuralOptimizationReducer",
      "properties": [],
      "methods": [
        {
          "name": "ReduceInputGraphBranch",
          "parameters": [
            "OpIndex input_index",
            "const BranchOp& branch"
          ],
          "return_type": "OpIndex",
          "logic": "Transforms a cascade of if-else statements checking equality against a 32-bit constant into a switch statement.  Identifies eligible cascades, bailing out if conditions are not equality checks, constants are not present, or blocks contain non-pure operations. Emits a Switch operation if a suitable cascade is found."
        },
        {
          "name": "ContainsOnlyPureOps",
          "parameters": [
            "const Block* block",
            "const Graph& graph"
          ],
          "return_type": "static bool",
          "logic": "Checks if a given block contains only pure operations (operations that are hoistable before a branch) by iterating through all operations except the last one in the block. Used to ensure that the inlining performed during switch transformation is valid."
        },
        {
          "name": "InlineAllOperationsWithoutLast",
          "parameters": [
            "const Block* input_block"
          ],
          "return_type": "void",
          "logic": "Inlines all operations in a block, up to but not including the last operation, into the current block being constructed by the Assembler.  Used to move the 'pure' operations from the 'false' branch of the if-else cascade to before the switch statement."
        },
        {
          "name": "EmitSwitch",
          "parameters": [
            "OpIndex switch_var",
            "base::SmallVector<SwitchOp::Case, 16>& cases",
            "base::SmallVector<const Block*, 16>& false_blocks",
            "Block* current_if_false",
            "BranchHint next_hint"
          ],
          "return_type": "V<None>",
          "logic": "Emits the actual Switch operation.  First inlines the pure operations from the 'false' blocks of the if-else cascade. Then, it creates the switch statement, mapping the switch variable and cases from the identified cascade to the new output graph, with the final 'false' block becoming the default case."
        }
      ]
    }
  ],
  "functions": []
}