{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/compiler/control-path-state.h",
  "imports": [
    "src/compiler/functional-list.h",
    "src/compiler/graph-reducer.h",
    "src/compiler/node-aux-data.h",
    "src/compiler/node-properties.h",
    "src/compiler/node.h",
    "src/compiler/persistent-map.h",
    "src/compiler/turbofan-graph.h",
    "src/zone/zone.h"
  ],
  "classes": [
    {
      "name": "ControlPathState<NodeState, NodeUniqueness>",
      "properties": [
        "blocks_",
        "states_"
      ],
      "methods": [
        {
          "name": "ControlPathState",
          "parameters": [
            "Zone* zone"
          ],
          "return_type": "void",
          "logic": "Constructor for ControlPathState. Initializes the state tracking structures."
        },
        {
          "name": "LookupState",
          "parameters": [
            "Node* node"
          ],
          "return_type": "NodeState",
          "logic": "Looks up the NodeState associated with a given Node. Returns a default NodeState if not found."
        },
        {
          "name": "AddState",
          "parameters": [
            "Zone* zone",
            "Node* node",
            "NodeState state",
            "ControlPathState hint"
          ],
          "return_type": "void",
          "logic": "Adds a new NodeState for a Node in the current code block, considering a possible hint from other ControlPathState."
        },
        {
          "name": "AddStateInNewBlock",
          "parameters": [
            "Zone* zone",
            "Node* node",
            "NodeState state"
          ],
          "return_type": "void",
          "logic": "Adds a new NodeState for a Node in a new code block. This is used when the control flow diverges."
        },
        {
          "name": "ResetToCommonAncestor",
          "parameters": [
            "ControlPathState other"
          ],
          "return_type": "void",
          "logic": "Resets the ControlPathState to the longest common prefix with another ControlPathState, effectively merging control flow paths."
        },
        {
          "name": "IsEmpty",
          "parameters": [],
          "return_type": "bool",
          "logic": "Checks if the ControlPathState is empty, i.e., no blocks are present."
        },
        {
          "name": "operator==",
          "parameters": [
            "const ControlPathState& other"
          ],
          "return_type": "bool",
          "logic": "Checks for equality with another ControlPathState."
        },
        {
          "name": "operator!=",
          "parameters": [
            "const ControlPathState& other"
          ],
          "return_type": "bool",
          "logic": "Checks for inequality with another ControlPathState."
        }
      ]
    },
    {
      "name": "AdvancedReducerWithControlPathState<NodeState, NodeUniqueness>",
      "properties": [
        "zone_",
        "node_states_",
        "reduced_"
      ],
      "methods": [
        {
          "name": "AdvancedReducerWithControlPathState",
          "parameters": [
            "Editor* editor",
            "Zone* zone",
            "TFGraph* graph"
          ],
          "return_type": "void",
          "logic": "Constructor for AdvancedReducerWithControlPathState. Initializes the reducer with necessary data structures."
        },
        {
          "name": "TakeStatesFromFirstControl",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Propagates control path state from the first control input of a node."
        },
        {
          "name": "UpdateStates",
          "parameters": [
            "Node* state_owner",
            "ControlPathState<NodeState, node_uniqueness> new_state"
          ],
          "return_type": "Reduction",
          "logic": "Updates the control path state of a given node (state_owner) with a completely new state."
        },
        {
          "name": "UpdateStates",
          "parameters": [
            "Node* state_owner",
            "ControlPathState<NodeState, node_uniqueness> prev_states",
            "Node* additional_node",
            "NodeState additional_state",
            "bool in_new_block"
          ],
          "return_type": "Reduction",
          "logic": "Updates the control path state of a given node, adding a new state for additional_node. Potentially creating a new block for the new state."
        },
        {
          "name": "zone",
          "parameters": [],
          "return_type": "Zone*",
          "logic": "Returns the zone associated with this reducer."
        },
        {
          "name": "GetState",
          "parameters": [
            "Node* node"
          ],
          "return_type": "ControlPathState<NodeState, node_uniqueness>",
          "logic": "Retrieves the control path state associated with a node."
        },
        {
          "name": "IsReduced",
          "parameters": [
            "Node* node"
          ],
          "return_type": "bool",
          "logic": "Checks if a node has been reduced."
        }
      ]
    }
  ],
  "functions": [],
  "enums": [
    {
      "name": "NodeUniqueness",
      "values": [
        "kUniqueInstance",
        "kMultipleInstances"
      ]
    }
  ]
}