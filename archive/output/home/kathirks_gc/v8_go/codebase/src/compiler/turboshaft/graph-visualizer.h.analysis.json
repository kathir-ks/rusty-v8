{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/compiler/turboshaft/graph-visualizer.h",
  "imports": [
    "src/common/globals.h",
    "src/compiler/node-origin-table.h",
    "src/compiler/turboshaft/graph.h",
    "src/handles/handles.h"
  ],
  "classes": [
    {
      "name": "TurboshaftGraphAsJSON",
      "properties": [
        "turboshaft_graph",
        "origins",
        "temp_zone"
      ],
      "methods": []
    },
    {
      "name": "JSONTurboshaftGraphWriter",
      "properties": [
        "os_",
        "zone_",
        "turboshaft_graph_",
        "origins_"
      ],
      "methods": [
        {
          "name": "JSONTurboshaftGraphWriter",
          "parameters": [
            "std::ostream& os",
            "const Graph& turboshaft_graph",
            "NodeOriginTable* origins",
            "Zone* zone"
          ],
          "return_type": "void",
          "logic": "Constructor. Initializes the writer with the output stream, graph, origin table, and zone."
        },
        {
          "name": "Print",
          "parameters": [],
          "return_type": "void",
          "logic": "Prints the Turboshaft graph in JSON format to the output stream."
        },
        {
          "name": "PrintNodes",
          "parameters": [],
          "return_type": "void",
          "logic": "Prints the nodes of the graph in JSON format."
        },
        {
          "name": "PrintEdges",
          "parameters": [],
          "return_type": "void",
          "logic": "Prints the edges of the graph in JSON format."
        },
        {
          "name": "PrintBlocks",
          "parameters": [],
          "return_type": "void",
          "logic": "Prints the basic blocks of the graph in JSON format."
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "AsJSON",
      "parameters": [
        "const Graph& graph",
        "NodeOriginTable* origins",
        "Zone* temp_zone"
      ],
      "return_type": "TurboshaftGraphAsJSON",
      "logic": "Creates a TurboshaftGraphAsJSON object for easy conversion to JSON."
    },
    {
      "name": "operator<<",
      "parameters": [
        "std::ostream& os",
        "const TurboshaftGraphAsJSON& ad"
      ],
      "return_type": "std::ostream&",
      "logic": "Overloads the stream insertion operator to allow printing TurboshaftGraphAsJSON objects to an output stream."
    },
    {
      "name": "PrintTurboshaftCustomDataPerOperation",
      "parameters": [
        "std::ofstream& stream",
        "const char* data_name",
        "const Graph& graph",
        "std::function<bool(std::ostream&, const Graph&, OpIndex)> printer"
      ],
      "return_type": "void",
      "logic": "Prints custom data for each operation (node) in the Turboshaft graph. Uses a custom printer function provided by the caller."
    },
    {
      "name": "PrintTurboshaftCustomDataPerBlock",
      "parameters": [
        "std::ofstream& stream",
        "const char* data_name",
        "const Graph& graph",
        "std::function<bool(std::ostream&, const Graph&, BlockIndex)> printer"
      ],
      "return_type": "void",
      "logic": "Prints custom data for each basic block in the Turboshaft graph. Uses a custom printer function provided by the caller."
    }
  ]
}