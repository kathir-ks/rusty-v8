{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/compiler/wasm-escape-analysis.cc",
  "imports": [
    "src/compiler/wasm-escape-analysis.h",
    "src/compiler/machine-graph.h",
    "src/compiler/node-properties.h"
  ],
  "classes": [
    {
      "name": "WasmEscapeAnalysis",
      "properties": [],
      "methods": [
        {
          "name": "Reduce",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "This method is the main entry point for escape analysis. It switches on the opcode of the given node and calls the appropriate reduction method. Currently, it only handles AllocateRaw nodes."
        },
        {
          "name": "ReduceAllocateRaw",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "This method attempts to reduce an AllocateRaw node by removing it if its only uses are StoreToObject, InitializeImmutableInObject or Phis that are themselves useless. It iterates through the value edges of the AllocateRaw node. If all value edges are stores to objects or phis without uses, it replaces the stores with dead nodes, removes the allocation from the effect and control chains, and marks the allocation as changed. Otherwise, it returns NoChange."
        }
      ]
    }
  ],
  "functions": []
}