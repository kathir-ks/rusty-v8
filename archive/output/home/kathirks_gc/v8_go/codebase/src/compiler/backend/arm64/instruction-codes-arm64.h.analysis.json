{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/compiler/backend/arm64/instruction-codes-arm64.h",
  "imports": [],
  "classes": [],
  "functions": [],
  "macros": [
    {
      "name": "TARGET_ARCH_OPCODE_WITH_MEMORY_ACCESS_MODE_LIST",
      "definition": "A macro that defines a list of ARM64 opcodes that support a MemoryAccessMode. Each opcode in the list is passed to the macro argument 'V'."
    },
    {
      "name": "TARGET_ARCH_SIMD_OPCODE_LIST",
      "definition": "A macro that defines a list of ARM64 SIMD opcodes. Each opcode in the list is passed to the macro argument 'V'."
    },
    {
      "name": "TARGET_ARCH_OPCODE_LIST",
      "definition": "A macro that defines a list of all ARM64 opcodes, including those that support MemoryAccessMode and SIMD opcodes. It invokes the other opcode list macros. Each opcode in the list is passed to the macro argument 'V'."
    },
    {
      "name": "TARGET_ADDRESSING_MODE_LIST",
      "definition": "A macro that defines a list of ARM64 addressing modes. Addressing modes represent the \"shape\" of inputs to an instruction.  Each addressing mode in the list is passed to the macro argument 'V'."
    }
  ],
  "namespaces": [
    "v8",
    "v8::internal",
    "v8::internal::compiler"
  ],
  "description": "This header file defines ARM64-specific opcodes and addressing modes used in the V8 JavaScript engine's compiler backend. These opcodes specify which assembly sequence to emit for each high-level operation."
}