{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/compiler/backend/arm/instruction-codes-arm.h",
  "imports": [],
  "classes": [],
  "functions": [],
  "defines": [
    {
      "name": "TARGET_ARCH_OPCODE_LIST",
      "logic": "This macro takes a macro name (V) as input. It then calls the provided macro V for each ARM-specific opcode, effectively defining a list of opcodes that can be processed by another macro. Each line V(OpcodeName) instantiates the macro 'V' with a string literal for the opcode name."
    },
    {
      "name": "TARGET_ADDRESSING_MODE_LIST",
      "logic": "This macro takes a macro name (V) as input.  It then calls the provided macro V for each ARM addressing mode, similar to TARGET_ARCH_OPCODE_LIST. Addressing modes define the way operands are accessed, and this list defines the supported operand forms."
    }
  ],
  "namespaces": [
    {
      "name": "v8",
      "children": [
        {
          "name": "internal",
          "children": [
            {
              "name": "compiler",
              "children": []
            }
          ]
        }
      ]
    }
  ],
  "details": "This header file defines two key lists via macros: TARGET_ARCH_OPCODE_LIST and TARGET_ADDRESSING_MODE_LIST. These lists are used by other parts of the V8 compiler to generate ARM assembly code. TARGET_ARCH_OPCODE_LIST specifies the ARM instructions that the compiler knows how to generate. TARGET_ADDRESSING_MODE_LIST defines the possible ways instruction operands can be accessed."
}