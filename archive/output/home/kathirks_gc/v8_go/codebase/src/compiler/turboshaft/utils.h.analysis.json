{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/compiler/turboshaft/utils.h",
  "imports": [
    "<iostream>",
    "<limits>",
    "<tuple>",
    "src/base/logging.h",
    "src/base/macros.h"
  ],
  "classes": [
    {
      "name": "any_of",
      "properties": [],
      "methods": [
        {
          "name": "any_of",
          "parameters": [
            "const Ts&... args"
          ],
          "return_type": "N/A (constructor)",
          "logic": "Constructor for the any_of struct. Initializes the base std::tuple with the given arguments."
        },
        {
          "name": "Contains",
          "parameters": [
            "const T& value",
            "std::index_sequence<indices...>"
          ],
          "return_type": "bool",
          "logic": "Checks if the given value is equal to any of the elements stored in the tuple. Uses fold expression to iterate over all elements."
        },
        {
          "name": "PrintTo",
          "parameters": [
            "std::ostream& os",
            "std::index_sequence<indices...>"
          ],
          "return_type": "std::ostream&",
          "logic": "Prints the contents of the any_of struct to the provided ostream. Uses fold expression to iterate over all elements and prints them separated by commas. Uses base::PrintCheckOperand."
        }
      ]
    },
    {
      "name": "all_of",
      "properties": [],
      "methods": [
        {
          "name": "all_of",
          "parameters": [
            "const Ts&... args"
          ],
          "return_type": "N/A (constructor)",
          "logic": "Constructor for the all_of struct. Initializes the base std::tuple with the given arguments."
        },
        {
          "name": "AllEqualTo",
          "parameters": [
            "const T& value",
            "std::index_sequence<indices...>"
          ],
          "return_type": "bool",
          "logic": "Checks if the given value is equal to all the elements stored in the tuple. Uses fold expression to iterate over all elements."
        },
        {
          "name": "PrintTo",
          "parameters": [
            "std::ostream& os",
            "std::index_sequence<indices...>"
          ],
          "return_type": "std::ostream&",
          "logic": "Prints the contents of the all_of struct to the provided ostream. Uses fold expression to iterate over all elements and prints them separated by commas. Uses base::PrintCheckOperand."
        }
      ]
    },
    {
      "name": "ScopedModification",
      "properties": [
        "ptr_",
        "old_value_"
      ],
      "methods": [
        {
          "name": "ScopedModification",
          "parameters": [
            "T* ptr",
            "T new_value"
          ],
          "return_type": "N/A (constructor)",
          "logic": "Constructor for the ScopedModification class. Stores the pointer and the original value, and sets the pointer to the new value."
        },
        {
          "name": "~ScopedModification",
          "parameters": [],
          "return_type": "N/A (destructor)",
          "logic": "Destructor for the ScopedModification class. Restores the original value to the pointer."
        },
        {
          "name": "old_value",
          "parameters": [],
          "return_type": "const T&",
          "logic": "Returns the original value that was stored when the object was created."
        }
      ]
    },
    {
      "name": "MultiSwitch",
      "properties": [],
      "methods": []
    },
    {
      "name": "MultiSwitchIntegral",
      "properties": [],
      "methods": []
    }
  ],
  "functions": [
    {
      "name": "operator==",
      "parameters": [
        "const T& value",
        "any_of<Ts...> options"
      ],
      "return_type": "bool",
      "logic": "Overloads the == operator to compare a value with an any_of object. Returns true if the value is contained within any of the options."
    },
    {
      "name": "operator<<",
      "parameters": [
        "std::ostream& os",
        "any_of<Ts...> any"
      ],
      "return_type": "std::ostream&",
      "logic": "Overloads the << operator to print an any_of object to an ostream."
    },
    {
      "name": "operator==",
      "parameters": [
        "all_of<Ts...> values",
        "const T& target"
      ],
      "return_type": "bool",
      "logic": "Overloads the == operator to compare an all_of object with a value. Returns true if the value is equal to all of the values."
    },
    {
      "name": "operator<<",
      "parameters": [
        "std::ostream& os",
        "all_of<Ts...> all"
      ],
      "return_type": "std::ostream&",
      "logic": "Overloads the << operator to print an all_of object to an ostream."
    },
    {
      "name": "ShouldSkipOptimizationStep",
      "parameters": [],
      "return_type": "bool",
      "logic": "In debug mode, it allows skipping optimization steps. In release mode, it always returns false."
    },
    {
      "name": "multi",
      "parameters": [
        "const Ts&... values"
      ],
      "return_type": "uint64_t",
      "logic": "Encodes multiple values into a single uint64_t using the MultiSwitch trait. Allows switching on multiple values at once."
    }
  ]
}