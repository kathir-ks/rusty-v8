{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/compiler/allocation-builder-inl.h",
  "imports": [
    "src/compiler/access-builder.h",
    "src/compiler/allocation-builder.h",
    "src/heap/heap-inl.h",
    "src/objects/arguments-inl.h"
  ],
  "classes": [
    {
      "name": "AllocationBuilder",
      "properties": [],
      "methods": [
        {
          "name": "Allocate",
          "parameters": [
            "int size",
            "AllocationType allocation",
            "Type type"
          ],
          "return_type": "void",
          "logic": "Allocates a new object of the given size, allocation type, and type using the `Allocate` node. It updates the effect chain to ensure proper ordering of allocations. Checks size constraints."
        },
        {
          "name": "AllocateContext",
          "parameters": [
            "int variadic_part_length",
            "MapRef map"
          ],
          "return_type": "void",
          "logic": "Allocates a new context object with a variable number of slots.  It calculates the required size, allocates the memory, stores the map and the length of the variadic part."
        },
        {
          "name": "CanAllocateArray",
          "parameters": [
            "int length",
            "MapRef map",
            "AllocationType allocation"
          ],
          "return_type": "bool",
          "logic": "Checks if an array of the given length and map can be allocated within the maximum allowed heap object size."
        },
        {
          "name": "AllocateArray",
          "parameters": [
            "int length",
            "MapRef map",
            "AllocationType allocation"
          ],
          "return_type": "void",
          "logic": "Allocates a new fixed array or fixed double array object with the given length and map. It first checks if the allocation is possible, then allocates the memory, stores the map and the length."
        },
        {
          "name": "CanAllocateSloppyArgumentElements",
          "parameters": [
            "int length",
            "MapRef map",
            "AllocationType allocation"
          ],
          "return_type": "bool",
          "logic": "Checks if sloppy arguments elements array of the given length and map can be allocated within the maximum allowed heap object size."
        },
        {
          "name": "AllocateSloppyArgumentElements",
          "parameters": [
            "int length",
            "MapRef map",
            "AllocationType allocation"
          ],
          "return_type": "void",
          "logic": "Allocates new sloppy arguments elements object with the given length and map. First, it checks if the allocation is possible, then allocates the memory, stores the map and the length."
        }
      ]
    }
  ],
  "functions": [],
  "namespaces": [
    "v8",
    "internal",
    "compiler"
  ]
}