{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/compiler/refs-map.cc",
  "imports": [
    "src/compiler/refs-map.h"
  ],
  "classes": [
    {
      "name": "RefsMap",
      "properties": [],
      "methods": [
        {
          "name": "RefsMap",
          "parameters": [
            "uint32_t capacity",
            "AddressMatcher match",
            "Zone* zone"
          ],
          "return_type": "RefsMap",
          "logic": "Constructor that initializes the underlying hash map with a given capacity, address matcher, and zone allocator."
        },
        {
          "name": "RefsMap",
          "parameters": [
            "const RefsMap* other",
            "Zone* zone"
          ],
          "return_type": "RefsMap",
          "logic": "Copy constructor that initializes the underlying hash map with the contents of another RefsMap and a zone allocator."
        },
        {
          "name": "Lookup",
          "parameters": [
            "const Address& key"
          ],
          "return_type": "Entry*",
          "logic": "Looks up an entry in the underlying hash map using the provided key's address as the key and the hash of the address. Returns a pointer to the entry, or null if not found."
        },
        {
          "name": "LookupOrInsert",
          "parameters": [
            "const Address& key"
          ],
          "return_type": "Entry*",
          "logic": "Looks up an entry in the underlying hash map using the provided key's address as the key and the hash of the address. If the entry doesn't exist, it inserts a new entry with a null ObjectData.  Returns a pointer to the found or newly inserted entry."
        },
        {
          "name": "Remove",
          "parameters": [
            "const Address& key"
          ],
          "return_type": "ObjectData*",
          "logic": "Removes an entry from the underlying hash map using the provided key's address as the key and the hash of the address. Returns a pointer to the ObjectData that was removed, or null if the key was not found."
        },
        {
          "name": "Hash",
          "parameters": [
            "Address addr"
          ],
          "return_type": "uint32_t",
          "logic": "Calculates a hash value for a given address by casting the address to a uint32_t. This is used as the hash key for the underlying hash map."
        }
      ]
    }
  ],
  "functions": []
}