{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/wasm/signature-hashing.h",
  "imports": [
    "src/codegen/linkage-location.h",
    "src/codegen/machine-type.h",
    "src/codegen/signature.h",
    "src/wasm/value-type.h",
    "src/wasm/wasm-linkage.h"
  ],
  "classes": [
    {
      "name": "SignatureHasher",
      "properties": [
        "params_",
        "rets_"
      ],
      "methods": [
        {
          "name": "Hash",
          "parameters": [
            "sig"
          ],
          "return_type": "uint64_t",
          "logic": "Computes a signature hash for a given signature. It simulates linkage location assignment, and collects tagged/untagged parameter counts in registers and on the stack. If SANDBOX is enabled, this helps hardening to prevent sandbox escapes through type confusion."
        },
        {
          "name": "AddParamAt",
          "parameters": [
            "index",
            "location"
          ],
          "return_type": "void",
          "logic": "Counts parameters passed in registers based on whether they are tagged or untagged. Skips the instance object parameter"
        },
        {
          "name": "AddReturnAt",
          "parameters": [
            "index",
            "location"
          ],
          "return_type": "void",
          "logic": "Counts return values passed in registers based on whether they are tagged or untagged."
        },
        {
          "name": "GetHash",
          "parameters": [],
          "return_type": "uint64_t",
          "logic": "Combines the hashes of parameters and return values into a single 64-bit hash value. This hash represents the signature hash."
        },
        {
          "name": "CountIfRegister",
          "parameters": [
            "loc",
            "counts"
          ],
          "return_type": "void",
          "logic": "If the location is a register, increments the tagged/untagged register counts based on the MachineType of the location."
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "GetMachineRepresentation",
      "parameters": [
        "type"
      ],
      "return_type": "MachineRepresentation",
      "logic": "Returns the machine representation of a ValueTypeBase.  This extracts the underlying machine representation."
    },
    {
      "name": "GetMachineRepresentation",
      "parameters": [
        "type"
      ],
      "return_type": "MachineRepresentation",
      "logic": "Returns the machine representation of a MachineType.  This extracts the underlying machine representation."
    },
    {
      "name": "IterateSignatureImpl",
      "parameters": [
        "sig",
        "extra_callable_param",
        "locations",
        "untagged_parameter_slots",
        "total_parameter_slots",
        "untagged_return_slots",
        "total_return_slots"
      ],
      "return_type": "void",
      "logic": "This helper iterates through the parameters and return values of a given signature and assigns linkage locations based on whether the parameters/return values are tagged or untagged. The function calculates the number of untagged and total parameter/return slots."
    }
  ]
}