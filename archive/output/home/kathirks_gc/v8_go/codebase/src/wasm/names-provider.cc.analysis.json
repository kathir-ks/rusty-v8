{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/wasm/names-provider.cc",
  "imports": [
    "src/wasm/names-provider.h",
    "src/strings/unicode-decoder.h",
    "src/wasm/canonical-types.h",
    "src/wasm/module-decoder.h",
    "src/wasm/std-object-sizes.h",
    "src/wasm/string-builder.h",
    "src/wasm/wasm-code-manager.h",
    "src/wasm/wasm-engine.h"
  ],
  "classes": [
    {
      "name": "NamesProvider",
      "properties": [
        "module_",
        "wire_bytes_",
        "mutex_",
        "has_decoded_",
        "name_section_names_",
        "has_computed_import_names_",
        "has_computed_function_import_names_",
        "import_export_function_names_",
        "import_export_table_names_",
        "import_export_memory_names_",
        "import_export_global_names_",
        "import_export_tag_names_"
      ],
      "methods": [
        {
          "name": "NamesProvider",
          "parameters": [
            "const WasmModule* module",
            "base::Vector<const uint8_t> wire_bytes"
          ],
          "return_type": "void",
          "logic": "Constructor for NamesProvider. Initializes module_ and wire_bytes_."
        },
        {
          "name": "~NamesProvider",
          "parameters": [],
          "return_type": "void",
          "logic": "Destructor for NamesProvider."
        },
        {
          "name": "DecodeNamesIfNotYetDone",
          "parameters": [],
          "return_type": "void",
          "logic": "Decodes the name section of the WASM module if it hasn't been decoded yet. Uses a mutex to ensure thread safety."
        },
        {
          "name": "ComputeFunctionNamesFromImportsExports",
          "parameters": [],
          "return_type": "void",
          "logic": "Computes function names from the import and export sections of the WASM module. This provides fallback names when the name section is not available or doesn't contain names for those functions.  It handles functions differently from other imports/exports."
        },
        {
          "name": "ComputeNamesFromImportsExports",
          "parameters": [],
          "return_type": "void",
          "logic": "Computes names for tables, memories, globals, and tags from the import and export sections of the WASM module.  Provides fallback names."
        },
        {
          "name": "ComputeImportName",
          "parameters": [
            "const WasmImport& import",
            "std::map<uint32_t, std::string>& target"
          ],
          "return_type": "void",
          "logic": "Computes a name for an imported entity based on its module and field names.  The generated name is stored in the target map."
        },
        {
          "name": "ComputeExportName",
          "parameters": [
            "const WasmExport& ex",
            "std::map<uint32_t, std::string>& target"
          ],
          "return_type": "void",
          "logic": "Computes a name for an exported entity based on its export name. The generated name is stored in the target map."
        },
        {
          "name": "WriteRef",
          "parameters": [
            "StringBuilder& out",
            "WireBytesRef ref"
          ],
          "return_type": "void",
          "logic": "Writes a WireBytesRef (a reference to a portion of the WASM wire bytes) to the given StringBuilder."
        },
        {
          "name": "PrintFunctionName",
          "parameters": [
            "StringBuilder& out",
            "uint32_t function_index",
            "FunctionNamesBehavior behavior",
            "IndexAsComment index_as_comment"
          ],
          "return_type": "void",
          "logic": "Prints the name of a function to the StringBuilder.  Looks up names from the name section, import/export names, or generates a default name.  Behavior is controlled by the `behavior` parameter (e.g. for devtools or internal wasm usage).  IndexAsComment controls whether to add an index comment."
        },
        {
          "name": "PrintLocalName",
          "parameters": [
            "StringBuilder& out",
            "uint32_t function_index",
            "uint32_t local_index",
            "IndexAsComment index_as_comment"
          ],
          "return_type": "void",
          "logic": "Prints the name of a local variable to the StringBuilder.  Looks up the name from the name section or generates a default name."
        },
        {
          "name": "PrintLabelName",
          "parameters": [
            "StringBuilder& out",
            "uint32_t function_index",
            "uint32_t label_index",
            "uint32_t fallback_index"
          ],
          "return_type": "void",
          "logic": "Prints the name of a label to the StringBuilder. Looks up from name section or generates a default name."
        },
        {
          "name": "PrintTypeName",
          "parameters": [
            "StringBuilder& out",
            "uint32_t type_index",
            "IndexAsComment index_as_comment"
          ],
          "return_type": "void",
          "logic": "Prints the name of a type to the StringBuilder. Looks up from name section or generates a default name."
        },
        {
          "name": "PrintTableName",
          "parameters": [
            "StringBuilder& out",
            "uint32_t table_index",
            "IndexAsComment index_as_comment"
          ],
          "return_type": "void",
          "logic": "Prints the name of a table to the StringBuilder.  Looks up from name section, import/export or generates a default name."
        },
        {
          "name": "PrintMemoryName",
          "parameters": [
            "StringBuilder& out",
            "uint32_t memory_index",
            "IndexAsComment index_as_comment"
          ],
          "return_type": "void",
          "logic": "Prints the name of a memory to the StringBuilder.  Looks up from name section, import/export or generates a default name."
        },
        {
          "name": "PrintGlobalName",
          "parameters": [
            "StringBuilder& out",
            "uint32_t global_index",
            "IndexAsComment index_as_comment"
          ],
          "return_type": "void",
          "logic": "Prints the name of a global to the StringBuilder.  Looks up from name section, import/export or generates a default name."
        },
        {
          "name": "PrintElementSegmentName",
          "parameters": [
            "StringBuilder& out",
            "uint32_t element_segment_index",
            "IndexAsComment index_as_comment"
          ],
          "return_type": "void",
          "logic": "Prints the name of an element segment to the StringBuilder. Looks up from name section or generates a default name."
        },
        {
          "name": "PrintDataSegmentName",
          "parameters": [
            "StringBuilder& out",
            "uint32_t data_segment_index",
            "IndexAsComment index_as_comment"
          ],
          "return_type": "void",
          "logic": "Prints the name of a data segment to the StringBuilder. Looks up from name section or generates a default name."
        },
        {
          "name": "PrintFieldName",
          "parameters": [
            "StringBuilder& out",
            "uint32_t struct_index",
            "uint32_t field_index",
            "IndexAsComment index_as_comment"
          ],
          "return_type": "void",
          "logic": "Prints the name of a struct field. Looks up from name section or generates a default name."
        },
        {
          "name": "PrintTagName",
          "parameters": [
            "StringBuilder& out",
            "uint32_t tag_index",
            "IndexAsComment index_as_comment"
          ],
          "return_type": "void",
          "logic": "Prints the name of a tag to the StringBuilder. Looks up from name section or import/export, or generates a default name."
        },
        {
          "name": "PrintHeapType",
          "parameters": [
            "StringBuilder& out",
            "HeapType type"
          ],
          "return_type": "void",
          "logic": "Prints a heap type.  If the type is an index, prints the type name at that index."
        },
        {
          "name": "PrintValueType",
          "parameters": [
            "StringBuilder& out",
            "ValueType type"
          ],
          "return_type": "void",
          "logic": "Prints a value type.  If the type is a reference, prints '(ref ' followed by the type name.  Otherwise, prints the type name."
        },
        {
          "name": "EstimateCurrentMemoryConsumption",
          "parameters": [],
          "return_type": "size_t",
          "logic": "Estimates the current memory consumption of the NamesProvider object."
        }
      ]
    },
    {
      "name": "CanonicalTypeNamesProvider",
      "properties": [
        "mutex_",
        "type_names_",
        "field_names_",
        "payload_size_estimate_"
      ],
      "methods": [
        {
          "name": "EstimateCurrentMemoryConsumption",
          "parameters": [],
          "return_type": "size_t",
          "logic": "Estimates the current memory consumption of the CanonicalTypeNamesProvider object."
        },
        {
          "name": "DecodeNameSections",
          "parameters": [],
          "return_type": "void",
          "logic": "Decodes all name sections to fill in the type and field names."
        },
        {
          "name": "DecodeNames",
          "parameters": [
            "NativeModule* native_module"
          ],
          "return_type": "void",
          "logic": "Decodes canonical type names from the name section of the wasm module."
        },
        {
          "name": "PrintTypeName",
          "parameters": [
            "StringBuilder& out",
            "CanonicalTypeIndex type_index",
            "NamesProvider::IndexAsComment index_as_comment"
          ],
          "return_type": "void",
          "logic": "Prints the name of a canonical type to the StringBuilder."
        },
        {
          "name": "PrintValueType",
          "parameters": [
            "StringBuilder& out",
            "CanonicalValueType type"
          ],
          "return_type": "void",
          "logic": "Prints the name of a canonical value type."
        },
        {
          "name": "PrintFieldName",
          "parameters": [
            "StringBuilder& out",
            "CanonicalTypeIndex struct_index",
            "uint32_t field_index"
          ],
          "return_type": "void",
          "logic": "Prints the name of a field of a canonical type struct to the StringBuilder."
        },
        {
          "name": "DetectInlineStringThreshold",
          "parameters": [],
          "return_type": "size_t",
          "logic": "Detects the threshold for inline string storage to estimate memory consumption accurately."
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "SanitizeUnicodeName",
      "parameters": [
        "StringBuilder& out",
        "const uint8_t* utf8_src",
        "size_t length"
      ],
      "return_type": "void",
      "logic": "Sanitizes a unicode name by replacing disallowed characters with '_'."
    },
    {
      "name": "MaybeAddComment",
      "parameters": [
        "StringBuilder& out",
        "uint32_t index",
        "bool add_comment"
      ],
      "return_type": "void",
      "logic": "Conditionally adds a comment to the StringBuilder containing the given index."
    },
    {
      "name": "Get",
      "parameters": [
        "const NameMap& map",
        "uint32_t index"
      ],
      "return_type": "WireBytesRef",
      "logic": "Retrieves a WireBytesRef from a NameMap given an index."
    },
    {
      "name": "Get",
      "parameters": [
        "const IndirectNameMap& map",
        "uint32_t outer_index",
        "uint32_t inner_index"
      ],
      "return_type": "WireBytesRef",
      "logic": "Retrieves a WireBytesRef from an IndirectNameMap given an outer and inner index."
    },
    {
      "name": "StringMapSize",
      "parameters": [
        "const std::map<uint32_t, std::string>& map"
      ],
      "return_type": "size_t",
      "logic": "Calculates the total size of the strings stored in the given map."
    }
  ]
}