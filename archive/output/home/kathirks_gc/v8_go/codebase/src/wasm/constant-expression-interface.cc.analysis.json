{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/wasm/constant-expression-interface.cc",
  "imports": [
    "src/wasm/constant-expression-interface.h",
    "src/base/overflowing-math.h",
    "src/execution/isolate.h",
    "src/handles/handles-inl.h",
    "src/objects/fixed-array-inl.h",
    "src/wasm/decoder.h",
    "src/wasm/wasm-engine.h",
    "src/wasm/wasm-objects.h"
  ],
  "classes": [
    {
      "name": "ConstantExpressionInterface",
      "properties": [],
      "methods": [
        {
          "name": "I32Const",
          "parameters": [
            "FullDecoder* decoder",
            "Value* result",
            "int32_t value"
          ],
          "return_type": "void",
          "logic": "Sets the runtime value of the result to an i32 constant if generate_value() is true."
        },
        {
          "name": "I64Const",
          "parameters": [
            "FullDecoder* decoder",
            "Value* result",
            "int64_t value"
          ],
          "return_type": "void",
          "logic": "Sets the runtime value of the result to an i64 constant if generate_value() is true."
        },
        {
          "name": "F32Const",
          "parameters": [
            "FullDecoder* decoder",
            "Value* result",
            "float value"
          ],
          "return_type": "void",
          "logic": "Sets the runtime value of the result to an f32 constant if generate_value() is true."
        },
        {
          "name": "F64Const",
          "parameters": [
            "FullDecoder* decoder",
            "Value* result",
            "double value"
          ],
          "return_type": "void",
          "logic": "Sets the runtime value of the result to an f64 constant if generate_value() is true."
        },
        {
          "name": "S128Const",
          "parameters": [
            "FullDecoder* decoder",
            "const Simd128Immediate& imm",
            "Value* result"
          ],
          "return_type": "void",
          "logic": "Sets the runtime value of the result to a s128 constant if generate_value() is true."
        },
        {
          "name": "UnOp",
          "parameters": [
            "FullDecoder* decoder",
            "WasmOpcode opcode",
            "const Value& input",
            "Value* result"
          ],
          "return_type": "void",
          "logic": "Handles unary operations. Currently only supports kExprExternConvertAny and kExprAnyConvertExtern which convert between JS and WASM objects, using the isolate."
        },
        {
          "name": "BinOp",
          "parameters": [
            "FullDecoder* decoder",
            "WasmOpcode opcode",
            "const Value& lhs",
            "const Value& rhs",
            "Value* result"
          ],
          "return_type": "void",
          "logic": "Handles binary operations like I32Add, I32Sub, I32Mul, I64Add, I64Sub, I64Mul by performing the operation and storing the result in WasmValue."
        },
        {
          "name": "RefNull",
          "parameters": [
            "FullDecoder* decoder",
            "ValueType type",
            "Value* result"
          ],
          "return_type": "void",
          "logic": "Sets the runtime value of the result to null based on the provided type."
        },
        {
          "name": "RefFunc",
          "parameters": [
            "FullDecoder* decoder",
            "uint32_t function_index",
            "Value* result"
          ],
          "return_type": "void",
          "logic": "Retrieves a WasmFuncRef for the specified function index and sets the runtime value of the result."
        },
        {
          "name": "GlobalGet",
          "parameters": [
            "FullDecoder* decoder",
            "Value* result",
            "const GlobalIndexImmediate& imm"
          ],
          "return_type": "void",
          "logic": "Retrieves the value of a global variable and sets the runtime value of the result."
        },
        {
          "name": "StructNew",
          "parameters": [
            "FullDecoder* decoder",
            "const StructIndexImmediate& imm",
            "const Value args[]",
            "Value* result"
          ],
          "return_type": "void",
          "logic": "Creates a new Wasm struct from the provided arguments and sets the runtime value of the result."
        },
        {
          "name": "StringConst",
          "parameters": [
            "FullDecoder* decoder",
            "const StringConstImmediate& imm",
            "Value* result"
          ],
          "return_type": "void",
          "logic": "Loads a string literal from the module's stringref literals and sets the result's runtime value to it."
        },
        {
          "name": "StructNewDefault",
          "parameters": [
            "FullDecoder* decoder",
            "const StructIndexImmediate& imm",
            "Value* result"
          ],
          "return_type": "void",
          "logic": "Creates a new Wasm struct with default values for fields and sets the runtime value of the result."
        },
        {
          "name": "ArrayNew",
          "parameters": [
            "FullDecoder* decoder",
            "const ArrayIndexImmediate& imm",
            "const Value& length",
            "const Value& initial_value",
            "Value* result"
          ],
          "return_type": "void",
          "logic": "Creates a new Wasm array with a specified length and initial value and sets the runtime value of the result."
        },
        {
          "name": "ArrayNewDefault",
          "parameters": [
            "FullDecoder* decoder",
            "const ArrayIndexImmediate& imm",
            "const Value& length",
            "Value* result"
          ],
          "return_type": "void",
          "logic": "Creates a new Wasm array with default values and sets the runtime value of the result."
        },
        {
          "name": "ArrayNewFixed",
          "parameters": [
            "FullDecoder* decoder",
            "const ArrayIndexImmediate& array_imm",
            "const IndexImmediate& length_imm",
            "const Value elements[]",
            "Value* result"
          ],
          "return_type": "void",
          "logic": "Creates a new Wasm array from a fixed set of elements and sets the runtime value of the result."
        },
        {
          "name": "ArrayNewSegment",
          "parameters": [
            "FullDecoder* decoder",
            "const ArrayIndexImmediate& array_imm",
            "const IndexImmediate& segment_imm",
            "const Value& offset_value",
            "const Value& length_value",
            "Value* result"
          ],
          "return_type": "void",
          "logic": "Creates a new Wasm array from a segment of memory or an element segment, handling numeric and reference element types.  Checks for bounds errors."
        },
        {
          "name": "RefI31",
          "parameters": [
            "FullDecoder* decoder",
            "const Value& input",
            "Value* result"
          ],
          "return_type": "void",
          "logic": "Converts an i32 input into an i31 reference and stores it into the result.  Crafts the Smi manually, handling the sign extension."
        },
        {
          "name": "DoReturn",
          "parameters": [
            "FullDecoder* decoder",
            "uint32_t drop_values"
          ],
          "return_type": "void",
          "logic": "Handles the return from a constant expression by marking the end of decoding and storing the computed value."
        },
        {
          "name": "GetTrustedInstanceDataForTypeIndex",
          "parameters": [
            "ModuleTypeIndex index"
          ],
          "return_type": "DirectHandle<WasmTrustedInstanceData>",
          "logic": "Retrieves the appropriate trusted instance data (shared or non-shared) based on the given type index."
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "DefaultValueForType",
      "parameters": [
        "ValueType type",
        "Isolate* isolate",
        "const WasmModule* module"
      ],
      "return_type": "WasmValue",
      "logic": "Returns the default value for a given Wasm value type (e.g., 0 for i32, 0.0 for f64, null for ref)."
    }
  ]
}