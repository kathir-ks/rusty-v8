{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/wasm/function-body-decoder.h",
  "imports": [
    "src/base/compiler-specific.h",
    "src/base/iterator.h",
    "src/common/globals.h",
    "src/wasm/decoder.h",
    "src/wasm/wasm-opcodes.h",
    "src/wasm/wasm-result.h"
  ],
  "classes": [
    {
      "name": "FunctionBody",
      "properties": [
        "sig",
        "offset",
        "start",
        "end",
        "is_shared"
      ],
      "methods": [
        {
          "name": "FunctionBody",
          "parameters": [
            "const FunctionSig* sig",
            "uint32_t offset",
            "const uint8_t* start",
            "const uint8_t* end",
            "bool is_shared"
          ],
          "return_type": "void",
          "logic": "Constructor for FunctionBody, initializes member variables."
        }
      ]
    },
    {
      "name": "BodyLocalDecls",
      "properties": [
        "encoded_size",
        "num_locals",
        "local_types"
      ],
      "methods": []
    },
    {
      "name": "BytecodeIterator",
      "properties": [],
      "methods": [
        {
          "name": "BytecodeIterator",
          "parameters": [
            "const uint8_t* start",
            "const uint8_t* end"
          ],
          "return_type": "void",
          "logic": "Constructor for BytecodeIterator, starts after local declarations."
        },
        {
          "name": "BytecodeIterator",
          "parameters": [
            "const uint8_t* start",
            "const uint8_t* end",
            "BodyLocalDecls* decls",
            "Zone* zone"
          ],
          "return_type": "void",
          "logic": "Constructor for BytecodeIterator, starts with local declarations. Decodes and potentially validates them."
        },
        {
          "name": "opcodes",
          "parameters": [],
          "return_type": "base::iterator_range<opcode_iterator>",
          "logic": "Returns an iterator range for iterating over the WASM opcodes."
        },
        {
          "name": "offsets",
          "parameters": [],
          "return_type": "base::iterator_range<offset_iterator>",
          "logic": "Returns an iterator range for iterating over the offsets of the WASM opcodes."
        },
        {
          "name": "current",
          "parameters": [],
          "return_type": "WasmOpcode",
          "logic": "Returns the current WASM opcode."
        },
        {
          "name": "next",
          "parameters": [],
          "return_type": "void",
          "logic": "Moves the iterator to the next WASM opcode."
        },
        {
          "name": "has_next",
          "parameters": [],
          "return_type": "bool",
          "logic": "Checks if there is a next WASM opcode."
        },
        {
          "name": "prefixed_opcode",
          "parameters": [],
          "return_type": "WasmOpcode",
          "logic": "Reads the prefixed opcode (handles multi-byte opcodes)."
        },
        {
          "name": "pc",
          "parameters": [],
          "return_type": "const uint8_t*",
          "logic": "Returns the current program counter (pointer to the current bytecode)."
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "ValidateFunctionBody",
      "parameters": [
        "Zone* zone",
        "WasmEnabledFeatures enabled",
        "const WasmModule* module",
        "WasmDetectedFeatures* detected",
        "const FunctionBody& body"
      ],
      "return_type": "DecodeResult",
      "logic": "Validates the body of a WASM function."
    },
    {
      "name": "DecodeLocalDecls",
      "parameters": [
        "WasmEnabledFeatures enabled",
        "BodyLocalDecls* decls",
        "const uint8_t* start",
        "const uint8_t* end",
        "Zone* zone"
      ],
      "return_type": "void",
      "logic": "Decodes the local declarations of a WASM function body. Validation is not performed."
    },
    {
      "name": "ValidateAndDecodeLocalDeclsForTesting",
      "parameters": [
        "WasmEnabledFeatures enabled",
        "BodyLocalDecls* decls",
        "const WasmModule* module",
        "bool is_shared",
        "const uint8_t* start",
        "const uint8_t* end",
        "Zone* zone"
      ],
      "return_type": "bool",
      "logic": "Decodes and validates local declarations of a WASM function body, intended for testing."
    },
    {
      "name": "AnalyzeLoopAssignmentForTesting",
      "parameters": [
        "Zone* zone",
        "uint32_t num_locals",
        "const uint8_t* start",
        "const uint8_t* end",
        "bool* loop_is_innermost"
      ],
      "return_type": "BitVector*",
      "logic": "Analyzes loop assignments for testing purposes."
    },
    {
      "name": "OpcodeLength",
      "parameters": [
        "const uint8_t* pc",
        "const uint8_t* end"
      ],
      "return_type": "unsigned",
      "logic": "Computes the length of the opcode at the given address."
    },
    {
      "name": "CheckHardwareSupportsSimd",
      "parameters": [],
      "return_type": "bool",
      "logic": "Checks if the underlying hardware supports the Wasm SIMD proposal."
    }
  ]
}