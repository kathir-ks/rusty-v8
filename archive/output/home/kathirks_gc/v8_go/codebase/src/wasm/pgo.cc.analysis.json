{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/wasm/pgo.cc",
  "imports": [
    "src/wasm/pgo.h",
    "src/wasm/decoder.h",
    "src/wasm/wasm-module-builder.h"
  ],
  "classes": [
    {
      "name": "ProfileGenerator",
      "properties": [
        "module_",
        "allocator_",
        "zone_",
        "type_feedback_mutex_guard_",
        "tiering_budget_array_"
      ],
      "methods": [
        {
          "name": "ProfileGenerator",
          "parameters": [
            "const WasmModule* module",
            "const std::atomic<uint32_t>* tiering_budget_array"
          ],
          "return_type": "ProfileGenerator",
          "logic": "Constructor for the ProfileGenerator class. Initializes the module, mutex guard for type feedback, and tiering budget array."
        },
        {
          "name": "GetProfileData",
          "parameters": [],
          "return_type": "base::OwnedVector<uint8_t>",
          "logic": "Serializes type feedback and tiering information into a byte vector to be used as profile data. It uses a ZoneBuffer for temporary storage."
        },
        {
          "name": "SerializeTypeFeedback",
          "parameters": [
            "ZoneBuffer& buffer"
          ],
          "return_type": "void",
          "logic": "Serializes the type feedback information for each function in the module into the provided buffer. The serialization includes the function index, feedback vector, and call targets."
        },
        {
          "name": "SerializeTieringInfo",
          "parameters": [
            "ZoneBuffer& buffer"
          ],
          "return_type": "void",
          "logic": "Serializes the tiering information for each function, indicating whether it was executed or tiered up. This information is based on the tiering budget array and type feedback."
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "DeserializeTypeFeedback",
      "parameters": [
        "Decoder& decoder",
        "const WasmModule* module"
      ],
      "return_type": "void",
      "logic": "Deserializes the type feedback information from the decoder and populates the module's type feedback data structures. It includes checks for consistency."
    },
    {
      "name": "DeserializeTieringInformation",
      "parameters": [
        "Decoder& decoder",
        "const WasmModule* module"
      ],
      "return_type": "std::unique_ptr<ProfileInformation>",
      "logic": "Deserializes the tiering information from the decoder and creates a ProfileInformation object containing lists of executed and tiered-up functions."
    },
    {
      "name": "RestoreProfileData",
      "parameters": [
        "const WasmModule* module",
        "base::Vector<uint8_t> profile_data"
      ],
      "return_type": "std::unique_ptr<ProfileInformation>",
      "logic": "Deserializes both type feedback and tiering information from the provided profile data and returns a ProfileInformation object."
    },
    {
      "name": "DumpProfileToFile",
      "parameters": [
        "const WasmModule* module",
        "base::Vector<const uint8_t> wire_bytes",
        "std::atomic<uint32_t>* tiering_budget_array"
      ],
      "return_type": "void",
      "logic": "Generates profile data using ProfileGenerator and dumps it to a file named 'profile-wasm-<hash>', where <hash> is derived from the wasm wire bytes. The function calculates the hash of the provided wasm wire bytes and saves the serialized PGO data to a file with that name."
    },
    {
      "name": "LoadProfileFromFile",
      "parameters": [
        "const WasmModule* module",
        "base::Vector<const uint8_t> wire_bytes"
      ],
      "return_type": "std::unique_ptr<ProfileInformation>",
      "logic": "Loads profile data from a file named 'profile-wasm-<hash>', where <hash> is derived from the wasm wire bytes, and restores the profile information using RestoreProfileData."
    }
  ]
}