{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/asmjs/asm-js.cc",
  "imports": [
    "src/asmjs/asm-js.h",
    "<optional>",
    "src/asmjs/asm-names.h",
    "src/asmjs/asm-parser.h",
    "src/ast/ast.h",
    "src/base/platform/elapsed-timer.h",
    "src/base/vector.h",
    "src/codegen/compiler.h",
    "src/codegen/unoptimized-compilation-info.h",
    "src/common/assert-scope.h",
    "src/common/message-template.h",
    "src/execution/execution.h",
    "src/execution/isolate.h",
    "src/handles/handles.h",
    "src/heap/factory.h",
    "src/logging/counters.h",
    "src/objects/heap-number-inl.h",
    "src/objects/objects-inl.h",
    "src/parsing/parse-info.h",
    "src/parsing/scanner-character-streams.h",
    "src/parsing/scanner.h",
    "src/wasm/wasm-engine.h",
    "src/wasm/wasm-js.h",
    "src/wasm/wasm-limits.h",
    "src/wasm/wasm-module-builder.h",
    "src/wasm/wasm-objects-inl.h",
    "src/wasm/wasm-result.h"
  ],
  "classes": [
    {
      "name": "AsmJsCompilationJob",
      "properties": [
        "allocator_",
        "zone_",
        "compilation_info_",
        "module_",
        "asm_offsets_",
        "stdlib_uses_",
        "compile_time_",
        "module_source_size_"
      ],
      "methods": [
        {
          "name": "AsmJsCompilationJob",
          "parameters": [
            "ParseInfo* parse_info",
            "FunctionLiteral* literal",
            "AccountingAllocator* allocator"
          ],
          "return_type": "explicit",
          "logic": "Constructor for the AsmJsCompilationJob class. Initializes member variables based on the provided parameters."
        },
        {
          "name": "ExecuteJobImpl",
          "parameters": [],
          "return_type": "Status",
          "logic": "Translates an asm.js module to a WebAssembly module. Parses the asm.js source, validates it, and translates it into a valid WebAssembly module.  Stores the resulting module, offsets, and standard library uses."
        },
        {
          "name": "FinalizeJobImpl",
          "parameters": [
            "DirectHandle<SharedFunctionInfo> shared_info",
            "Isolate* isolate"
          ],
          "return_type": "Status",
          "logic": "Compiles and decodes the WebAssembly module.  Takes the WebAssembly module produced in ExecuteJobImpl, hands it to the WebAssembly engine for compilation and decoding, and records timing information."
        },
        {
          "name": "FinalizeJobImpl",
          "parameters": [
            "DirectHandle<SharedFunctionInfo> shared_info",
            "LocalIsolate* isolate"
          ],
          "return_type": "Status",
          "logic": "Returns RETRY_ON_MAIN_THREAD, indicating that the finalization should be retried on the main thread."
        },
        {
          "name": "RecordHistograms",
          "parameters": [
            "Isolate* isolate"
          ],
          "return_type": "void",
          "logic": "Records histograms related to the asm.js module, such as the module size in bytes."
        }
      ]
    },
    {
      "name": "AsmJs",
      "properties": [
        "kSingleFunctionName"
      ],
      "methods": [
        {
          "name": "NewCompilationJob",
          "parameters": [
            "ParseInfo* parse_info",
            "FunctionLiteral* literal",
            "AccountingAllocator* allocator"
          ],
          "return_type": "std::unique_ptr<UnoptimizedCompilationJob>",
          "logic": "Creates and returns a new AsmJsCompilationJob instance, wrapped in a unique pointer."
        },
        {
          "name": "InstantiateAsmWasm",
          "parameters": [
            "Isolate* isolate",
            "DirectHandle<SharedFunctionInfo> shared",
            "DirectHandle<AsmWasmData> wasm_data",
            "DirectHandle<JSReceiver> stdlib",
            "DirectHandle<JSReceiver> foreign",
            "DirectHandle<JSArrayBuffer> memory"
          ],
          "return_type": "MaybeDirectHandle<Object>",
          "logic": "Instantiates a translated asm.js WebAssembly module.  Takes the compiled WasmModuleObject and other parameters such as the standard library, foreign imports, and memory, and instantiates the module.  Performs validation checks and reports instantiation success or failure."
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "StdlibMathMember",
      "parameters": [
        "Isolate* isolate",
        "DirectHandle<JSReceiver> stdlib",
        "DirectHandle<Name> name"
      ],
      "return_type": "DirectHandle<Object>",
      "logic": "Retrieves a member of the Math object within the standard library (stdlib). Used to validate standard library functions and constants."
    },
    {
      "name": "AreStdlibMembersValid",
      "parameters": [
        "Isolate* isolate",
        "DirectHandle<JSReceiver> stdlib",
        "wasm::AsmJsParser::StdlibSet members",
        "bool* is_typed_array"
      ],
      "return_type": "bool",
      "logic": "Checks if the members of the provided standard library (stdlib) match the expected values and types for asm.js.  Validates constants like Infinity and NaN, standard Math functions, and TypedArray constructors."
    },
    {
      "name": "Report",
      "parameters": [
        "Handle<Script> script",
        "int position",
        "base::Vector<const char> text",
        "MessageTemplate message_template",
        "v8::Isolate::MessageErrorLevel level"
      ],
      "return_type": "void",
      "logic": "Reports a message (e.g., warning, error) during asm.js compilation or instantiation to the V8 engine's message handler.  Constructs a message object with the given text, position, and severity level."
    },
    {
      "name": "ReportCompilationSuccess",
      "parameters": [
        "Handle<Script> script",
        "int position",
        "double compile_time",
        "size_t module_size"
      ],
      "return_type": "void",
      "logic": "Reports the successful compilation of an asm.js module via WebAssembly.  Logs the compilation time and module size."
    },
    {
      "name": "ReportCompilationFailure",
      "parameters": [
        "ParseInfo* parse_info",
        "int position",
        "const char* reason"
      ],
      "return_type": "void",
      "logic": "Reports the failure of asm.js compilation.  Logs the failure reason as a warning."
    },
    {
      "name": "ReportInstantiationSuccess",
      "parameters": [
        "Handle<Script> script",
        "int position",
        "double instantiate_time"
      ],
      "return_type": "void",
      "logic": "Reports the successful instantiation of an asm.js module. Logs the instantiation time."
    },
    {
      "name": "ReportInstantiationFailure",
      "parameters": [
        "Handle<Script> script",
        "int position",
        "const char* reason"
      ],
      "return_type": "void",
      "logic": "Reports the failure of asm.js instantiation. Logs the failure reason as a warning."
    },
    {
      "name": "IsValidAsmjsMemorySize",
      "parameters": [
        "size_t size"
      ],
      "return_type": "bool",
      "logic": "Validates if the provided size is a valid size for asm.js memory (ArrayBuffer).  Checks if it meets the minimum size, maximum size, and power-of-2 requirements."
    }
  ]
}