{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/api/api-arguments.cc",
  "imports": [
    "src/api/api-arguments.h",
    "src/api/api-arguments-inl.h"
  ],
  "classes": [
    {
      "name": "PropertyCallbackArguments",
      "properties": [
        "javascript_execution_counter_"
      ],
      "methods": [
        {
          "name": "PropertyCallbackArguments",
          "parameters": [
            "Isolate* isolate",
            "Tagged<Object> data",
            "Tagged<Object> self",
            "Tagged<JSObject> holder",
            "Maybe<ShouldThrow> should_throw"
          ],
          "return_type": "void",
          "logic": "Constructor for PropertyCallbackArguments. Initializes the arguments passed to a property callback function. It sets the values for the 'this', 'holder', 'data', and 'isolate' slots, and determines whether errors should be thrown based on the `should_throw` argument. It also includes debug assertions and zapping of fields in debug mode."
        }
      ]
    },
    {
      "name": "FunctionCallbackArguments",
      "properties": [
        "argv_",
        "argc_"
      ],
      "methods": [
        {
          "name": "FunctionCallbackArguments",
          "parameters": [
            "Isolate* isolate",
            "Tagged<FunctionTemplateInfo> target",
            "Tagged<HeapObject> new_target",
            "Address* argv",
            "int argc"
          ],
          "return_type": "void",
          "logic": "Constructor for FunctionCallbackArguments. Initializes the arguments passed to a function callback function. It sets the values for the 'target', 'new_target', 'isolate', and 'context' slots, and also stores the argument vector and argument count. It also sets the return value to undefined."
        }
      ]
    }
  ],
  "functions": []
}