{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/sandbox/trusted-pointer-scope.cc",
  "imports": [
    "src/sandbox/trusted-pointer-scope.h",
    "src/objects/heap-object-inl.h"
  ],
  "classes": [
    {
      "name": "TrustedPointerPublishingScope",
      "properties": [
        "isolate_",
        "state_",
        "storage_",
        "singleton_",
        "vector_"
      ],
      "methods": [
        {
          "name": "TrustedPointerPublishingScope",
          "parameters": [
            "Isolate* isolate",
            "const DisallowJavascriptExecution& no_js"
          ],
          "return_type": "void",
          "logic": "Constructor. Initializes the isolate_ member and asserts that a TrustedPointerPublishingScope is not already active for the isolate. Sets the isolate's current trusted pointer publishing scope to this instance."
        },
        {
          "name": "~TrustedPointerPublishingScope",
          "parameters": [],
          "return_type": "void",
          "logic": "Destructor. If the scope ended in failure, it overwrites the tag of tracked pointers to indicate that they are unpublished. It then deletes the vector if it was used. Finally, it clears the isolate's trusted pointer publishing scope, ensuring it points to null."
        },
        {
          "name": "TrackPointer",
          "parameters": [
            "TrustedPointerTableEntry* entry"
          ],
          "return_type": "void",
          "logic": "Tracks a TrustedPointerTableEntry. If no pointers are tracked yet, it saves the entry in singleton_. If there's already one tracked, it creates a vector, moves the previous entry into the vector, and then adds the new entry to the vector."
        },
        {
          "name": "MarkSuccess",
          "parameters": [],
          "return_type": "void",
          "logic": "Marks the TrustedPointerPublishingScope as successful, preventing the cleanup from overwriting tags."
        }
      ]
    },
    {
      "name": "DisableTrustedPointerPublishingScope",
      "properties": [
        "isolate_",
        "saved_"
      ],
      "methods": [
        {
          "name": "DisableTrustedPointerPublishingScope",
          "parameters": [
            "Isolate* isolate"
          ],
          "return_type": "void",
          "logic": "Constructor. Saves the current TrustedPointerPublishingScope of the isolate and sets it to null, effectively disabling trusted pointer publishing within this scope."
        },
        {
          "name": "~DisableTrustedPointerPublishingScope",
          "parameters": [],
          "return_type": "void",
          "logic": "Destructor. Restores the isolate's TrustedPointerPublishingScope to the saved value."
        }
      ]
    }
  ],
  "functions": []
}