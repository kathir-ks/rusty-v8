{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/sandbox/cppheap-pointer-table.cc",
  "imports": [
    "src/sandbox/cppheap-pointer-table.h",
    "src/execution/isolate.h",
    "src/logging/counters.h",
    "src/sandbox/cppheap-pointer-table-inl.h"
  ],
  "classes": [
    {
      "name": "CppHeapPointerTable",
      "properties": [],
      "methods": [
        {
          "name": "SweepAndCompact",
          "parameters": [
            "Space* space",
            "Counters* counters"
          ],
          "return_type": "uint32_t",
          "logic": "Sweeps the pointer table, reclaiming dead entries and compacting the table by moving live entries to the front. It rebuilds the freelist with newly freed entries and clears the marking bit on live entries. It also resolves evacuation entries when compacting the table. Returns the number of live entries after the sweep and compaction."
        },
        {
          "name": "ResolveEvacuationEntryDuringSweeping",
          "parameters": [
            "uint32_t new_index",
            "CppHeapPointerHandle* handle_location",
            "uint32_t start_of_evacuation_area"
          ],
          "return_type": "void",
          "logic": "Resolves an evacuation entry during sweeping by copying the entry to its new location (specified by `new_index`) and updating the handle (at `handle_location`) to point to the new location. This function is used during compaction."
        }
      ]
    }
  ],
  "functions": []
}