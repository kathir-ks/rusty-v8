{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/ast/source-range-ast-visitor.h",
  "imports": [
    "<unordered_set>",
    "src/ast/ast-traversal-visitor.h"
  ],
  "classes": [
    {
      "name": "SourceRangeAstVisitor",
      "properties": [
        "source_range_map_",
        "continuation_positions_"
      ],
      "methods": [
        {
          "name": "SourceRangeAstVisitor",
          "parameters": [
            "uintptr_t stack_limit",
            "Expression* root",
            "SourceRangeMap* source_range_map"
          ],
          "return_type": "void",
          "logic": "Constructor for the SourceRangeAstVisitor. Initializes the visitor with a stack limit, root expression, and source range map."
        },
        {
          "name": "VisitBlock",
          "parameters": [
            "Block* stmt"
          ],
          "return_type": "void",
          "logic": "Visits a Block statement and potentially removes source ranges associated with the last statement."
        },
        {
          "name": "VisitSwitchStatement",
          "parameters": [
            "SwitchStatement* stmt"
          ],
          "return_type": "void",
          "logic": "Visits a SwitchStatement and potentially removes source ranges associated with the last statement in a case."
        },
        {
          "name": "VisitFunctionLiteral",
          "parameters": [
            "FunctionLiteral* expr"
          ],
          "return_type": "void",
          "logic": "Visits a FunctionLiteral expression and potentially removes source ranges associated with the last statement in the function body."
        },
        {
          "name": "VisitNode",
          "parameters": [
            "AstNode* node"
          ],
          "return_type": "bool",
          "logic": "Generic visitor for AST nodes. Returns whether to continue traversal."
        },
        {
          "name": "VisitTryCatchStatement",
          "parameters": [
            "TryCatchStatement* stmt"
          ],
          "return_type": "void",
          "logic": "Visits a TryCatchStatement and potentially removes source ranges."
        },
        {
          "name": "VisitTryFinallyStatement",
          "parameters": [
            "TryFinallyStatement* stmt"
          ],
          "return_type": "void",
          "logic": "Visits a TryFinallyStatement and potentially removes source ranges."
        },
        {
          "name": "MaybeRemoveContinuationRange",
          "parameters": [
            "Statement* last_statement"
          ],
          "return_type": "void",
          "logic": "Potentially removes a continuation source range from the provided statement."
        },
        {
          "name": "MaybeRemoveLastContinuationRange",
          "parameters": [
            "ZonePtrList<Statement>* stmts"
          ],
          "return_type": "void",
          "logic": "Potentially removes the continuation range from the last statement in a list of statements."
        },
        {
          "name": "MaybeRemoveContinuationRangeOfAsyncReturn",
          "parameters": [
            "TryCatchStatement* stmt"
          ],
          "return_type": "void",
          "logic": "Potentially removes a continuation range that might be caused by async return."
        }
      ]
    }
  ],
  "functions": []
}