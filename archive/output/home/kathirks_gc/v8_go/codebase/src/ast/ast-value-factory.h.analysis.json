{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/ast/ast-value-factory.h",
  "error": "JSON parsing error",
  "raw_response": "```json\n{\n  \"file_path\": \"/home/kathirks_gc/v8_go/codebase/src/ast/ast-value-factory.h\",\n  \"imports\": [\n    \"<forward_list>\",\n    \"src/base/hashmap.h\",\n    \"src/base/logging.h\",\n    \"src/common/globals.h\",\n    \"src/handles/handles.h\",\n    \"src/numbers/conversions.h\",\n    \"src/objects/name.h\",\n    \"src/zone/zone.h\"\n  ],\n  \"classes\": [\n    {\n      \"name\": \"AstRawString\",\n      \"properties\": [\n        \"next_\",\n        \"string_\",\n        \"literal_bytes_\",\n        \"raw_hash_field_\",\n        \"is_one_byte_\",\n        \"has_string_\"\n      ],\n      \"methods\": [\n        {\n          \"name\": \"Equal\",\n          \"parameters\": [\n            \"const AstRawString* lhs\",\n            \"const AstRawString* rhs\"\n          ],\n          \"return_type\": \"bool\",\n          \"logic\": \"Compares two AstRawString objects for equality.\"\n        },\n        {\n          \"name\": \"Compare\",\n          \"parameters\": [\n            \"const AstRawString* lhs\",\n            \"const AstRawString* rhs\"\n          ],\n          \"return_type\": \"int\",\n          \"logic\": \"Compares two AstRawString objects lexicographically.\"\n        },\n        {\n          \"name\": \"IsEmpty\",\n          \"parameters\": [],\n          \"return_type\": \"bool\",\n          \"logic\": \"Checks if the string is empty.\"\n        },\n        {\n          \"name\": \"length\",\n          \"parameters\": [],\n          \"return_type\": \"int\",\n          \"logic\": \"Returns the length of the string.\"\n        },\n        {\n          \"name\": \"AsArrayIndex\",\n          \"parameters\": [\n            \"uint32_t* index\"\n          ],\n          \"return_type\": \"bool\",\n          \"logic\": \"Attempts to convert the string to an array index.\"\n        },\n        {\n          \"name\": \"IsIntegerIndex\",\n          \"parameters\": [],\n          \"return_type\": \"bool\",\n          \"logic\": \"Checks if the string represents an integer index.\"\n        },\n        {\n          \"name\": \"IsOneByteEqualTo\",\n          \"parameters\": [\n            \"const char* data\"\n          ],\n          \"return_type\": \"V8_EXPORT_PRIVATE bool\",\n          \"logic\": \"Checks if the string is equal to the given char* data.\"\n        },\n        {\n          \"name\": \"FirstCharacter\",\n          \"parameters\": [],\n          \"return_type\": \"uint16_t\",\n          \"logic\": \"Returns the first character of the string.\"\n        },\n        {\n          \"name\": \"Internalize\",\n          \"parameters\": [\n            \"IsolateT* isolate\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Internalizes the string in the V8 heap.\"\n        },\n        {\n          \"name\": \"is_one_byte\",\n          \"parameters\": [],\n          \"return_type\": \"bool\",\n          \"logic\": \"Returns whether the string is stored as one-byte characters.\"\n        },\n        {\n          \"name\": \"byte_length\",\n          \"parameters\": [],\n          \"return_type\": \"int\",\n          \"logic\": \"Returns the byte length of the underlying data.\"\n        },\n        {\n          \"name\": \"raw_data\",\n          \"parameters\": [],\n          \"return_type\": \"const unsigned char*\",\n          \"logic\": \"Returns a pointer to the raw byte data.\"\n        },\n        {\n          \"name\": \"IsPrivateName\",\n          \"parameters\": [],\n          \"return_type\": \"bool\",\n          \"logic\": \"Checks if the string is a private name (starts with '#').\"\n        },\n        {\n          \"name\": \"raw_hash_field\",\n          \"parameters\": [],\n          \"return_type\": \"uint32_t\",\n          \"logic\": \"Returns the raw hash field value.\"\n        },\n        {\n          \"name\": \"Hash\",\n          \"parameters\": [],\n          \"return_type\": \"uint32_t\",\n          \"logic\": \"Computes and returns the hash of the string.\"\n        },\n        {\n          \"name\": \"string\",\n          \"parameters\": [],\n          \"return_type\": \"IndirectHandle<String>\",\n          \"logic\": \"Returns the internalized String object.\"\n        }\n      ]\n    },\n    {\n      \"name\": \"AstConsString\",\n      \"properties\": [\n        \"string_\",\n        \"segment_\"\n      ],\n      \"methods\": [\n        {\n          \"name\": \"AddString\",\n          \"parameters\": [\n            \"Zone* zone\",\n            \"const AstRawString* s\"\n          ],\n          \"return_type\": \"AstConsString*\",\n          \"logic\": \"Adds a string segment to the ConsString.\"\n        },\n        {\n          \"name\": \"IsEmpty\",\n          \"parameters\": [],\n          \"return_type\": \"bool\",\n          \"logic\": \"Checks if the ConsString is empty.\"\n        },\n        {\n          \"name\": \"GetString\",\n          \"parameters\": [\n            \"IsolateT* isolate\"\n          ],\n          \"return_type\": \"IndirectHandle<String>\",\n          \"logic\": \"Gets or allocates the internalized String object for the ConsString.\"\n        },\n        {\n          \"name\": \"AllocateFlat\",\n          \"parameters\": [\n            \"IsolateT* isolate\"\n          ],\n          \"return_type\": \"Handle<String>\",\n          \"logic\": \"Allocates a flat string representation from cons string.\"\n        },\n        {\n          \"name\": \"ToRawStrings\",\n          \"parameters\": [],\n          \"return_type\": \"std::forward_list<const AstRawString*>\",\n          \"logic\": \"Converts ConsString to a list of AstRawStrings.\"\n        },\n        {\n          \"name\": \"last\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the last raw string segment of the cons string.\"\n        }\n      ]\n    },\n    {\n      \"name\": \"AstBigInt\",\n      \"properties\": [\n        \"bigint_\"\n      ],\n      \"methods\": [\n        {\n          \"name\": \"AstBigInt\",\n          \"parameters\": [\n            \"const char* bigint\"\n          ],\n          \"return_type\": \"\",\n          \"logic\": \"Constructor for AstBigInt, taking a C-style string representing the BigInt.\"\n        },\n        {\n          \"name\": \"c_str\",\n          \"parameters\": [],\n          \"return_type\": \"const char*\",\n          \"logic\": \"Returns the underlying C-style string representation of the BigInt.\"\n        }\n      ]\n    },\n    {\n      \"name\": \"AstRawStringMapMatcher\",\n      \"properties\": [],\n      \"methods\": [\n        {\n          \"name\": \"operator()\",\n          \"parameters\": [\n            \"uint32_t hash1\",\n            \"uint32_t hash2\",\n            \"const AstRawString* lookup_key\",\n            \"const AstRawString* entry_key\"\n          ],\n          \"return_type\": \"bool\",\n          \"logic\": \"Compares two AstRawString objects based on hashes and equality, used for hash map lookups.\"\n        }\n      ]\n    },\n    {\n      \"name\": \"AstStringConstants\",\n      \"properties\": [\n        \"zone_\",\n        \"string_table_\",\n        \"hash_seed_\",\n        \"ascii_nul_string_\",\n         \"anonymous_string_\",\n         \"arguments_string_\",\n         \"as_string_\",\n         \"assert_string_\",\n         \"async_string_\",\n         \"bigint_string_\",\n         \"boolean_string_\",\n         \"computed_string_\",\n         \"dot_brand_string_\",\n         \"constructor_string_\",\n         \"default_string_\",\n         \"done_string_\",\n         \"dot_default_string_\",\n         \"dot_for_string_\",\n         \"dot_generator_object_string_\",\n         \"dot_home_object_string_\",\n         \"dot_result_string_\",\n         \"dot_repl_result_string_\",\n         \"dot_static_home_object_string_\",\n         \"dot_switch_tag_string_\",\n         \"dot_catch_string_\",\n         \"empty_string_\",\n         \"eval_string_\",\n         \"from_string_\",\n         \"function_string_\",\n         \"get_space_string_\",\n         \"length_string_\",\n         \"let_string_\",\n         \"meta_string_\",\n         \"native_string_\",\n         \"new_target_string_\",\n         \"next_string_\",\n         \"number_string_\",\n         \"object_string_\",\n         \"private_constructor_string_\",\n         \"proto_string_\",\n         \"prototype_string_\",\n         \"return_string_\",\n         \"set_space_string_\",\n         \"source_string_\",\n         \"string_string_\",\n         \"symbol_string_\",\n         \"target_string_\",\n         \"this_string_\",\n         \"this_function_string_\",\n         \"throw_string_\",\n         \"undefined_string_\",\n         \"value_string_\"\n      ],\n      \"methods\": [\n        {\n          \"name\": \"AstStringConstants\",\n          \"parameters\": [\n            \"Isolate* isolate\",\n            \"uint64_t hash_seed\"\n          ],\n          \"return_type\": \"\",\n          \"logic\": \"Constructor that initializes the string constants, including one-character strings and other common strings.\"\n        },\n        {\n          \"name\": \"anonymous_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for 'anonymous'.\"\n        },\n        {\n          \"name\": \"arguments_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for 'arguments'.\"\n        },\n        {\n          \"name\": \"as_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for 'as'.\"\n        },\n        {\n          \"name\": \"assert_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for 'assert'.\"\n        },\n        {\n          \"name\": \"async_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for 'async'.\"\n        },\n        {\n          \"name\": \"bigint_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for 'bigint'.\"\n        },\n        {\n          \"name\": \"boolean_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for 'boolean'.\"\n        },\n        {\n          \"name\": \"computed_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for '<computed>'.\"\n        },\n        {\n          \"name\": \"dot_brand_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for '.brand'.\"\n        },\n        {\n          \"name\": \"constructor_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for 'constructor'.\"\n        },\n        {\n          \"name\": \"default_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for 'default'.\"\n        },\n        {\n          \"name\": \"done_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for 'done'.\"\n        },\n        {\n          \"name\": \"dot_default_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for '.default'.\"\n        },\n        {\n          \"name\": \"dot_for_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for '.for'.\"\n        },\n        {\n          \"name\": \"dot_generator_object_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for '.generator_object'.\"\n        },\n        {\n          \"name\": \"dot_home_object_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for '.home_object'.\"\n        },\n        {\n          \"name\": \"dot_result_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for '.result'.\"\n        },\n        {\n          \"name\": \"dot_repl_result_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for '.repl_result'.\"\n        },\n        {\n          \"name\": \"dot_static_home_object_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for '.static_home_object'.\"\n        },\n        {\n          \"name\": \"dot_switch_tag_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for '.switch_tag'.\"\n        },\n        {\n          \"name\": \"dot_catch_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for '.catch'.\"\n        },\n        {\n          \"name\": \"empty_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for '' (empty string).\"\n        },\n        {\n          \"name\": \"eval_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for 'eval'.\"\n        },\n        {\n          \"name\": \"from_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for 'from'.\"\n        },\n        {\n          \"name\": \"function_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for 'function'.\"\n        },\n        {\n          \"name\": \"get_space_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for 'get '.\"\n        },\n        {\n          \"name\": \"length_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for 'length'.\"\n        },\n        {\n          \"name\": \"let_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for 'let'.\"\n        },\n        {\n          \"name\": \"meta_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for 'meta'.\"\n        },\n        {\n          \"name\": \"native_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for 'native'.\"\n        },\n        {\n          \"name\": \"new_target_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for '.new.target'.\"\n        },\n        {\n          \"name\": \"next_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for 'next'.\"\n        },\n        {\n          \"name\": \"number_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for 'number'.\"\n        },\n        {\n          \"name\": \"object_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for 'object'.\"\n        },\n        {\n          \"name\": \"private_constructor_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for '#constructor'.\"\n        },\n        {\n          \"name\": \"proto_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for '__proto__'.\"\n        },\n        {\n          \"name\": \"prototype_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for 'prototype'.\"\n        },\n        {\n          \"name\": \"return_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for 'return'.\"\n        },\n        {\n          \"name\": \"set_space_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for 'set '.\"\n        },\n        {\n          \"name\": \"source_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for 'source'.\"\n        },\n        {\n          \"name\": \"string_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for 'string'.\"\n        },\n        {\n          \"name\": \"symbol_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for 'symbol'.\"\n        },\n        {\n          \"name\": \"target_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for 'target'.\"\n        },\n        {\n          \"name\": \"this_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for 'this'.\"\n        },\n        {\n          \"name\": \"this_function_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for '.this_function'.\"\n        },\n        {\n          \"name\": \"throw_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for 'throw'.\"\n        },\n        {\n          \"name\": \"undefined_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for 'undefined'.\"\n        },\n        {\n          \"name\": \"value_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for 'value'.\"\n        },\n        {\n          \"name\": \"hash_seed\",\n          \"parameters\": [],\n          \"return_type\": \"uint64_t\",\n          \"logic\": \"Returns the hash seed.\"\n        },\n        {\n          \"name\": \"string_table\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawStringMap*\",\n          \"logic\": \"Returns the string table.\"\n        },\n        {\n          \"name\": \"one_character_string\",\n          \"parameters\": [\n            \"int c\"\n          ],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the AstRawString for a single character ASCII string.\"\n        }\n      ]\n    },\n    {\n      \"name\": \"AstValueFactory\",\n      \"properties\": [\n        \"string_table_\",\n        \"strings_\",\n        \"strings_end_\",\n        \"string_constants_\",\n        \"empty_cons_string_\",\n        \"ast_raw_string_zone_\",\n        \"single_parse_zone_\",\n        \"hash_seed_\"\n      ],\n      \"methods\": [\n        {\n          \"name\": \"AstValueFactory\",\n          \"parameters\": [\n            \"Zone* zone\",\n            \"const AstStringConstants* string_constants\",\n            \"uint64_t hash_seed\"\n          ],\n          \"return_type\": \"\",\n          \"logic\": \"Constructor for AstValueFactory, initializing the string table and other members.\"\n        },\n        {\n          \"name\": \"AstValueFactory\",\n          \"parameters\": [\n            \"Zone* ast_raw_string_zone\",\n            \"Zone* single_parse_zone\",\n            \"const AstStringConstants* string_constants\",\n            \"uint64_t hash_seed\"\n          ],\n          \"return_type\": \"\",\n          \"logic\": \"Constructor with separate zones for AstRawStrings and single parse data.\"\n        },\n        {\n          \"name\": \"ast_raw_string_zone\",\n          \"parameters\": [],\n          \"return_type\": \"Zone*\",\n          \"logic\": \"Returns the zone where AstRawString objects are allocated.\"\n        },\n        {\n          \"name\": \"single_parse_zone\",\n          \"parameters\": [],\n          \"return_type\": \"Zone*\",\n          \"logic\": \"Returns the zone for data related to single parse.\"\n        },\n        {\n          \"name\": \"GetOneByteString\",\n          \"parameters\": [\n            \"base::Vector<const uint8_t> literal\"\n          ],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Retrieves or creates a one-byte AstRawString.\"\n        },\n        {\n          \"name\": \"GetOneByteString\",\n          \"parameters\": [\n            \"const char* string\"\n          ],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Retrieves or creates a one-byte AstRawString from a C-style string.\"\n        },\n        {\n          \"name\": \"GetTwoByteString\",\n          \"parameters\": [\n            \"base::Vector<const uint16_t> literal\"\n          ],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Retrieves or creates a two-byte AstRawString.\"\n        },\n        {\n          \"name\": \"GetString\",\n          \"parameters\": [\n            \"Tagged<String> literal\",\n            \"const SharedStringAccessGuardIfNeeded&\"\n          ],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Gets a string from tagged v8 string.\"\n        },\n        {\n          \"name\": \"NewConsString\",\n          \"parameters\": [],\n          \"return_type\": \"AstConsString*\",\n          \"logic\": \"Creates a new empty AstConsString.\"\n        },\n        {\n          \"name\": \"NewConsString\",\n          \"parameters\": [\n            \"const AstRawString* str\"\n          ],\n          \"return_type\": \"AstConsString*\",\n          \"logic\": \"Creates a new AstConsString with a single AstRawString.\"\n        },\n        {\n          \"name\": \"NewConsString\",\n          \"parameters\": [\n            \"const AstRawString* str1\",\n            \"const AstRawString* str2\"\n          ],\n          \"return_type\": \"AstConsString*\",\n          \"logic\": \"Creates a new AstConsString with two AstRawStrings.\"\n        },\n        {\n          \"name\": \"Internalize\",\n          \"parameters\": [\n            \"IsolateT* isolate\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Internalizes all strings managed by the factory into the V8 heap.\"\n        },\n        {\n          \"name\": \"anonymous_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns 'anonymous' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"arguments_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns 'arguments' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"as_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns 'as' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"assert_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns 'assert' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"async_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns 'async' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"bigint_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns 'bigint' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"boolean_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns 'boolean' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"computed_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns '<computed>' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"dot_brand_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns '.brand' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"constructor_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns 'constructor' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"default_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns 'default' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"done_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns 'done' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"dot_default_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns '.default' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"dot_for_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns '.for' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"dot_generator_object_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns '.generator_object' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"dot_home_object_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns '.home_object' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"dot_result_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns '.result' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"dot_repl_result_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns '.repl_result' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"dot_static_home_object_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns '.static_home_object' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"dot_switch_tag_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns '.switch_tag' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"dot_catch_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns '.catch' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"empty_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns the empty string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"eval_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns 'eval' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"from_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns 'from' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"function_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns 'function' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"get_space_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns 'get ' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"length_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns 'length' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"let_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns 'let' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"meta_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns 'meta' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"native_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns 'native' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"new_target_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns '.new.target' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"next_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns 'next' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"number_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns 'number' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"object_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns 'object' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"private_constructor_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns '#constructor' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"proto_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns '__proto__' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"prototype_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns 'prototype' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"return_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns 'return' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"set_space_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns 'set ' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"source_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns 'source' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"string_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns 'string' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"symbol_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns 'symbol' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"target_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns 'target' string constant from string_constants_.\"\n        },\n        {\n          \"name\": \"this_string\",\n          \"parameters\": [],\n          \"return_type\": \"const AstRawString*\",\n          \"logic\": \"Returns 'this'"
}