{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/regexp/regexp-flags.h",
  "imports": [
    "<optional>",
    "<ostream>",
    "src/base/flags.h"
  ],
  "classes": [],
  "functions": [
    {
      "name": "IsHasIndices",
      "parameters": [
        "RegExpFlags f"
      ],
      "return_type": "bool",
      "logic": "Checks if the 'has_indices' flag is set in the given RegExpFlags."
    },
    {
      "name": "IsGlobal",
      "parameters": [
        "RegExpFlags f"
      ],
      "return_type": "bool",
      "logic": "Checks if the 'global' flag is set in the given RegExpFlags."
    },
    {
      "name": "IsIgnoreCase",
      "parameters": [
        "RegExpFlags f"
      ],
      "return_type": "bool",
      "logic": "Checks if the 'ignore_case' flag is set in the given RegExpFlags."
    },
    {
      "name": "IsLinear",
      "parameters": [
        "RegExpFlags f"
      ],
      "return_type": "bool",
      "logic": "Checks if the 'linear' flag is set in the given RegExpFlags."
    },
    {
      "name": "IsMultiline",
      "parameters": [
        "RegExpFlags f"
      ],
      "return_type": "bool",
      "logic": "Checks if the 'multiline' flag is set in the given RegExpFlags."
    },
    {
      "name": "IsDotAll",
      "parameters": [
        "RegExpFlags f"
      ],
      "return_type": "bool",
      "logic": "Checks if the 'dot_all' flag is set in the given RegExpFlags."
    },
    {
      "name": "IsUnicode",
      "parameters": [
        "RegExpFlags f"
      ],
      "return_type": "bool",
      "logic": "Checks if the 'unicode' flag is set in the given RegExpFlags."
    },
    {
      "name": "IsUnicodeSets",
      "parameters": [
        "RegExpFlags f"
      ],
      "return_type": "bool",
      "logic": "Checks if the 'unicode_sets' flag is set in the given RegExpFlags."
    },
    {
      "name": "IsSticky",
      "parameters": [
        "RegExpFlags f"
      ],
      "return_type": "bool",
      "logic": "Checks if the 'sticky' flag is set in the given RegExpFlags."
    },
    {
      "name": "IsEitherUnicode",
      "parameters": [
        "RegExpFlags f"
      ],
      "return_type": "bool",
      "logic": "Checks if either the 'unicode' or 'unicode_sets' flag is set in the given RegExpFlags."
    },
    {
      "name": "TryRegExpFlagFromChar",
      "parameters": [
        "char c"
      ],
      "return_type": "std::optional<RegExpFlag>",
      "logic": "Attempts to convert a character to a RegExpFlag. Returns an optional containing the corresponding RegExpFlag if successful, std::nullopt otherwise. Uses a list of characters, each associated with a regexp flag."
    },
    {
      "name": "operator<<",
      "parameters": [
        "std::ostream& os",
        "RegExpFlags flags"
      ],
      "return_type": "std::ostream&",
      "logic": "Overloads the output stream operator to allow printing RegExpFlags.  The actual implementation is likely in the corresponding .cc file."
    }
  ]
}