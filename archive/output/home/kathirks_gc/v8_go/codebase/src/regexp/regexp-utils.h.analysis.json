{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/regexp/regexp-utils.h",
  "imports": [
    "src/common/globals.h"
  ],
  "classes": [
    {
      "name": "RegExpUtils",
      "properties": [],
      "methods": [
        {
          "name": "GenericCaptureGetter",
          "parameters": [
            "Isolate* isolate",
            "DirectHandle<RegExpMatchInfo> match_info",
            "int capture",
            "bool* ok = nullptr"
          ],
          "return_type": "Handle<String>",
          "logic": "Retrieves a specific capture group from RegExpMatchInfo. Returns a Handle to a String representing the captured value."
        },
        {
          "name": "IsMatchedCapture",
          "parameters": [
            "Tagged<RegExpMatchInfo> match_info",
            "int capture"
          ],
          "return_type": "bool",
          "logic": "Checks if the specified capture group index is a part of the overall regex match."
        },
        {
          "name": "SetLastIndex",
          "parameters": [
            "Isolate* isolate",
            "DirectHandle<JSReceiver> regexp",
            "uint64_t value"
          ],
          "return_type": "MaybeDirectHandle<Object>",
          "logic": "Sets the lastIndex property of a RegExp object. Returns a MaybeDirectHandle to the Object."
        },
        {
          "name": "GetLastIndex",
          "parameters": [
            "Isolate* isolate",
            "DirectHandle<JSReceiver> recv"
          ],
          "return_type": "MaybeDirectHandle<Object>",
          "logic": "Gets the lastIndex property of a RegExp object. Returns a MaybeDirectHandle to the Object."
        },
        {
          "name": "RegExpExec",
          "parameters": [
            "Isolate* isolate",
            "DirectHandle<JSReceiver> regexp",
            "DirectHandle<String> string",
            "DirectHandle<Object> exec"
          ],
          "return_type": "MaybeDirectHandle<JSAny>",
          "logic": "Executes a RegExp object against a string. Returns a MaybeDirectHandle to a JSAny representing the result."
        },
        {
          "name": "IsUnmodifiedRegExp",
          "parameters": [
            "Isolate* isolate",
            "DirectHandle<Object> obj"
          ],
          "return_type": "bool",
          "logic": "Checks if the provided object is an unmodified JSRegExp instance and if its prototype chain has been modified."
        },
        {
          "name": "AdvanceStringIndex",
          "parameters": [
            "Tagged<String> string",
            "uint64_t index",
            "bool unicode"
          ],
          "return_type": "uint64_t",
          "logic": "Advances the string index by a specified amount, taking into account whether the string is Unicode-aware. Implements ES#sec-advancestringindex."
        },
        {
          "name": "SetAdvancedStringIndex",
          "parameters": [
            "Isolate* isolate",
            "DirectHandle<JSReceiver> regexp",
            "DirectHandle<String> string",
            "bool unicode"
          ],
          "return_type": "MaybeDirectHandle<Object>",
          "logic": "Sets advanced string index to the RegExp object. Returns a MaybeDirectHandle to the Object."
        }
      ]
    }
  ],
  "functions": []
}