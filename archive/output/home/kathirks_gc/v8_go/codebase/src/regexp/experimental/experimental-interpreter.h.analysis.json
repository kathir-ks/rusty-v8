{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/regexp/experimental/experimental-interpreter.h",
  "imports": [
    "src/regexp/experimental/experimental-bytecode.h",
    "src/regexp/regexp.h"
  ],
  "classes": [
    {
      "name": "ExperimentalRegExpInterpreter",
      "properties": [],
      "methods": [
        {
          "name": "FindMatches",
          "parameters": [
            "Isolate* isolate",
            "RegExp::CallOrigin call_origin",
            "Tagged<TrustedByteArray> bytecode",
            "int capture_count",
            "Tagged<String> input",
            "int start_index",
            "int32_t* output_registers",
            "int output_register_count",
            "Zone* zone"
          ],
          "return_type": "int",
          "logic": "Executes a bytecode program in breadth-first NFA mode, without backtracking, to find matching substrings. Tries to find up to `max_match_num` matches in `input`, starting at `start_index`. Returns the actual number of matches found. The boundaries of matching subranges are written to `matches_out`. Provided in variants for one-byte and two-byte strings."
        }
      ]
    }
  ],
  "functions": []
}