{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/strings/string-hasher.h",
  "imports": [
    "src/common/globals.h"
  ],
  "classes": [
    {
      "name": "RunningStringHasher",
      "properties": [
        "running_hash_"
      ],
      "methods": [
        {
          "name": "RunningStringHasher",
          "parameters": [
            "uint32_t seed"
          ],
          "return_type": "explicit",
          "logic": "Constructor that initializes the running hash with a given seed value."
        },
        {
          "name": "AddCharacter",
          "parameters": [
            "uint16_t c"
          ],
          "return_type": "void",
          "logic": "Adds a character to the running hash."
        },
        {
          "name": "Finalize",
          "parameters": [],
          "return_type": "uint32_t",
          "logic": "Finalizes the hash calculation and returns the resulting hash value."
        }
      ]
    },
    {
      "name": "StringHasher",
      "properties": [
        "kZeroHash"
      ],
      "methods": [
        {
          "name": "HashSequentialString",
          "parameters": [
            "const char_t* chars",
            "uint32_t length",
            "uint64_t seed"
          ],
          "return_type": "uint32_t",
          "logic": "Calculates the hash value for a sequential string of characters."
        },
        {
          "name": "MakeArrayIndexHash",
          "parameters": [
            "uint32_t value",
            "uint32_t length"
          ],
          "return_type": "uint32_t",
          "logic": "Calculates the hash value for a string representing an array index."
        },
        {
          "name": "GetTrivialHash",
          "parameters": [
            "uint32_t length"
          ],
          "return_type": "uint32_t",
          "logic": "Calculates a simple hash based on the string's length, useful for short strings or strings used as array indices."
        }
      ]
    },
    {
      "name": "SeededStringHasher",
      "properties": [
        "hashseed_"
      ],
      "methods": [
        {
          "name": "SeededStringHasher",
          "parameters": [
            "uint64_t hashseed"
          ],
          "return_type": "explicit",
          "logic": "Constructor that initializes the hash seed."
        },
        {
          "name": "operator()",
          "parameters": [
            "const char* name"
          ],
          "return_type": "std::size_t",
          "logic": "Function call operator that calculates the hash value of a string using the stored seed."
        }
      ]
    },
    {
      "name": "StringEquals",
      "properties": [],
      "methods": [
        {
          "name": "operator()",
          "parameters": [
            "const char* name1",
            "const char* name2"
          ],
          "return_type": "bool",
          "logic": "Function call operator that compares two strings for equality."
        }
      ]
    }
  ],
  "functions": []
}