{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/d8/async-hooks-wrapper.h",
  "imports": [
    "stack",
    "vector",
    "include/v8-function-callback.h",
    "include/v8-local-handle.h",
    "include/v8-promise.h"
  ],
  "classes": [
    {
      "name": "AsyncHooksWrap",
      "properties": [
        "isolate_",
        "init_function_",
        "before_function_",
        "after_function_",
        "promiseResolve_function_",
        "enabled_"
      ],
      "methods": [
        {
          "name": "AsyncHooksWrap",
          "parameters": [
            "Isolate* isolate"
          ],
          "return_type": "void",
          "logic": "Constructor. Initializes isolate_ and sets enabled_ to false."
        },
        {
          "name": "Enable",
          "parameters": [],
          "return_type": "void",
          "logic": "Enables the async hooks."
        },
        {
          "name": "Disable",
          "parameters": [],
          "return_type": "void",
          "logic": "Disables the async hooks."
        },
        {
          "name": "IsEnabled",
          "parameters": [],
          "return_type": "bool",
          "logic": "Returns whether the async hooks are enabled."
        },
        {
          "name": "init_function",
          "parameters": [],
          "return_type": "v8::Local<v8::Function>",
          "logic": "Getter for the init function."
        },
        {
          "name": "set_init_function",
          "parameters": [
            "v8::Local<v8::Function> value"
          ],
          "return_type": "void",
          "logic": "Setter for the init function."
        },
        {
          "name": "before_function",
          "parameters": [],
          "return_type": "v8::Local<v8::Function>",
          "logic": "Getter for the before function."
        },
        {
          "name": "set_before_function",
          "parameters": [
            "v8::Local<v8::Function> value"
          ],
          "return_type": "void",
          "logic": "Setter for the before function."
        },
        {
          "name": "after_function",
          "parameters": [],
          "return_type": "v8::Local<v8::Function>",
          "logic": "Getter for the after function."
        },
        {
          "name": "set_after_function",
          "parameters": [
            "v8::Local<v8::Function> value"
          ],
          "return_type": "void",
          "logic": "Setter for the after function."
        },
        {
          "name": "promiseResolve_function",
          "parameters": [],
          "return_type": "v8::Local<v8::Function>",
          "logic": "Getter for the promiseResolve function."
        },
        {
          "name": "set_promiseResolve_function",
          "parameters": [
            "v8::Local<v8::Function> value"
          ],
          "return_type": "void",
          "logic": "Setter for the promiseResolve function."
        }
      ]
    },
    {
      "name": "AsyncHooks",
      "properties": [
        "async_wraps_",
        "v8_isolate_",
        "async_hooks_templ",
        "async_id_symbol",
        "trigger_id_symbol",
        "asyncContexts",
        "current_async_id",
        "skip_after_termination_"
      ],
      "methods": [
        {
          "name": "AsyncHooks",
          "parameters": [
            "Isolate* isolate"
          ],
          "return_type": "void",
          "logic": "Constructor. Initializes the AsyncHooks instance with the given isolate."
        },
        {
          "name": "~AsyncHooks",
          "parameters": [],
          "return_type": "void",
          "logic": "Destructor. Cleans up resources."
        },
        {
          "name": "GetExecutionAsyncId",
          "parameters": [],
          "return_type": "async_id_t",
          "logic": "Returns the execution async ID."
        },
        {
          "name": "GetTriggerAsyncId",
          "parameters": [],
          "return_type": "async_id_t",
          "logic": "Returns the trigger async ID."
        },
        {
          "name": "CreateHook",
          "parameters": [
            "const v8::FunctionCallbackInfo<v8::Value>& info"
          ],
          "return_type": "Local<Object>",
          "logic": "Creates a new async hook."
        },
        {
          "name": "ShellPromiseHook",
          "parameters": [
            "PromiseHookType type",
            "Local<Promise> promise",
            "Local<Value> parent"
          ],
          "return_type": "static void",
          "logic": "A static method called when a PromiseHook event is triggered. Presumably used for debugging."
        },
        {
          "name": "PromiseHookDispatch",
          "parameters": [
            "PromiseHookType type",
            "Local<Promise> promise",
            "Local<Value> parent",
            "const AsyncHooksWrap& wrap",
            "AsyncHooks* hooks"
          ],
          "return_type": "static void",
          "logic": "Dispatches the promise hook event to the appropriate handler within an AsyncHooksWrap."
        }
      ]
    }
  ],
  "functions": []
}