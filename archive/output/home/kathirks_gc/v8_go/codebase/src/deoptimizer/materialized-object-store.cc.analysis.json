{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/deoptimizer/materialized-object-store.cc",
  "imports": [
    "src/deoptimizer/materialized-object-store.h",
    "src/execution/isolate.h",
    "src/heap/heap-inl.h",
    "src/objects/fixed-array-inl.h",
    "src/objects/oddball.h"
  ],
  "classes": [
    {
      "name": "MaterializedObjectStore",
      "properties": [
        "frame_fps_"
      ],
      "methods": [
        {
          "name": "Get",
          "parameters": [
            "Address fp"
          ],
          "return_type": "DirectHandle<FixedArray>",
          "logic": "Retrieves the FixedArray of materialized objects associated with the given frame pointer (fp). It converts the frame pointer to an index, checks if the index is valid, and returns the FixedArray at that index. Returns a null handle if the frame pointer is not found."
        },
        {
          "name": "Set",
          "parameters": [
            "Address fp",
            "DirectHandle<FixedArray> materialized_objects"
          ],
          "return_type": "void",
          "logic": "Sets the FixedArray of materialized objects for the given frame pointer (fp). It converts the frame pointer to an index. If the frame pointer is not already present, a new entry is created.  Then, it ensures there is enough space in the underlying FixedArray and sets the materialized_objects at the corresponding index."
        },
        {
          "name": "Remove",
          "parameters": [
            "Address fp"
          ],
          "return_type": "bool",
          "logic": "Removes the entry associated with the given frame pointer (fp) from the store. It finds the frame pointer in the frame_fps_ vector. If found, it erases the entry from the vector, and then shifts all subsequent entries in the materialized objects array down by one to fill the gap, and sets the last element to undefined. Returns true if the entry was removed, false otherwise."
        },
        {
          "name": "StackIdToIndex",
          "parameters": [
            "Address fp"
          ],
          "return_type": "int",
          "logic": "Converts a frame pointer (fp) to an index within the store. It searches for the frame pointer in the frame_fps_ vector and returns its index. Returns -1 if the frame pointer is not found."
        },
        {
          "name": "GetStackEntries",
          "parameters": [],
          "return_type": "DirectHandle<FixedArray>",
          "logic": "Returns a DirectHandle to the underlying FixedArray that stores the materialized objects for all stack frames. This FixedArray is stored as a root in the isolate's heap."
        },
        {
          "name": "EnsureStackEntries",
          "parameters": [
            "int length"
          ],
          "return_type": "DirectHandle<FixedArray>",
          "logic": "Ensures that the underlying FixedArray (holding stack entries) has at least the specified length. If the current array is shorter, it allocates a new, larger FixedArray, copies the existing elements, and initializes the remaining elements to undefined.  The new array becomes the new root."
        }
      ]
    }
  ],
  "functions": []
}