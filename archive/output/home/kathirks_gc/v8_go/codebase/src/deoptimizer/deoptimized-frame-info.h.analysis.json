{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/deoptimizer/deoptimized-frame-info.h",
  "imports": [
    "<vector>",
    "src/deoptimizer/translated-state.h"
  ],
  "classes": [
    {
      "name": "DeoptimizedFrameInfo",
      "properties": [
        "context_",
        "parameters_",
        "expression_stack_"
      ],
      "methods": [
        {
          "name": "DeoptimizedFrameInfo",
          "parameters": [
            "TranslatedState* state",
            "TranslatedState::iterator frame_it",
            "Isolate* isolate"
          ],
          "return_type": "void",
          "logic": "Constructor for the DeoptimizedFrameInfo class. Initializes the object with data from a TranslatedState, which describes the frame's state at the deoptimization point. Copies relevant frame information for use by the debugger."
        },
        {
          "name": "GetContext",
          "parameters": [],
          "return_type": "Handle<Object>",
          "logic": "Returns the frame context as a Handle<Object>.  The context contains information about the execution environment of the frame."
        },
        {
          "name": "GetParameter",
          "parameters": [
            "int index"
          ],
          "return_type": "Handle<Object>",
          "logic": "Returns an incoming argument at the given index.  Asserts that the index is within the bounds of the available parameters. Returns the argument as a Handle<Object>."
        },
        {
          "name": "GetExpression",
          "parameters": [
            "int index"
          ],
          "return_type": "Handle<Object>",
          "logic": "Returns an expression from the expression stack at the given index. Asserts that the index is within the bounds of the expression stack. Returns the expression as a Handle<Object>."
        },
        {
          "name": "parameters_count",
          "parameters": [],
          "return_type": "int",
          "logic": "Returns the number of incoming arguments stored in the `parameters_` vector."
        },
        {
          "name": "expression_count",
          "parameters": [],
          "return_type": "int",
          "logic": "Returns the number of expressions on the expression stack stored in the `expression_stack_` vector."
        },
        {
          "name": "SetParameter",
          "parameters": [
            "int index",
            "Handle<Object> obj"
          ],
          "return_type": "void",
          "logic": "Sets an incoming argument at the given index with the provided Handle<Object>.  Asserts that the index is within the bounds of the parameters vector."
        },
        {
          "name": "SetExpression",
          "parameters": [
            "int index",
            "Handle<Object> obj"
          ],
          "return_type": "void",
          "logic": "Sets an expression on the expression stack at the given index with the provided Handle<Object>. Asserts that the index is within the bounds of the expression stack vector."
        }
      ]
    }
  ],
  "functions": []
}