{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/deoptimizer/deoptimize-reason.h",
  "imports": [
    "src/common/globals.h"
  ],
  "classes": [],
  "functions": [
    {
      "name": "operator<<",
      "parameters": [
        "std::ostream&",
        "DeoptimizeReason"
      ],
      "return_type": "std::ostream&",
      "logic": "Overloads the << operator to allow printing a DeoptimizeReason to an output stream. The implementation is not in this header file but likely converts the enum value to a human-readable string for printing."
    },
    {
      "name": "hash_value",
      "parameters": [
        "DeoptimizeReason reason"
      ],
      "return_type": "size_t",
      "logic": "Calculates a hash value for a given DeoptimizeReason.  Used for hash table lookups or other hashing-related operations. The implementation is not in this header file."
    },
    {
      "name": "DeoptimizeReasonToString",
      "parameters": [
        "DeoptimizeReason reason"
      ],
      "return_type": "char const*",
      "logic": "Converts a DeoptimizeReason enum value to a human-readable string representation.  This is useful for debugging and logging."
    },
    {
      "name": "DeoptimizeReasonToString",
      "parameters": [
        "LazyDeoptimizeReason reason"
      ],
      "return_type": "char const*",
      "logic": "Converts a LazyDeoptimizeReason enum value to a human-readable string representation.  This is useful for debugging and logging."
    },
    {
      "name": "IsDeoptimizationWithoutCodeInvalidation",
      "parameters": [
        "DeoptimizeReason reason"
      ],
      "return_type": "bool",
      "logic": "Determines whether a given DeoptimizeReason results in code invalidation or not. Specifically checks if the reason is related to on-stack replacement (OSR) which doesn't necessarily require code invalidation. Returns true if the reason is `kPrepareForOnStackReplacement` or `kOSREarlyExit`, false otherwise."
    }
  ]
}