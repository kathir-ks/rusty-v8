{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/deoptimizer/materialized-object-store.h",
  "imports": [
    "<vector>",
    "src/handles/handles.h"
  ],
  "classes": [
    {
      "name": "MaterializedObjectStore",
      "properties": [
        "isolate_"
      ],
      "methods": [
        {
          "name": "MaterializedObjectStore",
          "parameters": [
            "Isolate* isolate"
          ],
          "return_type": "void",
          "logic": "Constructor for the MaterializedObjectStore class. Takes an Isolate pointer as input and initializes the isolate_ member."
        },
        {
          "name": "Get",
          "parameters": [
            "Address fp"
          ],
          "return_type": "DirectHandle<FixedArray>",
          "logic": "Retrieves materialized objects associated with a given frame pointer (fp)."
        },
        {
          "name": "Set",
          "parameters": [
            "Address fp",
            "DirectHandle<FixedArray> materialized_objects"
          ],
          "return_type": "void",
          "logic": "Associates materialized objects with a given frame pointer (fp)."
        },
        {
          "name": "Remove",
          "parameters": [
            "Address fp"
          ],
          "return_type": "bool",
          "logic": "Removes the association between a given frame pointer (fp) and its materialized objects. Returns true if removed successfully, false otherwise."
        },
        {
          "name": "isolate",
          "parameters": [],
          "return_type": "Isolate*",
          "logic": "Getter for the isolate_ member variable. Returns a pointer to the Isolate."
        },
        {
          "name": "GetStackEntries",
          "parameters": [],
          "return_type": "DirectHandle<FixedArray>",
          "logic": "Retrieves stack entries."
        },
        {
          "name": "EnsureStackEntries",
          "parameters": [
            "int size"
          ],
          "return_type": "DirectHandle<FixedArray>",
          "logic": "Ensures that the stack entries FixedArray has at least the specified size. Creates it if it doesn't exist or is smaller than the required size."
        },
        {
          "name": "StackIdToIndex",
          "parameters": [
            "Address fp"
          ],
          "return_type": "int",
          "logic": "Converts a frame pointer (fp) to an index in the stack entries FixedArray."
        }
      ]
    }
  ],
  "functions": []
}