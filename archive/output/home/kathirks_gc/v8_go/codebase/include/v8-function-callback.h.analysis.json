{
  "file_path": "/home/kathirks_gc/v8_go/codebase/include/v8-function-callback.h",
  "imports": [
    "<cstdint>",
    "<limits>",
    "v8-internal.h",
    "v8-local-handle.h",
    "v8-primitive.h",
    "v8config.h"
  ],
  "classes": [
    {
      "name": "ReturnValue",
      "properties": [
        "value_"
      ],
      "methods": [
        {
          "name": "ReturnValue",
          "parameters": [
            "const ReturnValue<S>& that"
          ],
          "return_type": "ReturnValue<T>",
          "logic": "Copy constructor for ReturnValue."
        },
        {
          "name": "Set",
          "parameters": [
            "const Global<S>& handle"
          ],
          "return_type": "void",
          "logic": "Sets the return value to the value of a Global handle, handling empty cases with SetDefaultValue."
        },
        {
          "name": "SetNonEmpty",
          "parameters": [
            "const Global<S>& handle"
          ],
          "return_type": "void",
          "logic": "Sets the return value to the value of a Global handle, assuming it's not empty."
        },
        {
          "name": "Set",
          "parameters": [
            "const BasicTracedReference<S>& handle"
          ],
          "return_type": "void",
          "logic": "Sets the return value to the value of a BasicTracedReference, handling empty cases with SetDefaultValue."
        },
        {
          "name": "SetNonEmpty",
          "parameters": [
            "const BasicTracedReference<S>& handle"
          ],
          "return_type": "void",
          "logic": "Sets the return value to the value of a BasicTracedReference, assuming it's not empty."
        },
        {
          "name": "Set",
          "parameters": [
            "const Local<S> handle"
          ],
          "return_type": "void",
          "logic": "Sets the return value to the value of a Local handle, handling empty cases with SetDefaultValue."
        },
        {
          "name": "SetNonEmpty",
          "parameters": [
            "const Local<S> handle"
          ],
          "return_type": "void",
          "logic": "Sets the return value to the value of a Local handle, assuming it's not empty."
        },
        {
          "name": "Set",
          "parameters": [
            "bool value"
          ],
          "return_type": "void",
          "logic": "Sets the return value to a boolean value."
        },
        {
          "name": "Set",
          "parameters": [
            "double i"
          ],
          "return_type": "void",
          "logic": "Sets the return value to a double value."
        },
        {
          "name": "Set",
          "parameters": [
            "int16_t i"
          ],
          "return_type": "void",
          "logic": "Sets the return value to an int16_t value."
        },
        {
          "name": "Set",
          "parameters": [
            "int32_t i"
          ],
          "return_type": "void",
          "logic": "Sets the return value to an int32_t value."
        },
        {
          "name": "Set",
          "parameters": [
            "int64_t i"
          ],
          "return_type": "void",
          "logic": "Sets the return value to an int64_t value."
        },
        {
          "name": "Set",
          "parameters": [
            "uint16_t i"
          ],
          "return_type": "void",
          "logic": "Sets the return value to a uint16_t value."
        },
        {
          "name": "Set",
          "parameters": [
            "uint32_t i"
          ],
          "return_type": "void",
          "logic": "Sets the return value to a uint32_t value."
        },
        {
          "name": "Set",
          "parameters": [
            "uint64_t i"
          ],
          "return_type": "void",
          "logic": "Sets the return value to a uint64_t value."
        },
        {
          "name": "SetNull",
          "parameters": [],
          "return_type": "void",
          "logic": "Sets the return value to null."
        },
        {
          "name": "SetUndefined",
          "parameters": [],
          "return_type": "void",
          "logic": "Sets the return value to undefined."
        },
        {
          "name": "SetFalse",
          "parameters": [],
          "return_type": "void",
          "logic": "Sets the return value to false."
        },
        {
          "name": "SetEmptyString",
          "parameters": [],
          "return_type": "void",
          "logic": "Sets the return value to an empty string."
        },
        {
          "name": "GetIsolate",
          "parameters": [],
          "return_type": "Isolate*",
          "logic": "Returns the Isolate associated with this ReturnValue."
        },
        {
          "name": "Set",
          "parameters": [
            "S* whatever"
          ],
          "return_type": "void",
          "logic": "Deliberately unusable function to prevent setting arbitrary pointers as return values.  Causes a compile error."
        },
        {
          "name": "Get",
          "parameters": [],
          "return_type": "Local<Value>",
          "logic": "Returns a Local handle to the return value."
        },
        {
          "name": "SetInternal",
          "parameters": [
            "internal::Address value"
          ],
          "return_type": "void",
          "logic": "Internal function to set the raw address value."
        },
        {
          "name": "SetDefaultValue",
          "parameters": [],
          "return_type": "void",
          "logic": "Sets the return value to the default value based on the template type T."
        },
        {
          "name": "ReturnValue",
          "parameters": [
            "internal::Address* slot"
          ],
          "return_type": "ReturnValue",
          "logic": "Constructor for ReturnValue taking a slot."
        }
      ]
    },
    {
      "name": "FunctionCallbackInfo",
      "properties": [
        "implicit_args_",
        "values_",
        "length_"
      ],
      "methods": [
        {
          "name": "Length",
          "parameters": [],
          "return_type": "int",
          "logic": "Returns the number of arguments passed to the function."
        },
        {
          "name": "operator[]",
          "parameters": [
            "int i"
          ],
          "return_type": "Local<Value>",
          "logic": "Accesses the i-th argument passed to the function."
        },
        {
          "name": "This",
          "parameters": [],
          "return_type": "Local<Object>",
          "logic": "Returns the 'this' object for the function call."
        },
        {
          "name": "NewTarget",
          "parameters": [],
          "return_type": "Local<Value>",
          "logic": "Returns the 'new.target' value for constructor calls."
        },
        {
          "name": "IsConstructCall",
          "parameters": [],
          "return_type": "bool",
          "logic": "Indicates whether the function was called as a constructor."
        },
        {
          "name": "Data",
          "parameters": [],
          "return_type": "Local<Value>",
          "logic": "Returns the data argument specified when creating the callback."
        },
        {
          "name": "GetIsolate",
          "parameters": [],
          "return_type": "Isolate*",
          "logic": "Returns the current Isolate."
        },
        {
          "name": "GetReturnValue",
          "parameters": [],
          "return_type": "ReturnValue<T>",
          "logic": "Returns the ReturnValue object for the call."
        },
        {
          "name": "FunctionCallbackInfo",
          "parameters": [
            "internal::Address* implicit_args",
            "internal::Address* values",
            "int length"
          ],
          "return_type": "FunctionCallbackInfo",
          "logic": "Constructor for FunctionCallbackInfo."
        }
      ]
    },
    {
      "name": "PropertyCallbackInfo",
      "properties": [
        "args_"
      ],
      "methods": [
        {
          "name": "GetIsolate",
          "parameters": [],
          "return_type": "Isolate*",
          "logic": "Returns the Isolate of the property access."
        },
        {
          "name": "Data",
          "parameters": [],
          "return_type": "Local<Value>",
          "logic": "Returns the data set in the configuration."
        },
        {
          "name": "This",
          "parameters": [],
          "return_type": "Local<Object>",
          "logic": "Returns the receiver of the property access."
        },
        {
          "name": "Holder",
          "parameters": [],
          "return_type": "Local<Object>",
          "logic": "Returns the object in the prototype chain that has the interceptor (deprecated)."
        },
        {
          "name": "HolderV2",
          "parameters": [],
          "return_type": "Local<Object>",
          "logic": "Returns the object in the prototype chain that has the interceptor. Returns JSGlobalProxy when property is on global object."
        },
        {
          "name": "GetReturnValue",
          "parameters": [],
          "return_type": "ReturnValue<T>",
          "logic": "Returns the ReturnValue object for the callback."
        },
        {
          "name": "ShouldThrowOnError",
          "parameters": [],
          "return_type": "bool",
          "logic": "Returns whether the intercepted function should throw if an error occurs."
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "GetFunctionTemplateData",
      "parameters": [
        "v8::Isolate* isolate",
        "v8::Local<v8::Data> raw_target"
      ],
      "return_type": "v8::Local<v8::Value>",
      "logic": "Retrieves data associated with a function template."
    },
    {
      "name": "ConvertToJSGlobalProxyIfNecessary",
      "parameters": [
        "internal::Address holder"
      ],
      "return_type": "internal::Address",
      "logic": "Returns JSGlobalProxy if holder is JSGlobalObject or unmodified holder otherwise."
    }
  ]
}