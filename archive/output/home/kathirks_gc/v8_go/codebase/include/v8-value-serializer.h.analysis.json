{
  "file_path": "/home/kathirks_gc/v8_go/codebase/include/v8-value-serializer.h",
  "imports": [
    "<stddef.h>",
    "<stdint.h>",
    "<memory>",
    "<utility>",
    "v8-local-handle.h",
    "v8-maybe.h",
    "v8config.h"
  ],
  "classes": [
    {
      "name": "SharedValueConveyor",
      "properties": [
        "private_"
      ],
      "methods": [
        {
          "name": "SharedValueConveyor",
          "parameters": [
            "SharedValueConveyor&&"
          ],
          "return_type": "n/a (constructor)",
          "logic": "Move constructor for SharedValueConveyor."
        },
        {
          "name": "~SharedValueConveyor",
          "parameters": [],
          "return_type": "n/a (destructor)",
          "logic": "Destructor for SharedValueConveyor.  Releases resources."
        },
        {
          "name": "operator=",
          "parameters": [
            "SharedValueConveyor&&"
          ],
          "return_type": "SharedValueConveyor&",
          "logic": "Move assignment operator for SharedValueConveyor."
        },
        {
          "name": "SharedValueConveyor",
          "parameters": [
            "Isolate*"
          ],
          "return_type": "n/a (constructor)",
          "logic": "Private constructor that initializes the SharedValueConveyor with an isolate."
        }
      ]
    },
    {
      "name": "ValueSerializer",
      "properties": [
        "private_"
      ],
      "methods": [
        {
          "name": "ValueSerializer",
          "parameters": [
            "Isolate*"
          ],
          "return_type": "n/a (constructor)",
          "logic": "Constructor for ValueSerializer. Takes an isolate."
        },
        {
          "name": "ValueSerializer",
          "parameters": [
            "Isolate*",
            "Delegate*"
          ],
          "return_type": "n/a (constructor)",
          "logic": "Constructor for ValueSerializer with an isolate and a delegate."
        },
        {
          "name": "~ValueSerializer",
          "parameters": [],
          "return_type": "n/a (destructor)",
          "logic": "Destructor for ValueSerializer. Releases resources."
        },
        {
          "name": "WriteHeader",
          "parameters": [],
          "return_type": "void",
          "logic": "Writes out a header, including the format version."
        },
        {
          "name": "WriteValue",
          "parameters": [
            "Local<Context>",
            "Local<Value>"
          ],
          "return_type": "Maybe<bool>",
          "logic": "Serializes a JavaScript value into the buffer."
        },
        {
          "name": "Release",
          "parameters": [],
          "return_type": "std::pair<uint8_t*, size_t>",
          "logic": "Returns the stored data buffer and its size, transferring ownership to the caller."
        },
        {
          "name": "TransferArrayBuffer",
          "parameters": [
            "uint32_t",
            "Local<ArrayBuffer>"
          ],
          "return_type": "void",
          "logic": "Marks an ArrayBuffer as having its contents transferred out of band."
        },
        {
          "name": "SetTreatArrayBufferViewsAsHostObjects",
          "parameters": [
            "bool"
          ],
          "return_type": "void",
          "logic": "Sets whether to treat ArrayBufferView objects as host objects."
        },
        {
          "name": "WriteUint32",
          "parameters": [
            "uint32_t"
          ],
          "return_type": "void",
          "logic": "Writes a 32-bit unsigned integer to the buffer (varint encoded)."
        },
        {
          "name": "WriteUint64",
          "parameters": [
            "uint64_t"
          ],
          "return_type": "void",
          "logic": "Writes a 64-bit unsigned integer to the buffer (varint encoded)."
        },
        {
          "name": "WriteDouble",
          "parameters": [
            "double"
          ],
          "return_type": "void",
          "logic": "Writes a double to the buffer."
        },
        {
          "name": "WriteRawBytes",
          "parameters": [
            "const void*",
            "size_t"
          ],
          "return_type": "void",
          "logic": "Writes raw bytes to the buffer."
        }
      ]
    },
    {
      "name": "ValueSerializer::Delegate",
      "properties": [],
      "methods": [
        {
          "name": "~Delegate",
          "parameters": [],
          "return_type": "n/a (destructor)",
          "logic": "Virtual destructor for Delegate."
        },
        {
          "name": "ThrowDataCloneError",
          "parameters": [
            "Local<String>"
          ],
          "return_type": "void",
          "logic": "Handles the case where a DataCloneError would be thrown."
        },
        {
          "name": "HasCustomHostObject",
          "parameters": [
            "Isolate*"
          ],
          "return_type": "bool",
          "logic": "The embedder overrides this method to enable custom host object filter with Delegate::IsHostObject."
        },
        {
          "name": "IsHostObject",
          "parameters": [
            "Isolate*",
            "Local<Object>"
          ],
          "return_type": "Maybe<bool>",
          "logic": "The embedder overrides this method to determine if an object is a host object."
        },
        {
          "name": "WriteHostObject",
          "parameters": [
            "Isolate*",
            "Local<Object>"
          ],
          "return_type": "Maybe<bool>",
          "logic": "The embedder overrides this method to write a host object."
        },
        {
          "name": "GetSharedArrayBufferId",
          "parameters": [
            "Isolate*",
            "Local<SharedArrayBuffer>"
          ],
          "return_type": "Maybe<uint32_t>",
          "logic": "Called when the ValueSerializer is going to serialize a SharedArrayBuffer object. The embedder must return an ID for the object."
        },
        {
          "name": "GetWasmModuleTransferId",
          "parameters": [
            "Isolate*",
            "Local<WasmModuleObject>"
          ],
          "return_type": "Maybe<uint32_t>",
          "logic": "Called when the ValueSerializer is going to serialize a WasmModuleObject object. The embedder must return an ID for the object."
        },
        {
          "name": "AdoptSharedValueConveyor",
          "parameters": [
            "Isolate*",
            "SharedValueConveyor&&"
          ],
          "return_type": "bool",
          "logic": "Called when the first shared value is serialized. Allows the delegate to manage shared value lifecycles."
        },
        {
          "name": "ReallocateBufferMemory",
          "parameters": [
            "void*",
            "size_t",
            "size_t*"
          ],
          "return_type": "void*",
          "logic": "Allocates memory for the buffer. The default implementation uses the stdlib's `realloc()` function."
        },
        {
          "name": "FreeBufferMemory",
          "parameters": [
            "void*"
          ],
          "return_type": "void",
          "logic": "Frees a buffer allocated with |ReallocateBufferMemory|. The default implementation uses the stdlib's `free()` function."
        }
      ]
    },
    {
      "name": "ValueDeserializer",
      "properties": [
        "private_"
      ],
      "methods": [
        {
          "name": "ValueDeserializer",
          "parameters": [
            "Isolate*",
            "const uint8_t*",
            "size_t"
          ],
          "return_type": "n/a (constructor)",
          "logic": "Constructor for ValueDeserializer. Takes an isolate, data buffer, and size."
        },
        {
          "name": "ValueDeserializer",
          "parameters": [
            "Isolate*",
            "const uint8_t*",
            "size_t",
            "Delegate*"
          ],
          "return_type": "n/a (constructor)",
          "logic": "Constructor for ValueDeserializer. Takes an isolate, data buffer, size, and a delegate."
        },
        {
          "name": "~ValueDeserializer",
          "parameters": [],
          "return_type": "n/a (destructor)",
          "logic": "Destructor for ValueDeserializer. Releases resources."
        },
        {
          "name": "ReadHeader",
          "parameters": [
            "Local<Context>"
          ],
          "return_type": "Maybe<bool>",
          "logic": "Reads and validates a header."
        },
        {
          "name": "ReadValue",
          "parameters": [
            "Local<Context>"
          ],
          "return_type": "MaybeLocal<Value>",
          "logic": "Deserializes a JavaScript value from the buffer."
        },
        {
          "name": "TransferArrayBuffer",
          "parameters": [
            "uint32_t",
            "Local<ArrayBuffer>"
          ],
          "return_type": "void",
          "logic": "Accepts the array buffer corresponding to the one passed previously to ValueSerializer::TransferArrayBuffer."
        },
        {
          "name": "TransferSharedArrayBuffer",
          "parameters": [
            "uint32_t",
            "Local<SharedArrayBuffer>"
          ],
          "return_type": "void",
          "logic": "Similar to TransferArrayBuffer, but for SharedArrayBuffer."
        },
        {
          "name": "SetSupportsLegacyWireFormat",
          "parameters": [
            "bool"
          ],
          "return_type": "void",
          "logic": "Must be called before ReadHeader to enable support for reading the legacy wire format."
        },
        {
          "name": "GetWireFormatVersion",
          "parameters": [],
          "return_type": "uint32_t",
          "logic": "Reads the underlying wire format version. Must be called after ReadHeader."
        },
        {
          "name": "ReadUint32",
          "parameters": [
            "uint32_t*"
          ],
          "return_type": "bool",
          "logic": "Reads a 32-bit unsigned integer from the buffer (varint encoded)."
        },
        {
          "name": "ReadUint64",
          "parameters": [
            "uint64_t*"
          ],
          "return_type": "bool",
          "logic": "Reads a 64-bit unsigned integer from the buffer (varint encoded)."
        },
        {
          "name": "ReadDouble",
          "parameters": [
            "double*"
          ],
          "return_type": "bool",
          "logic": "Reads a double from the buffer."
        },
        {
          "name": "ReadRawBytes",
          "parameters": [
            "size_t",
            "const void**"
          ],
          "return_type": "bool",
          "logic": "Reads raw bytes from the buffer."
        }
      ]
    },
    {
      "name": "ValueDeserializer::Delegate",
      "properties": [],
      "methods": [
        {
          "name": "~Delegate",
          "parameters": [],
          "return_type": "n/a (destructor)",
          "logic": "Virtual destructor for Delegate."
        },
        {
          "name": "ReadHostObject",
          "parameters": [
            "Isolate*"
          ],
          "return_type": "MaybeLocal<Object>",
          "logic": "The embedder overrides this method to read a host object."
        },
        {
          "name": "GetWasmModuleFromId",
          "parameters": [
            "Isolate*",
            "uint32_t"
          ],
          "return_type": "MaybeLocal<WasmModuleObject>",
          "logic": "Get a WasmModuleObject given a transfer_id"
        },
        {
          "name": "GetSharedArrayBufferFromId",
          "parameters": [
            "Isolate*",
            "uint32_t"
          ],
          "return_type": "MaybeLocal<SharedArrayBuffer>",
          "logic": "Get a SharedArrayBuffer given a clone_id"
        },
        {
          "name": "GetSharedValueConveyor",
          "parameters": [
            "Isolate*"
          ],
          "return_type": "const SharedValueConveyor*",
          "logic": "Get the SharedValueConveyor previously provided by ValueSerializer::Delegate::AdoptSharedValueConveyor."
        }
      ]
    }
  ],
  "functions": []
}