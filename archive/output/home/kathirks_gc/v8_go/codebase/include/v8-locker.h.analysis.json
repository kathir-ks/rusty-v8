{
  "file_path": "/home/kathirks_gc/v8_go/codebase/include/v8-locker.h",
  "imports": [
    "v8config.h"
  ],
  "classes": [
    {
      "name": "Unlocker",
      "properties": [
        "isolate_"
      ],
      "methods": [
        {
          "name": "Unlocker",
          "parameters": [
            "Isolate* isolate"
          ],
          "return_type": "void",
          "logic": "Constructor. Calls Initialize(isolate)."
        },
        {
          "name": "~Unlocker",
          "parameters": [],
          "return_type": "void",
          "logic": "Destructor. Unlocks the isolate and reinstates the correct depth of locking."
        },
        {
          "name": "Initialize",
          "parameters": [
            "Isolate* isolate"
          ],
          "return_type": "void",
          "logic": "Initializes the Unlocker object for a given isolate. Likely involves unlocking the isolate."
        }
      ]
    },
    {
      "name": "Locker",
      "properties": [
        "has_lock_",
        "top_level_",
        "isolate_"
      ],
      "methods": [
        {
          "name": "Locker",
          "parameters": [
            "Isolate* isolate"
          ],
          "return_type": "void",
          "logic": "Constructor. Calls Initialize(isolate)."
        },
        {
          "name": "~Locker",
          "parameters": [],
          "return_type": "void",
          "logic": "Destructor. Unlocks the isolate if it was locked by this locker."
        },
        {
          "name": "IsLocked",
          "parameters": [
            "Isolate* isolate"
          ],
          "return_type": "bool",
          "logic": "Static method to check if the locker for a given isolate is locked by the current thread."
        },
        {
          "name": "Initialize",
          "parameters": [
            "Isolate* isolate"
          ],
          "return_type": "void",
          "logic": "Initializes the Locker object for a given isolate. Likely involves locking the isolate."
        }
      ]
    }
  ],
  "functions": []
}