{
  "file_path": "/home/kathirks_gc/v8_go/codebase/include/cppgc/internal/finalizer-trait.h",
  "imports": [
    "<type_traits>",
    "cppgc/type-traits.h"
  ],
  "classes": [
    {
      "name": "HasFinalizeGarbageCollectedObject",
      "properties": [],
      "methods": []
    },
    {
      "name": "FinalizerTraitImpl",
      "properties": [],
      "methods": [
        {
          "name": "Finalize",
          "parameters": [
            "void* obj"
          ],
          "return_type": "void",
          "logic": "Calls either the custom FinalizeGarbageCollectedObject method or the destructor for the object, depending on whether the type has a custom finalizer. A static assertion ensures that the type is fully defined."
        }
      ]
    },
    {
      "name": "FinalizerTrait",
      "properties": [],
      "methods": [
        {
          "name": "HasFinalizer",
          "parameters": [],
          "return_type": "bool",
          "logic": "Returns true if the type has a non-trivial finalizer (either a custom FinalizeGarbageCollectedObject method or a non-trivial destructor), and false otherwise."
        }
      ]
    }
  ],
  "functions": [],
  "enums": [],
  "type_aliases": [
    {
      "name": "FinalizationCallback",
      "type": "void (*)(void*)"
    }
  ]
}