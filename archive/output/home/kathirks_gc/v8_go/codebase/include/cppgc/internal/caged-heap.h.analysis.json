{
  "file_path": "/home/kathirks_gc/v8_go/codebase/include/cppgc/internal/caged-heap.h",
  "imports": [
    "<climits>",
    "<cstddef>",
    "cppgc/internal/api-constants.h",
    "cppgc/internal/base-page-handle.h",
    "v8config.h"
  ],
  "classes": [
    {
      "name": "CagedHeapBase",
      "properties": [
        "g_heap_base_",
        "g_age_table_size_"
      ],
      "methods": [
        {
          "name": "OffsetFromAddress",
          "parameters": [
            "const void* address"
          ],
          "return_type": "uintptr_t",
          "logic": "Calculates the offset of the given address within the cage. It masks the address to get the offset based on `kCagedHeapReservationAlignment`."
        },
        {
          "name": "IsWithinCage",
          "parameters": [
            "const void* address"
          ],
          "return_type": "bool",
          "logic": "Checks if the given address falls within the caged heap by comparing the base address of the cage with the masked address."
        },
        {
          "name": "AreWithinCage",
          "parameters": [
            "const void* addr1",
            "const void* addr2"
          ],
          "return_type": "bool",
          "logic": "Checks if two given addresses are within the same caged heap. It uses XOR operations and bit shifts to efficiently compare the cage base of both addresses."
        },
        {
          "name": "GetBase",
          "parameters": [],
          "return_type": "uintptr_t",
          "logic": "Returns the base address of the caged heap."
        },
        {
          "name": "GetAgeTableSize",
          "parameters": [],
          "return_type": "size_t",
          "logic": "Returns the size of the age table."
        }
      ]
    }
  ],
  "functions": []
}