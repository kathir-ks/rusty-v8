{
  "file_path": "/home/kathirks_gc/v8_go/codebase/include/v8-debug.h",
  "imports": [
    "<stdint.h>",
    "v8-script.h",
    "v8config.h"
  ],
  "classes": [
    {
      "name": "StackFrame",
      "properties": [],
      "methods": [
        {
          "name": "GetLocation",
          "parameters": [],
          "return_type": "Location",
          "logic": "Returns the source location (0-based) for the associated function call."
        },
        {
          "name": "GetLineNumber",
          "parameters": [],
          "return_type": "int",
          "logic": "Returns the 1-based line number for the associated function call."
        },
        {
          "name": "GetColumn",
          "parameters": [],
          "return_type": "int",
          "logic": "Returns the 1-based column offset on the line for the associated function call."
        },
        {
          "name": "GetSourcePosition",
          "parameters": [],
          "return_type": "int",
          "logic": "Returns the zero-based source position (character offset) for the associated function."
        },
        {
          "name": "GetScriptId",
          "parameters": [],
          "return_type": "int",
          "logic": "Returns the ID of the script for the function."
        },
        {
          "name": "GetScriptName",
          "parameters": [],
          "return_type": "Local<String>",
          "logic": "Returns the name of the resource containing the script."
        },
        {
          "name": "GetScriptNameOrSourceURL",
          "parameters": [],
          "return_type": "Local<String>",
          "logic": "Returns the script name or sourceURL if the script name is undefined and its source ends with //# sourceURL=... or //@ sourceURL=..."
        },
        {
          "name": "GetScriptSource",
          "parameters": [],
          "return_type": "Local<String>",
          "logic": "Returns the source code of the script."
        },
        {
          "name": "GetScriptSourceMappingURL",
          "parameters": [],
          "return_type": "Local<String>",
          "logic": "Returns the source mapping URL of the script, if present."
        },
        {
          "name": "GetFunctionName",
          "parameters": [],
          "return_type": "Local<String>",
          "logic": "Returns the name of the function associated with the stack frame."
        },
        {
          "name": "IsEval",
          "parameters": [],
          "return_type": "bool",
          "logic": "Returns whether the function was compiled via eval()."
        },
        {
          "name": "IsConstructor",
          "parameters": [],
          "return_type": "bool",
          "logic": "Returns whether the function was called as a constructor via 'new'."
        },
        {
          "name": "IsWasm",
          "parameters": [],
          "return_type": "bool",
          "logic": "Returns whether the function is defined in wasm."
        },
        {
          "name": "IsUserJavaScript",
          "parameters": [],
          "return_type": "bool",
          "logic": "Returns whether the function is defined by the user."
        }
      ]
    },
    {
      "name": "StackTrace",
      "properties": [],
      "methods": [
        {
          "name": "GetID",
          "parameters": [],
          "return_type": "int",
          "logic": "Returns the unique ID of this stack trace."
        },
        {
          "name": "GetFrame",
          "parameters": [
            "Isolate* isolate",
            "uint32_t index"
          ],
          "return_type": "Local<StackFrame>",
          "logic": "Returns a StackFrame at the specified index."
        },
        {
          "name": "GetFrameCount",
          "parameters": [],
          "return_type": "int",
          "logic": "Returns the number of StackFrames in the trace."
        },
        {
          "name": "CurrentStackTrace",
          "parameters": [
            "Isolate* isolate",
            "int frame_limit",
            "StackTraceOptions options"
          ],
          "return_type": "Local<StackTrace>",
          "logic": "Grabs a snapshot of the current JavaScript execution stack."
        },
        {
          "name": "CurrentScriptNameOrSourceURL",
          "parameters": [
            "Isolate* isolate"
          ],
          "return_type": "Local<String>",
          "logic": "Returns the first valid script name or source URL starting at the top of the JS stack."
        }
      ]
    }
  ],
  "functions": []
}