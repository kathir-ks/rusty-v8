{
  "metadata": {
    "path": "/home/kathirks_gc/v8_go/archive/codebase/src/compiler/turboshaft/int64-lowering-phase.cc",
    "file_name": "int64-lowering-phase.cc",
    "language": "cpp",
    "purpose": "Implements the Int64LoweringPhase for Turboshaft, which lowers 64-bit integer operations on 32-bit architectures."
  },
  "imports": {
    "metadata": {
      "language": "cpp",
      "purpose": "Includes necessary headers for the Int64LoweringPhase implementation."
    },
    "code": "#include \"src/compiler/turboshaft/int64-lowering-phase.h\"\n\n#if V8_TARGET_ARCH_32_BIT\n#include \"src/compiler/turboshaft/copying-phase.h\"\n#include \"src/compiler/turboshaft/int64-lowering-reducer.h\"\n#include \"src/compiler/turboshaft/variable-reducer.h\"\n#endif"
  },
  "classes": [
    {
      "metadata": {
        "language": "cpp",
        "type": "class",
        "name": "Int64LoweringPhase",
        "about": "This class encapsulates the int64 lowering phase, responsible for transforming 64-bit integer operations into sequences of 32-bit operations on 32-bit architectures.",
        "attributes": [],
        "dependencies": [
          "PipelineData",
          "Zone",
          "CopyingPhase",
          "Int64LoweringReducer"
        ]
      },
      "code": "namespace v8::internal::compiler::turboshaft {\n\nvoid Int64LoweringPhase::Run(PipelineData* data, Zone* temp_zone) {\n#if V8_TARGET_ARCH_32_BIT\n  turboshaft::CopyingPhase<turboshaft::Int64LoweringReducer>::Run(data,\n                                                                  temp_zone);\n#else\n  UNREACHABLE();\n#endif\n}\n\n}  // namespace v8::internal::compiler::turboshaft"
    }
  ],
  "functions": [
    {
      "metadata": {
        "language": "cpp",
        "type": "method",
        "name": "Run",
        "parent": "Int64LoweringPhase",
        "about": "Runs the int64 lowering phase.  On 32-bit architectures, it uses the CopyingPhase with the Int64LoweringReducer to transform the graph. On other architectures, it marks the code as unreachable.",
        "logic": "Conditionally executes the CopyingPhase with Int64LoweringReducer based on the target architecture (V8_TARGET_ARCH_32_BIT). If the target architecture is 32-bit, it instantiates and runs the CopyingPhase with the Int64LoweringReducer. Otherwise, it calls UNREACHABLE(), indicating that the phase should not be executed on non-32-bit architectures.",
        "parameters": [
          {
            "name": "data",
            "type": "PipelineData*",
            "purpose": "Pointer to the pipeline data, providing access to the graph and other compilation information."
          },
          {
            "name": "temp_zone",
            "type": "Zone*",
            "purpose": "Pointer to a temporary zone for allocating memory during the phase."
          }
        ],
        "return": {
          "type": "void",
          "description": "No return value."
        },
        "dependencies": [
          "PipelineData",
          "Zone",
          "CopyingPhase",
          "Int64LoweringReducer",
          "UNREACHABLE"
        ]
      },
      "code": "void Int64LoweringPhase::Run(PipelineData* data, Zone* temp_zone) {\n#if V8_TARGET_ARCH_32_BIT\n  turboshaft::CopyingPhase<turboshaft::Int64LoweringReducer>::Run(data,\n                                                                  temp_zone);\n#else\n  UNREACHABLE();\n#endif\n}"
    }
  ],
  "dependencies": [
    {
      "metadata": {
        "language": "cpp",
        "type": "class",
        "name": "PipelineData",
        "about": "Provides access to compilation pipeline state."
      },
      "code": "class PipelineData {};",
      "type": "class"
    },
    {
      "metadata": {
        "language": "cpp",
        "type": "class",
        "name": "Zone",
        "about": "Memory allocation zone."
      },
      "code": "class Zone {};",
      "type": "class"
    },
    {
      "metadata": {
        "language": "cpp",
        "type": "class",
        "name": "CopyingPhase",
        "about": "Generic copying phase in the Turboshaft pipeline."
      },
      "code": "template <typename Reducer>\n                class CopyingPhase {\n                 public:\n                  static void Run(PipelineData* data, Zone* temp_zone);\n                };",
      "type": "class"
    },
    {
      "metadata": {
        "language": "cpp",
        "type": "class",
        "name": "Int64LoweringReducer",
        "about": "Reducer for lowering 64-bit integer operations."
      },
      "code": "class Int64LoweringReducer {};",
      "type": "class"
    },
    {
      "metadata": {
        "language": "cpp",
        "type": "function",
        "name": "UNREACHABLE",
        "about": "Indicates that the code path should not be executed.",
        "return": {
          "type": "void",
          "description": "Does not return."
        }
      },
      "code": "void UNREACHABLE();",
      "type": "func"
    }
  ],
  "file_path": "/home/kathirks_gc/v8_go/archive/codebase/src/compiler/turboshaft/int64-lowering-phase.cc"
}