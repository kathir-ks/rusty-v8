{
  "metadata": {
    "path": "/home/kathirks_gc/v8_go/archive/codebase/include/v8-microtask.h",
    "file_name": "v8-microtask.h",
    "language": "cpp",
    "purpose": "Defines interfaces and enums for managing microtasks in V8."
  },
  "imports": {
    "metadata": {
      "language": "cpp",
      "purpose": "Standard C++ preprocessor directives to prevent multiple inclusions."
    },
    "code": "#endif  // INCLUDE_V8_MICROTASK_H_"
  },
  "classes": [
    {
      "metadata": {
        "language": "cpp",
        "type": "class",
        "name": "Isolate",
        "about": "Represents an isolated instance of the V8 JavaScript engine.",
        "dependencies": []
      },
      "code": "class Isolate;"
    }
  ],
  "functions": [
    {
      "metadata": {
        "language": "cpp",
        "type": "function",
        "name": "MicrotasksCompletedCallbackWithData",
        "about": "Defines a callback function type for when microtasks are completed.",
        "logic": "This callback is invoked with an Isolate pointer and a user-provided data pointer.",
        "parameters": [
          {
            "name": "Isolate*",
            "type": "Isolate*",
            "purpose": "The isolate in which the microtasks were completed."
          },
          {
            "name": "void*",
            "type": "void*",
            "purpose": "User-provided data."
          }
        ],
        "return": {
          "type": "void",
          "description": "No return value"
        },
        "dependencies": [
          "Isolate"
        ]
      },
      "code": "using MicrotasksCompletedCallbackWithData = void (*)(Isolate*, void*);"
    },
    {
      "metadata": {
        "language": "cpp",
        "type": "function",
        "name": "MicrotaskCallback",
        "about": "Defines a callback function type for a microtask.",
        "logic": "This callback is invoked with a user-provided data pointer.",
        "parameters": [
          {
            "name": "void*",
            "type": "void*",
            "purpose": "User-provided data for the microtask."
          }
        ],
        "return": {
          "type": "void",
          "description": "No return value"
        },
        "dependencies": []
      },
      "code": "using MicrotaskCallback = void (*)(void* data);"
    }
  ],
  "interfaces": [
    {
      "metadata": {
        "language": "cpp",
        "type": "enum class",
        "name": "MicrotasksPolicy",
        "about": "Defines the policy for running microtasks.",
        "methods": [],
        "dependencies": []
      },
      "code": "enum class MicrotasksPolicy { kExplicit, kScoped, kAuto };"
    }
  ],
  "file_path": "/home/kathirks_gc/v8_go/archive/codebase/include/v8-microtask.h"
}