{
  "metadata": {
    "path": "/home/kathirks_gc/v8_go/archive/codebase/src/execution/riscv/frame-constants-riscv.cc",
    "file_name": "frame-constants-riscv.cc",
    "language": "cpp",
    "purpose": "Defines frame constants specific to the RISC-V architecture for the V8 JavaScript engine."
  },
  "imports": {
    "metadata": {
      "language": "cpp",
      "purpose": "Includes necessary header files for frame constants definition."
    },
    "code": "#include \"src/execution/riscv/frame-constants-riscv.h\"\n\n#include \"src/execution/frame-constants.h\"\n#include \"src/execution/frames.h\""
  },
  "functions": [
    {
      "metadata": {
        "language": "cpp",
        "type": "method",
        "name": "fp_register",
        "parent": "JavaScriptFrame",
        "about": "Returns the frame pointer register for JavaScript frames on RISC-V.",
        "logic": "Returns the 'fp' register.",
        "parameters": [],
        "return": {
          "type": "Register",
          "description": "The frame pointer register."
        },
        "dependencies": []
      },
      "code": "Register JavaScriptFrame::fp_register() { return v8::internal::fp; }"
    },
    {
      "metadata": {
        "language": "cpp",
        "type": "method",
        "name": "context_register",
        "parent": "JavaScriptFrame",
        "about": "Returns the context register for JavaScript frames on RISC-V.",
        "logic": "Returns the 'cp' register.",
        "parameters": [],
        "return": {
          "type": "Register",
          "description": "The context register."
        },
        "dependencies": []
      },
      "code": "Register JavaScriptFrame::context_register() { return cp; }"
    },
    {
      "metadata": {
        "language": "cpp",
        "type": "method",
        "name": "constant_pool_pointer_register",
        "parent": "JavaScriptFrame",
        "about": "Returns the constant pool pointer register (not used on RISC-V).",
        "logic": "This function is not implemented on RISC-V and will cause the program to crash if called.",
        "parameters": [],
        "return": {
          "type": "Register",
          "description": "This function does not actually return."
        },
        "dependencies": []
      },
      "code": "Register JavaScriptFrame::constant_pool_pointer_register() { UNREACHABLE(); }"
    },
    {
      "metadata": {
        "language": "cpp",
        "type": "function",
        "name": "RegisterStackSlotCount",
        "parent": "UnoptimizedFrameConstants",
        "about": "Calculates the number of stack slots required for registers in unoptimized frames.",
        "logic": "Returns the register count directly.",
        "parameters": [
          {
            "name": "register_count",
            "type": "int",
            "purpose": "The number of registers."
          }
        ],
        "return": {
          "type": "int",
          "description": "The number of stack slots required."
        },
        "dependencies": []
      },
      "code": "int UnoptimizedFrameConstants::RegisterStackSlotCount(int register_count) {\n  return register_count;\n}"
    },
    {
      "metadata": {
        "language": "cpp",
        "type": "function",
        "name": "PaddingSlotCount",
        "parent": "BuiltinContinuationFrameConstants",
        "about": "Calculates the number of padding slots required in builtin continuation frames.",
        "logic": "Always returns 0, indicating no padding is required.",
        "parameters": [
          {
            "name": "register_count",
            "type": "int",
            "purpose": "The number of registers (unused)."
          }
        ],
        "return": {
          "type": "int",
          "description": "The number of padding slots (always 0)."
        },
        "dependencies": []
      },
      "code": "int BuiltinContinuationFrameConstants::PaddingSlotCount(int register_count) {\n  USE(register_count);\n  return 0;\n}"
    },
    {
      "metadata": {
        "language": "cpp",
        "type": "function",
        "name": "StackGuardFrameSize",
        "parent": "MaglevFrame",
        "about": "Returns the size of the stack guard frame (not implemented for MaglevFrame on RISC-V).",
        "logic": "This function is not implemented for MaglevFrame on RISC-V and will cause the program to crash if called.",
        "parameters": [
          {
            "name": "register_input_count",
            "type": "int",
            "purpose": "The number of register inputs (unused)."
          }
        ],
        "return": {
          "type": "intptr_t",
          "description": "This function does not actually return."
        },
        "dependencies": []
      },
      "code": "// static\nintptr_t MaglevFrame::StackGuardFrameSize(int register_input_count) {\n  USE(register_input_count);\n  UNREACHABLE();\n}"
    }
  ],
  "file_path": "/home/kathirks_gc/v8_go/archive/codebase/src/execution/riscv/frame-constants-riscv.cc"
}