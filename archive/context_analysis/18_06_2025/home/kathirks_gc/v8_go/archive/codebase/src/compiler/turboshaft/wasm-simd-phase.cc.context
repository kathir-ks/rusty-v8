{
  "metadata": {
    "path": "/home/kathirks_gc/v8_go/archive/codebase/src/compiler/turboshaft/wasm-simd-phase.cc",
    "file_name": "wasm-simd-phase.cc",
    "language": "cpp",
    "purpose": "Implements the Wasm SIMD optimization phase for the Turboshaft compiler."
  },
  "imports": {
    "metadata": {
      "language": "cpp",
      "purpose": "Includes necessary headers for the Wasm SIMD phase, copying phase, and shuffle reducer."
    },
    "code": "#include \"src/compiler/turboshaft/wasm-simd-phase.h\"\n\n#include \"src/compiler/turboshaft/copying-phase.h\"\n#include \"src/compiler/turboshaft/wasm-shuffle-reducer.h\""
  },
  "classes": [
    {
      "metadata": {
        "language": "cpp",
        "type": "class",
        "name": "WasmSimdPhase",
        "about": "Represents the Wasm SIMD optimization phase in the Turboshaft compiler.",
        "attributes": [],
        "dependencies": [
          "PipelineData",
          "Zone",
          "WasmShuffleAnalyzer",
          "CopyingPhase",
          "WasmShuffleReducer"
        ]
      },
      "code": "namespace v8::internal::compiler::turboshaft {\n\nvoid WasmSimdPhase::Run(PipelineData* data, Zone* temp_zone) {\n  WasmShuffleAnalyzer analyzer(temp_zone, data->graph());\n\n  if (analyzer.ShouldReduce()) {\n    data->set_wasm_shuffle_analyzer(&analyzer);\n    CopyingPhase<WasmShuffleReducer>::Run(data, temp_zone);\n    data->clear_wasm_shuffle_analyzer();\n  }\n}\n\n}  // namespace v8::internal::compiler::turboshaft"
    }
  ],
  "functions": [
    {
      "metadata": {
        "language": "cpp",
        "type": "method",
        "name": "Run",
        "parent": "WasmSimdPhase",
        "about": "Executes the Wasm SIMD optimization phase.",
        "logic": "Analyzes the graph for shuffle patterns. If shuffles should be reduced, it runs the CopyingPhase with the WasmShuffleReducer.",
        "parameters": [
          {
            "name": "data",
            "type": "PipelineData*",
            "purpose": "Pipeline data for the Turboshaft compiler."
          },
          {
            "name": "temp_zone",
            "type": "Zone*",
            "purpose": "Temporary zone for allocations during the phase."
          }
        ],
        "return": {
          "type": "void",
          "description": "No return value."
        },
        "dependencies": [
          "WasmShuffleAnalyzer",
          "CopyingPhase",
          "WasmShuffleReducer",
          "PipelineData",
          "Zone"
        ]
      },
      "code": "void WasmSimdPhase::Run(PipelineData* data, Zone* temp_zone) {\n  WasmShuffleAnalyzer analyzer(temp_zone, data->graph());\n\n  if (analyzer.ShouldReduce()) {\n    data->set_wasm_shuffle_analyzer(&analyzer);\n    CopyingPhase<WasmShuffleReducer>::Run(data, temp_zone);\n    data->clear_wasm_shuffle_analyzer();\n  }\n}"
    }
  ],
  "dependencies": [
    {
      "metadata": {
        "language": "cpp",
        "type": "class",
        "name": "PipelineData",
        "about": "Carries data through the Turboshaft pipeline."
      },
      "code": "class PipelineData {\n                public:\n                    Graph* graph() const;\n                    void set_wasm_shuffle_analyzer(WasmShuffleAnalyzer* analyzer);\n                    void clear_wasm_shuffle_analyzer();\n                };",
      "type": "class"
    },
    {
      "metadata": {
        "language": "cpp",
        "type": "class",
        "name": "Zone",
        "about": "Memory allocation zone."
      },
      "code": "class Zone {};",
      "type": "class"
    },
    {
      "metadata": {
        "language": "cpp",
        "type": "class",
        "name": "WasmShuffleAnalyzer",
        "about": "Analyzes Wasm shuffle patterns."
      },
      "code": "class WasmShuffleAnalyzer {\n                public:\n                    WasmShuffleAnalyzer(Zone* zone, Graph* graph);\n                    bool ShouldReduce();\n                };",
      "type": "class"
    },
    {
      "metadata": {
        "language": "cpp",
        "type": "class",
        "name": "CopyingPhase",
        "about": "Generic phase for copying and reducing a graph."
      },
      "code": "template <typename Reducer>\n                class CopyingPhase {\n                public:\n                    static void Run(PipelineData* data, Zone* temp_zone);\n                };",
      "type": "class"
    },
    {
      "metadata": {
        "language": "cpp",
        "type": "class",
        "name": "WasmShuffleReducer",
        "about": "Reduces Wasm shuffle operations."
      },
      "code": "class WasmShuffleReducer {};",
      "type": "class"
    },
    {
      "metadata": {
        "language": "cpp",
        "type": "class",
        "name": "Graph",
        "about": "Represents the compiler's graph."
      },
      "code": "class Graph {};",
      "type": "class"
    }
  ],
  "file_path": "/home/kathirks_gc/v8_go/archive/codebase/src/compiler/turboshaft/wasm-simd-phase.cc"
}