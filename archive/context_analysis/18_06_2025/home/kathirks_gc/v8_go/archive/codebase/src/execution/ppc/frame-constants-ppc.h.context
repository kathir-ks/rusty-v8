{
  "metadata": {
    "path": "/home/kathirks_gc/v8_go/archive/codebase/src/execution/ppc/frame-constants-ppc.h",
    "file_name": "frame-constants-ppc.h",
    "language": "cpp",
    "purpose": "Defines constants related to stack frame layout on the PPC architecture for the V8 JavaScript engine."
  },
  "imports": {
    "metadata": {
      "language": "cpp",
      "purpose": "Includes necessary headers for bit manipulation, macros, register definitions, and generic frame constants."
    },
    "code": "#include \"src/base/bits.h\"\n#include \"src/base/macros.h\"\n#include \"src/codegen/register.h\"\n#include \"src/execution/frame-constants.h\""
  },
  "classes": [
    {
      "metadata": {
        "language": "cpp",
        "type": "class",
        "name": "EntryFrameConstants",
        "extends": "AllStatic",
        "about": "Defines constants related to the entry frame, which is the frame used when entering V8 from external code.",
        "attributes": [],
        "dependencies": [
          "AllStatic",
          "V8_EMBEDDED_CONSTANT_POOL_BOOL",
          "kSystemPointerSize"
        ]
      },
      "code": "class EntryFrameConstants : public AllStatic {\n public:\n  // Need to take constant pool into account.\n  static constexpr int kNextExitFrameFPOffset = V8_EMBEDDED_CONSTANT_POOL_BOOL\n                                                    ? -4 * kSystemPointerSize\n                                                    : -3 * kSystemPointerSize;\n\n  static constexpr int kNextFastCallFrameFPOffset =\n      kNextExitFrameFPOffset - kSystemPointerSize;\n  static constexpr int kNextFastCallFramePCOffset =\n      kNextFastCallFrameFPOffset - kSystemPointerSize;\n};"
    },
    {
      "metadata": {
        "language": "cpp",
        "type": "class",
        "name": "WasmLiftoffSetupFrameConstants",
        "extends": "TypedFrameConstants",
        "about": "Defines constants related to the Liftoff setup frame for WebAssembly, used for setting up the initial execution environment.",
        "attributes": [],
        "dependencies": [
          "TypedFrameConstants",
          "TYPED_FRAME_PUSHED_VALUE_OFFSET",
          "kSystemPointerSize"
        ]
      },
      "code": "class WasmLiftoffSetupFrameConstants : public TypedFrameConstants {\n public:\n  // Number of gp parameters, without the instance.\n  static constexpr int kNumberOfSavedGpParamRegs = 6;\n  static constexpr int kNumberOfSavedFpParamRegs = 8;\n\n  // There's one spilled value (which doesn't need visiting) below the instance.\n  static constexpr int kInstanceSpillOffset =\n      TYPED_FRAME_PUSHED_VALUE_OFFSET(1);\n\n  // Spilled registers are implicitly sorted backwards by number.\n  static constexpr int kParameterSpillsOffset[] = {\n      TYPED_FRAME_PUSHED_VALUE_OFFSET(7), TYPED_FRAME_PUSHED_VALUE_OFFSET(6),\n      TYPED_FRAME_PUSHED_VALUE_OFFSET(5), TYPED_FRAME_PUSHED_VALUE_OFFSET(4),\n      TYPED_FRAME_PUSHED_VALUE_OFFSET(3), TYPED_FRAME_PUSHED_VALUE_OFFSET(2)};\n\n  // SP-relative.\n  static constexpr int kWasmInstanceDataOffset = 2 * kSystemPointerSize;\n  static constexpr int kDeclaredFunctionIndexOffset = 1 * kSystemPointerSize;\n  static constexpr int kNativeModuleOffset = 0;\n};"
    },
    {
      "metadata": {
        "language": "cpp",
        "type": "class",
        "name": "WasmLiftoffFrameConstants",
        "extends": "TypedFrameConstants",
        "about": "Defines constants related to the Liftoff frame for WebAssembly, used during the execution of WebAssembly code.",
        "attributes": [],
        "dependencies": [
          "TypedFrameConstants",
          "V8_EMBEDDED_CONSTANT_POOL_BOOL",
          "kSystemPointerSize"
        ]
      },
      "code": "class WasmLiftoffFrameConstants : public TypedFrameConstants {\n public:\n  static constexpr int kFeedbackVectorOffset =\n      (V8_EMBEDDED_CONSTANT_POOL_BOOL ? 4 : 3) * kSystemPointerSize;\n  static constexpr int32_t kInstanceDataOffset =\n      (V8_EMBEDDED_CONSTANT_POOL_BOOL ? 3 : 2) * kSystemPointerSize;\n};"
    },
    {
      "metadata": {
        "language": "cpp",
        "type": "class",
        "name": "WasmDebugBreakFrameConstants",
        "extends": "TypedFrameConstants",
        "about": "Defines constants related to the WebAssembly debug break frame, used when a breakpoint is hit during WebAssembly execution.",
        "attributes": [],
        "dependencies": [
          "TypedFrameConstants",
          "RegList",
          "DoubleRegList",
          "Simd128RegList",
          "r3",
          "r4",
          "r5",
          "r6",
          "r7",
          "r8",
          "r9",
          "r10",
          "r11",
          "r15",
          "cp",
          "d0",
          "d1",
          "d2",
          "d3",
          "d4",
          "d5",
          "d6",
          "d7",
          "d8",
          "d9",
          "d10",
          "d11",
          "d12",
          "v0",
          "v1",
          "v2",
          "v3",
          "v4",
          "v5",
          "v6",
          "v7",
          "v8",
          "v9",
          "v10",
          "v11",
          "v12",
          "kSystemPointerSize",
          "kDoubleSize",
          "kSimd128Size",
          "base::bits"
        ]
      },
      "code": "class WasmDebugBreakFrameConstants : public TypedFrameConstants {\n public:\n  static constexpr RegList kPushedGpRegs = {r3, r4,  r5,  r6,  r7, r8,\n                                            r9, r10, r11, r15, cp};\n\n  static constexpr DoubleRegList kPushedFpRegs = {d0, d1, d2, d3,  d4,  d5, d6,\n                                                  d7, d8, d9, d10, d11, d12};\n\n  static constexpr Simd128RegList kPushedSimd128Regs = {\n      v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12};\n\n  static constexpr int kNumPushedGpRegisters = kPushedGpRegs.Count();\n  static constexpr int kNumPushedFpRegisters = kPushedFpRegs.Count();\n\n  static constexpr int kLastPushedGpRegisterOffset =\n      -TypedFrameConstants::kFixedFrameSizeFromFp -\n      kSystemPointerSize * kNumPushedGpRegisters;\n  static constexpr int kLastPushedFpRegisterOffset =\n      kLastPushedGpRegisterOffset - kDoubleSize * kNumPushedFpRegisters;\n\n  // Offsets are fp-relative.\n  static int GetPushedGpRegisterOffset(int reg_code) {\n    DCHECK_NE(0, kPushedGpRegs.bits() & (1 << reg_code));\n    uint32_t lower_regs =\n        kPushedGpRegs.bits() & ((uint32_t{1} << reg_code) - 1);\n    return kLastPushedGpRegisterOffset +\n           base::bits::CountPopulation(lower_regs) * kSystemPointerSize;\n  }\n\n  static int GetPushedFpRegisterOffset(int reg_code) {\n    DCHECK_NE(0, kPushedFpRegs.bits() & (1 << reg_code));\n    uint32_t lower_regs =\n        kPushedFpRegs.bits() & ((uint32_t{1} << reg_code) - 1);\n    return kLastPushedFpRegisterOffset +\n           base::bits::CountPopulation(lower_regs) * kSimd128Size;\n  }\n};"
    }
  ],
  "dependencies": [
    {
      "metadata": {
        "language": "cpp",
        "type": "class",
        "name": "AllStatic",
        "about": "Base class that prevents object instantiation."
      },
      "code": "class AllStatic {};",
      "type": "class"
    },
    {
      "metadata": {
        "language": "cpp",
        "type": "class",
        "name": "TypedFrameConstants",
        "about": "Base class for frame constants related to typed frames."
      },
      "code": "class TypedFrameConstants {};",
      "type": "class"
    },
    {
      "metadata": {
        "language": "cpp",
        "type": "function",
        "name": "DCHECK_NE",
        "about": "A debug check macro that asserts the inequality of two values.",
        "parameters": [],
        "return": {
          "type": "void",
          "description": "No return value"
        }
      },
      "code": "void DCHECK_NE(int a, int b);",
      "type": "func"
    }
  ],
  "file_path": "/home/kathirks_gc/v8_go/archive/codebase/src/execution/ppc/frame-constants-ppc.h"
}