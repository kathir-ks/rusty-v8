{
  "file_path": "/home/kathirks_gc/v8_go/archive/codebase/src/snapshot/object-deserializer.h",
  "error": "JSON and XML parsing failed",
  "json_error_if_any": "Skipped JSON parsing for whole response due to presence of XML tags; XML is primary.",
  "xml_error": "mismatched tag: line 39, column 10",
  "raw_response": "```xml\n<file>\n    <metadata>\n        {\n            \"path\": \"/home/kathirks_gc/v8_go/archive/codebase/src/snapshot/object-deserializer.h\",\n            \"file_name\": \"object-deserializer.h\",\n            \"language\": \"cpp\",\n            \"purpose\": \"Declares classes for deserializing object graphs from snapshots in V8.\"\n        }\n    </metadata>\n    <imports>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"purpose\": \"Includes the base deserializer class definition.\"\n            }\n        </metadata>\n        <code><![CDATA[\n            #include \"src/snapshot/deserializer.h\"\n        ]]></code>\n    </imports>\n    <class>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"class\",\n                \"name\": \"ObjectDeserializer\",\n                \"extends\": \"Deserializer<Isolate>\",\n                \"about\": \"Deserializes the object graph rooted at a given object for the main isolate.\",\n                \"attributes\": [],\n                \"dependencies\": [\n                    \"Isolate\",\n                    \"SerializedCodeData\",\n                    \"SharedFunctionInfo\",\n                    \"String\",\n                    \"HeapObject\",\n                    \"Deserializer\"\n                ]\n            }\n        </metadata>\n        <code><![CDATA[\n            class ObjectDeserializer final : public Deserializer<Isolate> {\n            public:\n              static MaybeDirectHandle<SharedFunctionInfo> DeserializeSharedFunctionInfo(\n                  Isolate* isolate, const SerializedCodeData* data,\n                  DirectHandle<String> source);\n\n             private:\n              explicit ObjectDeserializer(Isolate* isolate, const SerializedCodeData* data);\n\n              // Deserialize an object graph. Fail gracefully.\n              MaybeDirectHandle<HeapObject> Deserialize();\n\n              void LinkAllocationSites();\n              void CommitPostProcessedObjects();\n            };\n        ]]></code>\n    </class>\n    <class>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"class\",\n                \"name\": \"OffThreadObjectDeserializer\",\n                \"extends\": \"Deserializer<LocalIsolate>\",\n                \"about\": \"Deserializes the object graph rooted at a given object for off-thread isolates.\",\n                \"attributes\": [],\n                \"dependencies\": [\n                    \"LocalIsolate\",\n                    \"SerializedCodeData\",\n                    \"SharedFunctionInfo\",\n                    \"Script\",\n                    \"HeapObject\",\n                    \"Deserializer\"\n                ]\n            }\n        </metadata>\n        <code><![CDATA[\n            class OffThreadObjectDeserializer final : public Deserializer<LocalIsolate> {\n            public:\n              static MaybeDirectHandle<SharedFunctionInfo> DeserializeSharedFunctionInfo(\n                  LocalIsolate* isolate, const SerializedCodeData* data,\n                  std::vector<IndirectHandle<Script>>* deserialized_scripts);\n\n             private:\n              explicit OffThreadObjectDeserializer(LocalIsolate* isolate,\n                                                   const SerializedCodeData* data);\n\n              // Deserialize an object graph. Fail gracefully.\n              MaybeDirectHandle<HeapObject> Deserialize(\n                  std::vector<IndirectHandle<Script>>* deserialized_scripts);\n            };\n        ]]></code>\n    </class>\n    <dependencies>\n        <class>\n            <metadata>\n                {\n                    \"language\": \"cpp\",\n                    \"type\": \"class\",\n                    \"name\": \"SerializedCodeData\",\n                    \"about\": \"Represents serialized code data\"\n                }\n            </metadata>\n            <code><![CDATA[\n                class SerializedCodeData;\n            ]]></code>\n        </class>\n        <class>\n            <metadata>\n                {\n                    \"language\": \"cpp\",\n                    \"type\": \"class\",\n                    \"name\": \"SharedFunctionInfo\",\n                    \"about\": \"Represents shared function information\"\n                }\n            </metadata>\n            <code><![CDATA[\n                class SharedFunctionInfo;\n            ]]></code>\n        </class>\n        <class>\n            <metadata>\n                {\n                    \"language\": \"cpp\",\n                    \"type\": \"class\",\n                    \"name\": \"Isolate\",\n                    \"about\": \"Represents an isolated instance of the V8 engine\"\n                }\n            </metadata>\n            <code><![CDATA[\n                class Isolate;\n            ]]></code>\n        </class>\n        <class>\n            <metadata>\n                {\n                    \"language\": \"cpp\",\n                    \"type\": \"class\",\n                    \"name\": \"LocalIsolate\",\n                    \"about\": \"Represents a local isolate instance\"\n                }\n            </metadata>\n            <code><![CDATA[\n                class LocalIsolate;\n            ]]></code>\n        </class>\n        <class>\n            <metadata>\n                {\n                    \"language\": \"cpp\",\n                    \"type\": \"class\",\n                    \"name\": \"Script\",\n                    \"about\": \"Represents a JavaScript script\"\n                }\n            </metadata>\n            <code><![CDATA[\n                class Script;\n            ]]></code>\n        </class>\n        <class>\n            <metadata>\n                {\n                    \"language\": \"cpp\",\n                    \"type\": \"class\",\n                    \"name\": \"String\",\n                    \"about\": \"Represents a JavaScript string\"\n                }\n            </metadata>\n            <code><![CDATA[\n                class String;\n            ]]></code>\n        </class>\n        <class>\n            <metadata>\n                {\n                    \"language\": \"cpp\",\n                    \"type\": \"class\",\n                    \"name\": \"HeapObject\",\n                    \"about\": \"Represents an object on the V8 heap\"\n                }\n            </metadata>\n            <code><![CDATA[\n                class HeapObject;\n            ]]></code>\n        </class>\n    </dependencies>\n</file>\n```"
}