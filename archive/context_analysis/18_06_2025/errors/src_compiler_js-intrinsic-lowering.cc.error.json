{
  "file_path": "/home/kathirks_gc/v8_go/archive/codebase/src/compiler/js-intrinsic-lowering.cc",
  "error": "Response not JSON and not XML-like after cleanup",
  "json_error_if_any": "Skipped JSON parsing for whole response due to presence of XML tags; XML is primary.",
  "raw_response": "```xml\n<file>\n    <metadata>\n        {\n            \"path\": \"/home/kathirks_gc/v8_go/archive/codebase/src/compiler/js-intrinsic-lowering.cc\",\n            \"file_name\": \"js-intrinsic-lowering.cc\",\n            \"language\": \"cpp\",\n            \"purpose\": \"Lowers JavaScript intrinsics to simpler graph operations within the V8 compiler.\"\n        }\n    </metadata>\n    <imports>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"purpose\": \"Includes necessary headers for compilation, including standard library headers and V8-specific headers for compiler, codegen, and object representation.\"\n            }\n        </metadata>\n        <code><![CDATA[\n#include \"src/compiler/js-intrinsic-lowering.h\"\n\n#include <stack>\n\n#include \"src/codegen/callable.h\"\n#include \"src/compiler/access-builder.h\"\n#include \"src/compiler/js-graph.h\"\n#include \"src/compiler/js-heap-broker.h\"\n#include \"src/compiler/linkage.h\"\n#include \"src/compiler/node-matchers.h\"\n#include \"src/compiler/node-properties.h\"\n#include \"src/objects/js-generator.h\"\n#include \"src/objects/objects-inl.h\"\n        ]]></code>\n    </imports>\n    <class>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"class\",\n                \"name\": \"JSIntrinsicLowering\",\n                \"extends\": \"AdvancedReducer\",\n                \"about\": \"Reduces JavaScript intrinsics to simpler operations in the compiler graph.\",\n                \"attributes\": [\n                    {\n                        \"name\": \"jsgraph_\",\n                        \"type\": \"JSGraph*\",\n                        \"access\": \"private\",\n                        \"purpose\": \"Pointer to the JSGraph object, providing access to the graph structure and related utilities.\"\n                    },\n                    {\n                        \"name\": \"broker_\",\n                        \"type\": \"JSHeapBroker*\",\n                        \"access\": \"private\",\n                        \"purpose\": \"Pointer to the JSHeapBroker object, used for accessing heap objects and properties.\"\n                    }\n                ],\n                \"dependencies\": [\n                    \"AdvancedReducer\",\n                    \"JSGraph\",\n                    \"JSHeapBroker\",\n                    \"Editor\"\n                ]\n            }\n        </metadata>\n        <code><![CDATA[\nclass JSIntrinsicLowering : public AdvancedReducer {\n public:\n  JSIntrinsicLowering(Editor* editor, JSGraph* jsgraph,\n                                         JSHeapBroker* broker);\n\n  Reduction Reduce(Node* node) override;\n\n private:\n  Reduction ReduceCopyDataProperties(Node* node);\n  Reduction ReduceCopyDataPropertiesWithExcludedPropertiesOnStack(Node* node);\n  Reduction ReduceCreateIterResultObject(Node* node);\n  Reduction ReduceDeoptimizeNow(Node* node);\n  Reduction ReduceCreateJSGeneratorObject(Node* node);\n  Reduction ReduceGeneratorClose(Node* node);\n  Reduction ReduceAsyncFunctionAwait(Node* node);\n  Reduction ReduceAsyncFunctionEnter(Node* node);\n  Reduction ReduceAsyncFunctionReject(Node* node);\n  Reduction ReduceAsyncFunctionResolve(Node* node);\n  Reduction ReduceAsyncGeneratorAwait(Node* node);\n  Reduction ReduceAsyncGeneratorReject(Node* node);\n  Reduction ReduceAsyncGeneratorResolve(Node* node);\n  Reduction ReduceAsyncGeneratorYieldWithAwait(Node* node);\n  Reduction ReduceGeneratorGetResumeMode(Node* node);\n  Reduction ReduceIsInstanceType(Node* node, InstanceType instance_type);\n  Reduction ReduceIsJSReceiver(Node* node);\n  Reduction ReduceTurbofanStaticAssert(Node* node);\n  Reduction ReduceVerifyType(Node* node);\n  Reduction ReduceCheckTurboshaftTypeOf(Node* node);\n  Reduction ReduceIsBeingInterpreted(Node* node);\n  Reduction Change(Node* node, const Operator* op);\n  Reduction ReduceToLength(Node* node);\n  Reduction ReduceToObject(Node* node);\n  Reduction ReduceToString(Node* node);\n  Reduction ReduceCall(Node* node);\n  Reduction ReduceIncBlockCounter(Node* node);\n    Reduction ReduceGetImportMetaObject(Node* node);\n  Reduction Change(Node* node, const Operator* op, Node* a, Node* b);\n  Reduction Change(Node* node, const Operator* op, Node* a, Node* b, Node* c);\n  Reduction Change(Node* node, const Operator* op, Node* a, Node* b, Node* c, Node* d);\n  Reduction Change(Node* node, Callable const& callable,\n                                      int stack_parameter_count,\n                                      enum FrameStateFlag frame_state_flag = kNeedsFrameState);\n\n  TFGraph* graph() const;\n  Isolate* isolate() const;\n  CommonOperatorBuilder* common() const;\n  JSOperatorBuilder* javascript() const;\n  SimplifiedOperatorBuilder* simplified() const;\n\n  JSGraph* jsgraph_;\n  JSHeapBroker* broker_;\n};\n        ]]></code>\n    </class>\n    <func>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"function\",\n                \"name\": \"JSIntrinsicLowering\",\n                \"parent\": \"JSIntrinsicLowering\",\n                \"about\": \"Constructor for the JSIntrinsicLowering class.\",\n                \"logic\": \"Initializes the JSIntrinsicLowering object with the editor, JSGraph, and JSHeapBroker.\",\n                \"parameters\": [\n                    {\n                        \"name\": \"editor\",\n                        \"type\": \"Editor*\",\n                        \"purpose\": \"The editor used for graph manipulation.\"\n                    },\n                    {\n                        \"name\": \"jsgraph\",\n                        \"type\": \"JSGraph*\",\n                        \"purpose\": \"The JSGraph object providing access to the graph structure.\"\n                    },\n                    {\n                        \"name\": \"broker\",\n                        \"type\": \"JSHeapBroker*\",\n                        \"purpose\": \"The JSHeapBroker object for accessing heap objects.\"\n                    }\n                ],\n                \"return\": {\n                    \"type\": \"void\",\n                    \"description\": \"None\"\n                },\n                \"dependencies\": [\n                    \"Editor\",\n                    \"JSGraph\",\n                    \"JSHeapBroker\"\n                ]\n            }\n        </metadata>\n        <code><![CDATA[\nJSIntrinsicLowering::JSIntrinsicLowering(Editor* editor, JSGraph* jsgraph,\n                                         JSHeapBroker* broker)\n    : AdvancedReducer(editor), jsgraph_(jsgraph), broker_(broker) {}\n        ]]></code>\n    </func>\n    <func>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"method\",\n                \"name\": \"Reduce\",\n                \"parent\": \"JSIntrinsicLowering\",\n                \"about\": \"Reduces a node in the graph if it represents a JavaScript runtime call that can be lowered.\",\n                \"logic\": \"Checks if the node is a JSCallRuntime node. If so, it determines the runtime function being called and attempts to reduce it to a simpler form.  If the runtime function is marked as INLINE, further reduction attempts are performed.\",\n                \"parameters\": [\n                    {\n                        \"name\": \"node\",\n                        \"type\": \"Node*\",\n                        \"purpose\": \"The node to be reduced.\"\n                    }\n                ],\n                \"return\": {\n                    \"type\": \"Reduction\",\n                    \"description\": \"A Reduction object indicating whether the node was changed and how.\"\n                },\n                \"dependencies\": [\n                    \"Node\",\n                    \"IrOpcode\",\n                    \"CallRuntimeParametersOf\",\n                    \"Runtime::FunctionForId\",\n                    \"Runtime::kIsBeingInterpreted\",\n                    \"ReduceIsBeingInterpreted\",\n                    \"Runtime::kTurbofanStaticAssert\",\n                    \"ReduceTurbofanStaticAssert\",\n                    \"Runtime::kVerifyType\",\n                    \"ReduceVerifyType\",\n                    \"Runtime::kCheckTurboshaftTypeOf\",\n                    \"ReduceCheckTurboshaftTypeOf\",\n                    \"Runtime::IntrinsicType\",\n                    \"Runtime::kInlineCopyDataProperties\",\n                    \"ReduceCopyDataProperties\",\n                    \"Runtime::kInlineCopyDataPropertiesWithExcludedPropertiesOnStack\",\n                    \"ReduceCopyDataPropertiesWithExcludedPropertiesOnStack\",\n                    \"Runtime::kInlineCreateIterResultObject\",\n                    \"ReduceCreateIterResultObject\",\n                    \"Runtime::kInlineDeoptimizeNow\",\n                    \"ReduceDeoptimizeNow\",\n                    \"Runtime::kInlineGeneratorClose\",\n                    \"ReduceGeneratorClose\",\n                    \"Runtime::kInlineCreateJSGeneratorObject\",\n                    \"ReduceCreateJSGeneratorObject\",\n                    \"Runtime::kInlineAsyncFunctionAwait\",\n                    \"ReduceAsyncFunctionAwait\",\n                    \"Runtime::kInlineAsyncFunctionEnter\",\n                    \"ReduceAsyncFunctionEnter\",\n                    \"Runtime::kInlineAsyncFunctionReject\",\n                    \"ReduceAsyncFunctionReject\",\n                    \"Runtime::kInlineAsyncFunctionResolve\",\n                    \"ReduceAsyncFunctionResolve\",\n                    \"Runtime::kInlineAsyncGeneratorAwait\",\n                    \"ReduceAsyncGeneratorAwait\",\n                    \"Runtime::kInlineAsyncGeneratorReject\",\n                    \"ReduceAsyncGeneratorReject\",\n                    \"Runtime::kInlineAsyncGeneratorResolve\",\n                    \"ReduceAsyncGeneratorResolve\",\n                    \"Runtime::kInlineAsyncGeneratorYieldWithAwait\",\n                    \"ReduceAsyncGeneratorYieldWithAwait\",\n                    \"Runtime::kInlineGeneratorGetResumeMode\",\n                    \"ReduceGeneratorGetResumeMode\",\n                    \"Runtime::kInlineIncBlockCounter\",\n                    \"ReduceIncBlockCounter\",\n                    \"Runtime::kInlineGetImportMetaObject\",\n                    \"ReduceGetImportMetaObject\"\n                ]\n            }\n        </metadata>\n        <code><![CDATA[\nReduction JSIntrinsicLowering::Reduce(Node* node) {\n  if (node->opcode() != IrOpcode::kJSCallRuntime) return NoChange();\n  const Runtime::Function* const f =\n      Runtime::FunctionForId(CallRuntimeParametersOf(node->op()).id());\n  switch (f->function_id) {\n    case Runtime::kIsBeingInterpreted:\n      return ReduceIsBeingInterpreted(node);\n    case Runtime::kTurbofanStaticAssert:\n      return ReduceTurbofanStaticAssert(node);\n    case Runtime::kVerifyType:\n      return ReduceVerifyType(node);\n    case Runtime::kCheckTurboshaftTypeOf:\n      return ReduceCheckTurboshaftTypeOf(node);\n    default:\n      break;\n  }\n  if (f->intrinsic_type != Runtime::IntrinsicType::INLINE) return NoChange();\n  switch (f->function_id) {\n    case Runtime::kInlineCopyDataProperties:\n      return ReduceCopyDataProperties(node);\n    case Runtime::kInlineCopyDataPropertiesWithExcludedPropertiesOnStack:\n      return ReduceCopyDataPropertiesWithExcludedPropertiesOnStack(node);\n    case Runtime::kInlineCreateIterResultObject:\n      return ReduceCreateIterResultObject(node);\n    case Runtime::kInlineDeoptimizeNow:\n      return ReduceDeoptimizeNow(node);\n    case Runtime::kInlineGeneratorClose:\n      return ReduceGeneratorClose(node);\n    case Runtime::kInlineCreateJSGeneratorObject:\n      return ReduceCreateJSGeneratorObject(node);\n    case Runtime::kInlineAsyncFunctionAwait:\n      return ReduceAsyncFunctionAwait(node);\n    case Runtime::kInlineAsyncFunctionEnter:\n      return ReduceAsyncFunctionEnter(node);\n    case Runtime::kInlineAsyncFunctionReject:\n      return ReduceAsyncFunctionReject(node);\n    case Runtime::kInlineAsyncFunctionResolve:\n      return ReduceAsyncFunctionResolve(node);\n    case Runtime::kInlineAsyncGeneratorAwait:\n      return ReduceAsyncGeneratorAwait(node);\n    case Runtime::kInlineAsyncGeneratorReject:\n      return ReduceAsyncGeneratorReject(node);\n    case Runtime::kInlineAsyncGeneratorResolve:\n      return ReduceAsyncGeneratorResolve(node);\n    case Runtime::kInlineAsyncGeneratorYieldWithAwait:\n      return ReduceAsyncGeneratorYieldWithAwait(node);\n    case Runtime::kInlineGeneratorGetResumeMode:\n      return ReduceGeneratorGetResumeMode(node);\n    case Runtime::kInlineIncBlockCounter:\n      return ReduceIncBlockCounter(node);\n    case Runtime::kInlineGetImportMetaObject:\n      return ReduceGetImportMetaObject(node);\n    default:\n      break;\n  }\n  return NoChange();\n}\n        ]]></code>\n    </func>\n    <func>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"method\",\n                \"name\": \"ReduceCopyDataProperties\",\n                \"parent\": \"JSIntrinsicLowering\",\n                \"about\": \"Reduces the CopyDataProperties intrinsic call.\",\n                \"logic\": \"Replaces the JSCallRuntime node with a call to the CopyDataProperties builtin.\",\n                \"parameters\": [\n                    {\n                        \"name\": \"node\",\n                        \"type\": \"Node*\",\n                        \"purpose\": \"The node to be reduced.\"\n                    }\n                ],\n                \"return\": {\n                    \"type\": \"Reduction\",\n                    \"description\": \"A Reduction object indicating whether the node was changed.\"\n                },\n                \"dependencies\": [\n                    \"Node\",\n                    \"Builtins::CallableFor\",\n                    \"Builtin::kCopyDataProperties\",\n                    \"Change\"\n                ]\n            }\n        </metadata>\n        <code><![CDATA[\nReduction JSIntrinsicLowering::ReduceCopyDataProperties(Node* node) {\n  return Change(\n      node, Builtins::CallableFor(isolate(), Builtin::kCopyDataProperties), 0);\n}\n        ]]></code>\n    </func>\n    <func>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"method\",\n                \"name\": \"ReduceCopyDataPropertiesWithExcludedPropertiesOnStack\",\n                \"parent\": \"JSIntrinsicLowering\",\n                \"about\": \"Reduces the CopyDataPropertiesWithExcludedPropertiesOnStack intrinsic call.\",\n                \"logic\": \"Replaces the JSCallRuntime node with a call to the CopyDataPropertiesWithExcludedProperties builtin, adjusting the input nodes accordingly.\",\n                \"parameters\": [\n                    {\n                        \"name\": \"node\",\n                        \"type\": \"Node*\",\n                        \"purpose\": \"The node to be reduced.\"\n                    }\n                ],\n                \"return\": {\n                    \"type\": \"Reduction\",\n                    \"description\": \"A Reduction object indicating whether the node was changed.\"\n                },\n                \"dependencies\": [\n                    \"Node\",\n                    \"CallRuntimeParametersOf\",\n                    \"CallDescriptor::Flags\",\n                    \"Builtins::CallableFor\",\n                    \"Builtin::kCopyDataPropertiesWithExcludedProperties\",\n                    \"Linkage::GetStubCallDescriptor\",\n                    \"CallDescriptor\",\n                    \"NodeProperties::ChangeOp\",\n                    \"Changed\",\n                    \"graph()\",\n                    \"zone()\",\n                    \"callable.descriptor()\",\n                    \"jsgraph()\",\n                    \"HeapConstantNoHole\",\n                    \"SmiConstant\",\n                    \"common()\"\n                ]\n            }\n        </metadata>\n        <code><![CDATA[\nReduction\nJSIntrinsicLowering::ReduceCopyDataPropertiesWithExcludedPropertiesOnStack(\n    Node* node) {\n  int input_count =\n      static_cast<int>(CallRuntimeParametersOf(node->op()).arity());\n  CallDescriptor::Flags flags = CallDescriptor::kNeedsFrameState;\n  auto callable = Builtins::CallableFor(\n      isolate(), Builtin::kCopyDataPropertiesWithExcludedProperties);\n  auto call_descriptor = Linkage::GetStubCallDescriptor(\n      graph()->zone(), callable.descriptor(), input_count - 1, flags,\n      node->op()->properties());\n  node->InsertInput(graph()->zone(), 0,\n                    jsgraph()->HeapConstantNoHole(callable.code()));\n  node->InsertInput(graph()->zone(), 2,\n                    jsgraph()->SmiConstant(input_count - 1));\n  NodeProperties::ChangeOp(node, common()->Call(call_descriptor));\n  return Changed(node);\n}\n        ]]></code>\n    </func>\n    <func>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"method\",\n                \"name\": \"ReduceCreateIterResultObject\",\n                \"parent\": \"JSIntrinsicLowering\",\n                \"about\": \"Reduces the CreateIterResultObject intrinsic call.\",\n                \"logic\": \"Replaces the JSCallRuntime node with a call to the CreateIterResultObject javascript builtin.\",\n                \"parameters\": [\n                    {\n                        \"name\": \"node\",\n                        \"type\": \"Node*\",\n                        \"purpose\": \"The node to be reduced.\"\n                    }\n                ],\n                \"return\": {\n                    \"type\": \"Reduction\",\n                    \"description\": \"A Reduction object indicating whether the node was changed.\"\n                },\n                \"dependencies\": [\n                    \"Node\",\n                    \"NodeProperties::GetValueInput\",\n                    \"NodeProperties::GetContextInput\",\n                    \"NodeProperties::GetEffectInput\",\n                    \"javascript()\",\n                    \"CreateIterResultObject\",\n                    \"Change\"\n                ]\n            }\n        </metadata>\n        <code><![CDATA[\nReduction JSIntrinsicLowering::ReduceCreateIterResultObject(Node* node) {\n  Node* const value = NodeProperties::GetValueInput(node, 0);\n  Node* const done = NodeProperties::GetValueInput(node, 1);\n  Node* const context = NodeProperties::GetContextInput(node);\n  Node* const effect = NodeProperties::GetEffectInput(node);\n  return Change(node, javascript()->CreateIterResultObject(), value, done,\n                context, effect);\n}\n        ]]></code>\n    </func>\n    <func>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"method\",\n                \"name\": \"ReduceDeoptimizeNow\",\n                \"parent\": \"JSIntrinsicLowering\",\n                \"about\": \"Reduces the DeoptimizeNow intrinsic call.\",\n                \"logic\": \"Replaces the JSCallRuntime node with a Deoptimize node, effectively triggering deoptimization.\",\n                \"parameters\": [\n                    {\n                        \"name\": \"node\",\n                        \"type\": \"Node*\",\n                        \"purpose\": \"The node to be reduced.\"\n                    }\n                ],\n                \"return\": {\n                    \"type\": \"Reduction\",\n                    \"description\": \"A Reduction object indicating whether the node was changed.\"\n                },\n                \"dependencies\": [\n                    \"Node\",\n                    \"NodeProperties::GetFrameStateInput\",\n                    \"NodeProperties::GetEffectInput\",\n                    \"NodeProperties::GetControlInput\",\n                    \"graph()\",\n                    \"NewNode\",\n                    \"common()\",\n                    \"Deoptimize\",\n                    \"DeoptimizeReason::kDeoptimizeNow\",\n                    \"FeedbackSource\",\n                    \"MergeControlToEnd\",\n                    \"NodeProperties::ChangeOp\",\n                    \"Dead\",\n                    \"Changed\"\n                ]\n            }\n        </metadata>\n        <code><![CDATA[\nReduction JSIntrinsicLowering::ReduceDeoptimizeNow(Node* node) {\n  Node* const frame_state = NodeProperties::GetFrameStateInput(node);\n  Node* const effect = NodeProperties::GetEffectInput(node);\n  Node* const control = NodeProperties::GetControlInput(node);\n\n  Node* deoptimize = graph()->NewNode(\n      common()->Deoptimize(DeoptimizeReason::kDeoptimizeNow, FeedbackSource()),\n      frame_state, effect, control);\n  MergeControlToEnd(graph(), common(), deoptimize);\n\n  node->TrimInputCount(0);\n  NodeProperties::ChangeOp(node, common()->Dead());\n  return Changed(node);\n}\n        ]]></code>\n    </func>\n    <func>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"method\",\n                \"name\": \"ReduceCreateJSGeneratorObject\",\n                \"parent\": \"JSIntrinsicLowering\",\n                \"about\": \"Reduces the CreateJSGeneratorObject intrinsic call.\",\n                \"logic\": \"Replaces the JSCallRuntime node with a CreateGeneratorObject node, creating a new JSGeneratorObject.\",\n                \"parameters\": [\n                    {\n                        \"name\": \"node\",\n                        \"type\": \"Node*\",\n                        \"purpose\": \"The node to be reduced.\"\n                    }\n                ],\n                \"return\": {\n                    \"type\": \"Reduction\",\n                    \"description\": \"A Reduction object indicating whether the node was changed.\"\n                },\n                \"dependencies\": [\n                    \"Node\",\n                    \"NodeProperties::GetValueInput\",\n                    \"NodeProperties::GetContextInput\",\n                    \"NodeProperties::GetEffectInput\",\n                    \"NodeProperties::GetControlInput\",\n                    \"javascript()\",\n                    \"CreateGeneratorObject\",\n                    \"ReplaceWithValue\",\n                    \"Changed\",\n                    \"graph()\",\n                    \"NewNode\"\n                ]\n            }\n        </metadata>\n        <code><![CDATA[\nReduction JSIntrinsicLowering::ReduceCreateJSGeneratorObject(Node* node) {\n  Node* const closure = NodeProperties::GetValueInput(node, 0);\n  Node* const receiver = NodeProperties::GetValueInput(node, 1);\n  Node* const context = NodeProperties::GetContextInput(node);\n  Node* const effect = NodeProperties::GetEffectInput(node);\n  Node* const control = NodeProperties::GetControlInput(node);\n  Operator const* const op = javascript()->CreateGeneratorObject();\n  Node* create_generator =\n      graph()->NewNode(op, closure, receiver, context, effect, control);\n  ReplaceWithValue(node, create_generator, create_generator);\n  return Changed(create_generator);\n}\n        ]]></code>\n    </func>\n    <func>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"method\",\n                \"name\": \"ReduceGeneratorClose\",\n                \"parent\": \"JSIntrinsicLowering\",\n                \"about\": \"Reduces the GeneratorClose intrinsic call.\",\n                \"logic\": \"Replaces the JSCallRuntime node with a StoreField node to set the generator's state to closed.\",\n                \"parameters\": [\n                    {\n                        \"name\": \"node\",\n                        \"type\": \"Node*\",\n                        \"purpose\": \"The node to be reduced.\"\n                    }\n                ],\n                \"return\": {\n                    \"type\": \"Reduction\",\n                    \"description\": \"A Reduction object indicating whether the node was changed.\"\n                },\n                \"dependencies\": [\n                    \"Node\",\n                    \"NodeProperties::GetValueInput\",\n                    \"NodeProperties::GetEffectInput\",\n                    \"NodeProperties::GetControlInput\",\n                    \"jsgraph()\",\n                    \"ConstantNoHole\",\n                    \"JSGeneratorObject::kGeneratorClosed\",\n                    \"UndefinedConstant\",\n                    \"simplified()\",\n                    \"StoreField\",\n                    \"AccessBuilder::ForJSGeneratorObjectContinuation\",\n                    \"ReplaceWithValue\",\n                    \"NodeProperties::RemoveType\",\n                    \"Change\"\n                ]\n            }\n        </metadata>\n        <code><![CDATA[\nReduction JSIntrinsicLowering::ReduceGeneratorClose(Node* node) {\n  Node* const generator = NodeProperties::GetValueInput(node, 0);\n  Node* const effect = NodeProperties::GetEffectInput(node);\n  Node* const control = NodeProperties::GetControlInput(node);\n  Node* const closed =\n      jsgraph()->ConstantNoHole(JSGeneratorObject::kGeneratorClosed);\n  Node* const undefined = jsgraph()->UndefinedConstant();\n  Operator const* const op = simplified()->StoreField(\n      AccessBuilder::ForJSGeneratorObjectContinuation());\n\n  ReplaceWithValue(node, undefined, node);\n  NodeProperties::RemoveType(node);\n  return Change(node, op, generator, closed, effect, control);\n}\n        ]]></code>\n    </func>\n    <func>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"method\",\n                \"name\": \"ReduceAsyncFunctionAwait\",\n                \"parent\": \"JSIntrinsicLowering\",\n                \"about\": \"Reduces the AsyncFunctionAwait intrinsic call.\",\n                \"logic\": \"Replaces the JSCallRuntime node with a call to the AsyncFunctionAwait builtin.\",\n                \"parameters\": [\n                    {\n                        \"name\": \"node\",\n                        \"type\": \"Node*\",\n                        \"purpose\": \"The node to be reduced.\"\n                    }\n                ],\n                \"return\": {\n                    \"type\": \"Reduction\",\n                    \"description\": \"A Reduction object indicating whether the node was changed.\"\n                },\n                \"dependencies\": [\n                    \"Node\",\n                    \"Builtins::CallableFor\",\n                    \"Builtin::kAsyncFunctionAwait\",\n                    \"Change\"\n                ]\n            }\n        </metadata>\n        <code><![CDATA[\nReduction JSIntrinsicLowering::ReduceAsyncFunctionAwait(Node* node) {\n  return Change(\n      node, Builtins::CallableFor(isolate(), Builtin::kAsyncFunctionAwait), 0);\n}\n        ]]></code>\n    </func>\n    <func>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"method\",\n                \"name\": \"ReduceAsyncFunctionEnter\",\n                \"parent\": \"JSIntrinsicLowering\",\n                \"about\": \"Reduces the AsyncFunctionEnter intrinsic call.\",\n                \"logic\": \"Replaces the JSCallRuntime node with an AsyncFunctionEnter node.\",\n                \"parameters\": [\n                    {\n                        \"name\": \"node\",\n                        \"type\": \"Node*\",\n                        \"purpose\": \"The node to be reduced.\"\n                    }\n                ],\n                \"return\": {\n                    \"type\": \"Reduction\",\n                    \"description\": \"A Reduction object indicating whether the node was changed.\"\n                },\n                \"dependencies\": [\n                    \"Node\",\n                    \"javascript()\",\n                    \"AsyncFunctionEnter\",\n                    \"NodeProperties::ChangeOp\",\n                    \"Changed\"\n                ]\n            }\n        </metadata>\n        <code><![CDATA[\nReduction JSIntrinsicLowering::ReduceAsyncFunctionEnter(Node* node) {\n  NodeProperties::ChangeOp(node, javascript()->AsyncFunctionEnter());\n  return Changed(node);\n}\n        ]]></code>\n    </func>\n    <func>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"method\",\n                \"name\": \"ReduceAsyncFunctionReject\",\n                \"parent\": \"JSIntrinsicLowering\",\n                \"about\": \"Reduces the AsyncFunctionReject intrinsic call.\",\n                \"logic\": \"Replaces the JSCallRuntime node with an AsyncFunctionReject node.\",\n                \"parameters\": [\n                    {\n                        \"name\": \"node\",\n                        \"type\": \"Node*\",\n                        \"purpose\": \"The node to be reduced.\"\n                    }\n                ],\n                \"return\": {\n                    \"type\": \"Reduction\",\n                    \"description\": \"A Reduction object indicating whether the node was changed.\"\n                },\n                \"dependencies\": [\n                    \"Node\",\n                    \"RelaxControls\",\n                    \"javascript()\",\n                    \"AsyncFunctionReject\",\n                    \"NodeProperties::ChangeOp\",\n                    \"Changed\"\n                ]\n            }\n        </metadata>\n        <code><![CDATA[\nReduction JSIntrinsicLowering::ReduceAsyncFunctionReject(Node* node) {\n  RelaxControls(node);\n  NodeProperties::ChangeOp(node, javascript()->AsyncFunctionReject());\n  return Changed(node);\n}\n        ]]></code>\n    </func>\n        <func>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"method\",\n                \"name\": \"ReduceAsyncFunctionResolve\",\n                \"parent\": \"JSIntrinsicLowering\",\n                \"about\": \"Reduces the AsyncFunctionResolve intrinsic call.\",\n                \"logic\": \"Replaces the JSCallRuntime node with an AsyncFunctionResolve node.\",\n                \"parameters\": [\n                    {\n                        \"name\": \"node\",\n                        \"type\": \"Node*\",\n                        \"purpose\": \"The node to be reduced.\"\n                    }\n                ],\n                \"return\": {\n                    \"type\": \"Reduction\",\n                    \"description\": \"A Reduction object indicating whether the node was changed.\"\n                },\n                \"dependencies\": [\n                    \"Node\",\n                    \"RelaxControls\",\n                    \"javascript()\",\n                    \"AsyncFunctionResolve\",\n                    \"NodeProperties::ChangeOp\",\n                    \"Changed\"\n                ]\n            }\n        </metadata>\n        <code><![CDATA[\nReduction JSIntrinsicLowering::ReduceAsyncFunctionResolve(Node* node) {\n  RelaxControls(node);\n  NodeProperties::ChangeOp(node, javascript()->AsyncFunctionResolve());\n  return Changed(node);\n}\n        ]]></code>\n    </func>\n        <func>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"method\",\n                \"name\": \"ReduceAsyncGeneratorAwait\",\n                \"parent\": \"JSIntrinsicLowering\",\n                \"about\": \"Reduces the AsyncGeneratorAwait intrinsic call.\",\n                \"logic\": \"Replaces the JSCallRuntime node with a call to the AsyncGeneratorAwait builtin.\",\n                \"parameters\": [\n                    {\n                        \"name\": \"node\",\n                        \"type\": \"Node*\",\n                        \"purpose\": \"The node to be reduced.\"\n                    }\n                ],\n                \"return\": {\n                    \"type\": \"Reduction\",\n                    \"description\": \"A Reduction object indicating whether the node was changed.\"\n                },\n                \"dependencies\": [\n                    \"Node\",\n                    \"Builtins::CallableFor\",\n                    \"Builtin::kAsyncGeneratorAwait\",\n                    \"Change\"\n                ]\n            }\n        </metadata>\n        <code><![CDATA[\nReduction JSIntrinsicLowering::ReduceAsyncGeneratorAwait(Node* node) {\n  return Change(\n      node, Builtins::CallableFor(isolate(), Builtin::kAsyncGeneratorAwait), 0);\n}\n        ]]></code>\n    </func>\n    <func>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"method\",\n                \"name\": \"ReduceAsyncGeneratorReject\",\n                \"parent\": \"JSIntrinsicLowering\",\n                \"about\": \"Reduces the AsyncGeneratorReject intrinsic call.\",\n                \"logic\": \"Replaces the JSCallRuntime node with a call to the AsyncGeneratorReject builtin.\",\n                \"parameters\": [\n                    {\n                        \"name\": \"node\",\n                        \"type\": \"Node*\",\n                        \"purpose\": \"The node to be reduced.\"\n                    }\n                ],\n                \"return\": {\n                    \"type\": \"Reduction\",\n                    \"description\": \"A Reduction object indicating whether the node was changed.\"\n                },\n                \"dependencies\": [\n                    \"Node\",\n                    \"Builtins::CallableFor\",\n                    \"Builtin::kAsyncGeneratorReject\",\n                    \"Change\"\n                ]\n            }\n        </metadata>\n        <code><![CDATA[\nReduction JSIntrinsicLowering::ReduceAsyncGeneratorReject(Node* node) {\n  return Change(\n      node, Builtins::CallableFor(isolate(), Builtin::kAsyncGeneratorReject),\n      0);\n}\n        ]]></code>\n    </func>\n    <func>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"method\",\n                \"name\": \"ReduceAsyncGeneratorResolve\",\n                \"parent\": \"JSIntrinsicLowering\",\n                \"about\": \"Reduces the AsyncGeneratorResolve intrinsic call.\",\n                \"logic\": \"Replaces the JSCallRuntime node with a call to the AsyncGeneratorResolve builtin.\",\n                \"parameters\": [\n                    {\n                        \"name\": \"node\",\n                        \"type\": \"Node*\",\n                        \"purpose\": \"The node to be reduced.\"\n                    }\n                ],\n                \"return\": {\n                    \"type\": \"Reduction\",\n                    \"description\": \"A Reduction object indicating whether the node was changed.\"\n                },\n                \"dependencies\": [\n                    \"Node\",\n                    \"Builtins::CallableFor\",\n                    \"Builtin::kAsyncGeneratorResolve\",\n                    \"Change\"\n                ]\n            }\n        </metadata>\n        <code><![CDATA[\nReduction JSIntrinsicLowering::ReduceAsyncGeneratorResolve(Node* node) {\n  return Change(\n      node, Builtins::CallableFor(isolate(), Builtin::kAsyncGeneratorResolve),\n      0);\n}\n        ]]></code>\n    </func>\n    <func>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"method\",\n                \"name\": \"ReduceAsyncGeneratorYieldWithAwait\",\n                \"parent\": \"JSIntrinsicLowering\",\n                \"about\": \"Reduces the AsyncGeneratorYieldWithAwait intrinsic call.\",\n                \"logic\": \"Replaces the JSCallRuntime node with a call to the AsyncGeneratorYieldWithAwait builtin.\",\n                \"parameters\": [\n                    {\n                        \"name\": \"node\",\n                        \"type\": \"Node*\",\n                        \"purpose\": \"The node to be reduced.\"\n                    }\n                ],\n                \"return\": {\n                    \"type\": \"Reduction\",\n                    \"description\": \"A Reduction object indicating whether the node was changed.\"\n                },\n                \"dependencies\": [\n                    \"Node\",\n                    \"Builtins::CallableFor\",\n                    \"Builtin::kAsyncGeneratorYieldWithAwait\",\n                    \"Change\"\n                ]\n            }\n        </metadata>\n        <code><![CDATA[\nReduction JSIntrinsicLowering::ReduceAsyncGeneratorYieldWithAwait(Node* node) {\n  return Change(\n      node,\n      Builtins::CallableFor(isolate(), Builtin::kAsyncGeneratorYieldWithAwait),\n      0);\n}\n        ]]></code>\n    </func>\n    <func>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"method\",\n                \"name\": \"ReduceGeneratorGetResumeMode\",\n                \"parent\": \"JSIntrinsicLowering\",\n                \"about\": \"Reduces the GeneratorGetResumeMode intrinsic call.\",\n                \"logic\": \"Replaces the JSCallRuntime node with a LoadField node to get the generator's resume mode.\",\n                \"parameters\": [\n                    {\n                        \"name\": \"node\",\n                        \"type\": \"Node*\",\n                        \"purpose\": \"The node to be reduced.\"\n                    }\n                ],\n                \"return\": {\n                    \"type\": \"Reduction\",\n                    \"description\": \"A Reduction object indicating whether the node was changed.\"\n                },\n                \"dependencies\": [\n                    \"Node\",\n                    \"NodeProperties::GetValueInput\",\n                    \"NodeProperties::GetEffectInput\",\n                    \"NodeProperties::GetControlInput\",\n                    \"simplified()\",\n                    \"LoadField\",\n                    \"AccessBuilder::ForJSGeneratorObjectResumeMode\",\n                    \"Change\"\n                ]\n            }\n        </metadata>\n        <code><![CDATA[\nReduction JSIntrinsicLowering::ReduceGeneratorGetResumeMode(Node* node) {\n  Node* const generator = NodeProperties::GetValueInput(node, 0);\n  Node* const effect = NodeProperties::GetEffectInput(node);\n  Node* const control = NodeProperties::GetControlInput(node);\n  Operator const* const op =\n      simplified()->LoadField(AccessBuilder::ForJSGeneratorObjectResumeMode());\n\n  return Change(node, op, generator, effect, control);\n}\n        ]]></code>\n    </func>\n        <func>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"method\",\n                \"name\": \"ReduceIsInstanceType\",\n                \"parent\": \"JSIntrinsicLowering\",\n                \"about\": \"Reduces the IsInstanceType intrinsic call.\",\n                \"logic\": \"Checks if the value is a Smi. If it is, return false. Otherwise, load the map and instance type and compare it to the given instance_type.\",\n                \"parameters\": [\n                    {\n                        \"name\": \"node\",\n                        \"type\": \"Node*\",\n                        \"purpose\": \"The node to be reduced.\"\n                    },\n                    {\n                        \"name\": \"instance_type\",\n                        \"type\":"
}