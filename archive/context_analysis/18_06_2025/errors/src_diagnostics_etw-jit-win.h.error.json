{
  "file_path": "/home/kathirks_gc/v8_go/archive/codebase/src/diagnostics/etw-jit-win.h",
  "error": "JSON and XML parsing failed",
  "json_error_if_any": "Skipped JSON parsing for whole response due to presence of XML tags; XML is primary.",
  "xml_error": "mismatched tag: line 98, column 10",
  "raw_response": "```xml\n<file>\n    <metadata>\n        {\n            \"path\": \"/home/kathirks_gc/v8_go/archive/codebase/src/diagnostics/etw-jit-win.h\",\n            \"file_name\": \"etw-jit-win.h\",\n            \"language\": \"cpp\",\n            \"purpose\": \"Header file for ETW (Event Tracing for Windows) JIT (Just-In-Time) compilation integration in V8. Defines the interface for registering and handling JIT code events for ETW tracing.\"\n        }\n    </metadata>\n    <imports>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"purpose\": \"Includes necessary headers for atomic operations, V8 callbacks, V8 configuration, and base macros.\"\n            }\n        </metadata>\n        <code><![CDATA[\n#include <atomic>\n\n#include \"include/v8-callbacks.h\"\n#include \"include/v8config.h\"\n#include \"src/base/macros.h\"\n        ]]></code>\n    </imports>\n    <class>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"class\",\n                \"name\": \"Isolate\",\n                \"about\": \"A V8 Isolate, representing an isolated instance of the V8 JavaScript engine.\",\n                \"dependencies\": []\n            }\n        </metadata>\n        <code><![CDATA[\nclass Isolate;\n        ]]></code>\n    </class>\n    <class>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"struct\",\n                \"name\": \"JitCodeEvent\",\n                \"about\": \"A structure representing a JIT code event.\",\n                \"dependencies\": []\n            }\n        </metadata>\n        <code><![CDATA[\nstruct JitCodeEvent;\n        ]]></code>\n    </class>\n    <namespace>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"name\": \"v8\",\n                \"purpose\": \"The main V8 namespace.\"\n            }\n        </metadata>\n        <code><![CDATA[\nnamespace v8 {\n        ]]></code>\n    </namespace>\n    <namespace>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"name\": \"internal\",\n                \"purpose\": \"Internal V8 namespace for implementation details.\"\n            }\n        </metadata>\n        <code><![CDATA[\nnamespace internal {\n        ]]></code>\n    </namespace>\n    <namespace>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"name\": \"ETWJITInterface\",\n                \"purpose\": \"Namespace encapsulating the ETW JIT interface.\"\n            }\n        </metadata>\n        <code><![CDATA[\nnamespace ETWJITInterface {\n        ]]></code>\n    </namespace>\n    <variable>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"std::atomic<bool>\",\n                \"name\": \"has_active_etw_tracing_session_or_custom_filter\",\n                \"about\": \"Atomic boolean indicating whether there is an active ETW tracing session or a custom filter is enabled.  V8_EXPORT_PRIVATE makes it accessible outside the compilation unit but not part of the public API.\",\n                \"dependencies\": []\n            }\n        </metadata>\n        <code><![CDATA[\nextern V8_EXPORT_PRIVATE std::atomic<bool>\n    has_active_etw_tracing_session_or_custom_filter;\n        ]]></code>\n    </variable>\n    <constant>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"uint32_t\",\n                \"name\": \"kEtwRundown\",\n                \"about\": \"Constant representing the ETW rundown event code. Indicates that the ETW event emission was triggered by a CaptureStateOnStop callback.\",\n                \"dependencies\": []\n            }\n        </metadata>\n        <code><![CDATA[\nconstexpr uint32_t kEtwRundown = 0xf0000000;\n        ]]></code>\n    </constant>\n    <static_assert>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"assert\": \"kEtwRundown > JitCodeEventOptions::kLastJitCodeEventOption\",\n                \"purpose\": \"Compile-time assertion ensuring that kEtwRundown is greater than the last JIT code event option.\"\n            }\n        </metadata>\n        <code><![CDATA[\nstatic_assert(kEtwRundown > JitCodeEventOptions::kLastJitCodeEventOption);\n        ]]></code>\n    </static_assert>\n    <func>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"function\",\n                \"name\": \"Register\",\n                \"about\": \"Registers the ETW JIT interface.\",\n                \"parameters\": [],\n                \"return\": {\n                    \"type\": \"void\",\n                    \"description\": \"No return value\"\n                },\n                \"dependencies\": []\n            }\n        </metadata>\n        <code><![CDATA[\nvoid Register();\n        ]]></code>\n    </func>\n    <func>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"function\",\n                \"name\": \"Unregister\",\n                \"about\": \"Unregisters the ETW JIT interface.\",\n                \"parameters\": [],\n                \"return\": {\n                    \"type\": \"void\",\n                    \"description\": \"No return value\"\n                },\n                \"dependencies\": []\n            }\n        </metadata>\n        <code><![CDATA[\nvoid Unregister();\n        ]]></code>\n    </func>\n    <func>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"function\",\n                \"name\": \"AddIsolate\",\n                \"about\": \"Adds an isolate to the ETW JIT interface.\",\n                \"parameters\": [\n                    {\n                        \"name\": \"isolate\",\n                        \"type\": \"Isolate*\",\n                        \"purpose\": \"The isolate to add.\"\n                    }\n                ],\n                \"return\": {\n                    \"type\": \"void\",\n                    \"description\": \"No return value\"\n                },\n                \"dependencies\": [\n                    \"Isolate\"\n                ]\n            }\n        </metadata>\n        <code><![CDATA[\nvoid AddIsolate(Isolate* isolate);\n        ]]></code>\n    </func>\n    <func>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"function\",\n                \"name\": \"RemoveIsolate\",\n                \"about\": \"Removes an isolate from the ETW JIT interface.\",\n                \"parameters\": [\n                    {\n                        \"name\": \"isolate\",\n                        \"type\": \"Isolate*\",\n                        \"purpose\": \"The isolate to remove.\"\n                    }\n                ],\n                \"return\": {\n                    \"type\": \"void\",\n                    \"description\": \"No return value\"\n                },\n                \"dependencies\": [\n                    \"Isolate\"\n                ]\n            }\n        </metadata>\n        <code><![CDATA[\nvoid RemoveIsolate(Isolate* isolate);\n        ]]></code>\n    </func>\n    <func>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"function\",\n                \"name\": \"EventHandler\",\n                \"about\": \"Handles ETW JIT code events.\",\n                \"parameters\": [\n                    {\n                        \"name\": \"event\",\n                        \"type\": \"const v8::JitCodeEvent*\",\n                        \"purpose\": \"The JIT code event to handle.\"\n                    }\n                ],\n                \"return\": {\n                    \"type\": \"void\",\n                    \"description\": \"No return value\"\n                },\n                \"dependencies\": [\n                    \"v8::JitCodeEvent\"\n                ]\n            }\n        </metadata>\n        <code><![CDATA[\nvoid EventHandler(const v8::JitCodeEvent* event);\n        ]]></code>\n    </func>\n    <func>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"function\",\n                \"name\": \"MaybeSetHandlerNow\",\n                \"about\": \"Possibly sets the ETW event handler immediately.\",\n                \"parameters\": [\n                    {\n                        \"name\": \"isolate\",\n                        \"type\": \"Isolate*\",\n                        \"purpose\": \"The isolate to potentially set the handler for.\"\n                    }\n                ],\n                \"return\": {\n                    \"type\": \"void\",\n                    \"description\": \"No return value\"\n                },\n                \"dependencies\": [\n                    \"Isolate\"\n                ]\n            }\n        </metadata>\n        <code><![CDATA[\nvoid MaybeSetHandlerNow(Isolate* isolate);\n        ]]></code>\n    </func>\n    <namespace_end>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"name\": \"ETWJITInterface\",\n                \"purpose\": \"Closing ETWJITInterface namespace\"\n            }\n        </metadata>\n        <code><![CDATA[\n}  // namespace ETWJITInterface\n        ]]></code>\n    </namespace_end>\n    <namespace_end>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"name\": \"internal\",\n                \"purpose\": \"Closing internal namespace\"\n            }\n        </metadata>\n        <code><![CDATA[\n}  // namespace internal\n        ]]></code>\n    </namespace_end>\n    <namespace_end>\n        <metadata>\n            {\n                \"language\": \"cpp\",\n                \"name\": \"v8\",\n                \"purpose\": \"Closing V8 namespace\"\n            }\n        </metadata>\n        <code><![CDATA[\n}  // namespace v8\n        ]]></code>\n    </namespace_end>\n</file>\n```"
}