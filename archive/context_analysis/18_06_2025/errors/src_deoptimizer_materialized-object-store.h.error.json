{
  "file_path": "/home/kathirks_gc/v8_go/archive/codebase/src/deoptimizer/materialized-object-store.h",
  "error": "JSON and XML parsing failed",
  "json_error_if_any": "Skipped JSON parsing for whole response due to presence of XML tags; XML is primary.",
  "xml_error": "mismatched tag: line 50, column 10",
  "raw_response": "```xml\n<file>\n    <metadata>\n    {\n        \"path\": \"/home/kathirks_gc/v8_go/archive/codebase/src/deoptimizer/materialized-object-store.h\",\n        \"file_name\": \"materialized-object-store.h\",\n        \"language\": \"cpp\",\n        \"purpose\": \"Defines the MaterializedObjectStore class, which stores materialized objects for deoptimization.\"\n    }\n    </metadata>\n    <imports>\n        <metadata>\n        {\n            \"language\": \"cpp\",\n            \"purpose\": \"Includes necessary headers for vector and handle management.\"\n        }\n        </metadata>\n        <code><![CDATA[\n#include <vector>\n\n#include \"src/handles/handles.h\"\n        ]]></code>\n    </imports>\n    <class>\n        <metadata>\n        {\n            \"language\": \"cpp\",\n            \"type\": \"class\",\n            \"name\": \"MaterializedObjectStore\",\n            \"about\": \"Stores materialized objects for deoptimization, mapping frame pointers to FixedArrays of materialized objects.\",\n            \"attributes\": [\n                {\n                    \"name\": \"isolate_\",\n                    \"type\": \"Isolate*\",\n                    \"access\": \"private\",\n                    \"purpose\": \"Pointer to the Isolate object.\"\n                },\n                {\n                    \"name\": \"frame_fps_\",\n                    \"type\": \"std::vector<Address>\",\n                    \"access\": \"private\",\n                    \"purpose\": \"Vector of frame pointers (addresses).\"\n                }\n            ],\n            \"dependencies\": [\n                \"FixedArray\",\n                \"Isolate\",\n                \"DirectHandle\"\n            ]\n        }\n        </metadata>\n        <code><![CDATA[\nclass MaterializedObjectStore {\n public:\n  explicit MaterializedObjectStore(Isolate* isolate) : isolate_(isolate) {}\n\n  DirectHandle<FixedArray> Get(Address fp);\n  void Set(Address fp, DirectHandle<FixedArray> materialized_objects);\n  bool Remove(Address fp);\n\n private:\n  Isolate* isolate() const { return isolate_; }\n  DirectHandle<FixedArray> GetStackEntries();\n  DirectHandle<FixedArray> EnsureStackEntries(int size);\n\n  int StackIdToIndex(Address fp);\n\n  Isolate* isolate_;\n  std::vector<Address> frame_fps_;\n};\n        ]]></code>\n    </class>\n    <dependencies>\n        <class>\n            <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"class\",\n                \"name\": \"FixedArray\",\n                \"about\": \"Represents a fixed-size array object in V8.\"\n            }\n            </metadata>\n            <code><![CDATA[\nclass FixedArray;\n            ]]></code>\n        </class>\n        <class>\n            <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"class\",\n                \"name\": \"Isolate\",\n                \"about\": \"Represents an isolated instance of the V8 JavaScript engine.\"\n            }\n            </metadata>\n            <code><![CDATA[\nclass Isolate;\n            ]]></code>\n        </class>\n        <class>\n            <metadata>\n            {\n                \"language\": \"cpp\",\n                \"type\": \"class\",\n                \"name\": \"DirectHandle\",\n                \"about\": \"A direct, non-GC managed handle to a V8 object.\"\n            }\n            </metadata>\n            <code><![CDATA[\nclass DirectHandle;\n            ]]></code>\n        </class>\n    </dependencies>\n</file>\n```"
}