{
  "file_path": "/home/kathirks_gc/v8_go/archive/codebase/src/init/heap-symbols.h",
  "error": "Response not JSON and not XML-like after cleanup",
  "json_error_if_any": "Skipped JSON parsing for whole response due to presence of XML tags; XML is primary.",
  "raw_response": "```xml\n<file>\n    <metadata>\n    {\n        \"path\": \"/home/kathirks_gc/v8_go/archive/codebase/src/init/heap-symbols.h\",\n        \"file_name\": \"heap-symbols.h\",\n        \"language\": \"cpp\",\n        \"purpose\": \"Defines macros that generate lists of internalized strings and symbols for the V8 heap.  These strings and symbols are used internally by the engine.\"\n    }\n    </metadata>\n\n    <imports>\n        <metadata>\n        {\n            \"language\": \"cpp\",\n            \"purpose\": \"Standard preprocessor directives to prevent multiple inclusion and conditional compilation based on preprocessor flags.\"\n        }\n        </metadata>\n        <code><![CDATA[\n            #ifndef V8_INIT_HEAP_SYMBOLS_H_\n            #define V8_INIT_HEAP_SYMBOLS_H_\n        ]]></code>\n    </imports>\n\n    <imports>\n        <metadata>\n        {\n            \"language\": \"cpp\",\n            \"purpose\": \"Conditional compilation based on whether internationalization support (V8_INTL_SUPPORT) is enabled.\"\n        }\n        </metadata>\n        <code><![CDATA[\n            #ifdef V8_INTL_SUPPORT\n            #define INTERNALIZED_STRING_LIST_GENERATOR_INTL(V, _)               \\\n              V(_, adoptText_string, \"adoptText\")                               \\\n              V(_, approximatelySign_string, \"approximatelySign\")               \\\n              V(_, baseName_string, \"baseName\")                                 \\\n              V(_, accounting_string, \"accounting\")                             \\\n              V(_, breakType_string, \"breakType\")                               \\\n              V(_, calendars_string, \"calendars\")                               \\\n              V(_, cardinal_string, \"cardinal\")                                 \\\n              V(_, caseFirst_string, \"caseFirst\")                               \\\n              V(_, ceil_string, \"ceil\")                                         \\\n              V(_, compare_string, \"compare\")                                   \\\n              V(_, collation_string, \"collation\")                               \\\n              V(_, collations_string, \"collations\")                             \\\n              V(_, compact_string, \"compact\")                                   \\\n              V(_, compactDisplay_string, \"compactDisplay\")                     \\\n              V(_, currency_string, \"currency\")                                 \\\n              V(_, currencyDisplay_string, \"currencyDisplay\")                   \\\n              V(_, currencySign_string, \"currencySign\")                         \\\n              V(_, dateStyle_string, \"dateStyle\")                               \\\n              V(_, dateTimeField_string, \"dateTimeField\")                       \\\n              V(_, dayPeriod_string, \"dayPeriod\")                               \\\n              V(_, daysDisplay_string, \"daysDisplay\")                           \\\n              V(_, decimal_string, \"decimal\")                                   \\\n              V(_, dialect_string, \"dialect\")                                   \\\n              V(_, digital_string, \"digital\")                                   \\\n              V(_, direction_string, \"direction\")                               \\\n              V(_, endRange_string, \"endRange\")                                 \\\n              V(_, engineering_string, \"engineering\")                           \\\n              V(_, exceptZero_string, \"exceptZero\")                             \\\n              V(_, expand_string, \"expand\")                                     \\\n              V(_, exponentInteger_string, \"exponentInteger\")                   \\\n              V(_, exponentMinusSign_string, \"exponentMinusSign\")               \\\n              V(_, exponentSeparator_string, \"exponentSeparator\")               \\\n              V(_, fallback_string, \"fallback\")                                 \\\n              V(_, first_string, \"first\")                                       \\\n              V(_, firstDay_string, \"firstDay\")                                 \\\n              V(_, firstDayOfWeek_string, \"firstDayOfWeek\")                     \\\n              V(_, floor_string, \"floor\")                                       \\\n              V(_, format_string, \"format\")                                     \\\n              V(_, fraction_string, \"fraction\")                                 \\\n              V(_, fractionalDigits_string, \"fractionalDigits\")                 \\\n              V(_, fractionalSecond_string, \"fractionalSecond\")                 \\\n              V(_, full_string, \"full\")                                         \\\n              V(_, granularity_string, \"granularity\")                           \\\n              V(_, grapheme_string, \"grapheme\")                                 \\\n              V(_, group_string, \"group\")                                       \\\n              V(_, h11_string, \"h11\")                                           \\\n              V(_, h12_string, \"h12\")                                           \\\n              V(_, h23_string, \"h23\")                                           \\\n              V(_, h24_string, \"h24\")                                           \\\n              V(_, halfCeil_string, \"halfCeil\")                                 \\\n              V(_, halfEven_string, \"halfEven\")                                 \\\n              V(_, halfExpand_string, \"halfExpand\")                             \\\n              V(_, halfFloor_string, \"halfFloor\")                               \\\n              V(_, halfTrunc_string, \"halfTrunc\")                               \\\n              V(_, hour12_string, \"hour12\")                                     \\\n              V(_, hourCycle_string, \"hourCycle\")                               \\\n              V(_, hourCycles_string, \"hourCycles\")                             \\\n              V(_, hoursDisplay_string, \"hoursDisplay\")                         \\\n              V(_, ideo_string, \"ideo\")                                         \\\n              V(_, ignorePunctuation_string, \"ignorePunctuation\")               \\\n              V(_, Invalid_Date_string, \"Invalid Date\")                         \\\n              V(_, integer_string, \"integer\")                                   \\\n              V(_, isWordLike_string, \"isWordLike\")                             \\\n              V(_, kana_string, \"kana\")                                         \\\n              V(_, language_string, \"language\")                                 \\\n              V(_, languageDisplay_string, \"languageDisplay\")                   \\\n              V(_, lessPrecision_string, \"lessPrecision\")                       \\\n              V(_, letter_string, \"letter\")                                     \\\n              V(_, list_string, \"list\")                                         \\\n              V(_, literal_string, \"literal\")                                   \\\n              V(_, locale_string, \"locale\")                                     \\\n              V(_, loose_string, \"loose\")                                       \\\n              V(_, lower_string, \"lower\")                                       \\\n              V(_, ltr_string, \"ltr\")                                           \\\n              V(_, maximumFractionDigits_string, \"maximumFractionDigits\")       \\\n              V(_, maximumSignificantDigits_string, \"maximumSignificantDigits\") \\\n              V(_, microsecondsDisplay_string, \"microsecondsDisplay\")           \\\n              V(_, millisecondsDisplay_string, \"millisecondsDisplay\")           \\\n              V(_, min2_string, \"min2\")                                         \\\n              V(_, minimalDays_string, \"minimalDays\")                           \\\n              V(_, minimumFractionDigits_string, \"minimumFractionDigits\")       \\\n              V(_, minimumIntegerDigits_string, \"minimumIntegerDigits\")         \\\n              V(_, minimumSignificantDigits_string, \"minimumSignificantDigits\") \\\n              V(_, minus_0, \"-0\")                                               \\\n              V(_, minusSign_string, \"minusSign\")                               \\\n              V(_, minutesDisplay_string, \"minutesDisplay\")                     \\\n              V(_, monthsDisplay_string, \"monthsDisplay\")                       \\\n              V(_, morePrecision_string, \"morePrecision\")                       \\\n              V(_, nan_string, \"nan\")                                           \\\n              V(_, nanosecondsDisplay_string, \"nanosecondsDisplay\")             \\\n              V(_, narrowSymbol_string, \"narrowSymbol\")                         \\\n              V(_, negative_string, \"negative\")                                 \\\n              V(_, never_string, \"never\")                                       \\\n              V(_, none_string, \"none\")                                         \\\n              V(_, notation_string, \"notation\")                                 \\\n              V(_, normal_string, \"normal\")                                     \\\n              V(_, numberingSystem_string, \"numberingSystem\")                   \\\n              V(_, numberingSystems_string, \"numberingSystems\")                 \\\n              V(_, numeric_string, \"numeric\")                                   \\\n              V(_, ordinal_string, \"ordinal\")                                   \\\n              V(_, percentSign_string, \"percentSign\")                           \\\n              V(_, plusSign_string, \"plusSign\")                                 \\\n              V(_, quarter_string, \"quarter\")                                   \\\n              V(_, region_string, \"region\")                                     \\\n              V(_, relatedYear_string, \"relatedYear\")                           \\\n              V(_, roundingMode_string, \"roundingMode\")                         \\\n              V(_, roundingPriority_string, \"roundingPriority\")                 \\\n              V(_, rtl_string, \"rtl\")                                           \\\n              V(_, scientific_string, \"scientific\")                             \\\n              V(_, secondsDisplay_string, \"secondsDisplay\")                     \\\n              V(_, segment_string, \"segment\")                                   \\\n              V(_, SegmentIterator_string, \"Segment Iterator\")                  \\\n              V(_, Segments_string, \"Segments\")                                 \\\n              V(_, sensitivity_string, \"sensitivity\")                           \\\n              V(_, sep_string, \"sep\")                                           \\\n              V(_, shared_string, \"shared\")                                     \\\n              V(_, signDisplay_string, \"signDisplay\")                           \\\n              V(_, standard_string, \"standard\")                                 \\\n              V(_, startRange_string, \"startRange\")                             \\\n              V(_, strict_string, \"strict\")                                     \\\n              V(_, stripIfInteger_string, \"stripIfInteger\")                     \\\n              V(_, style_string, \"style\")                                       \\\n              V(_, term_string, \"term\")                                         \\\n              V(_, textInfo_string, \"textInfo\")                                 \\\n              V(_, timeStyle_string, \"timeStyle\")                               \\\n              V(_, timeZones_string, \"timeZones\")                               \\\n              V(_, timeZoneName_string, \"timeZoneName\")                         \\\n              V(_, trailingZeroDisplay_string, \"trailingZeroDisplay\")           \\\n              V(_, trunc_string, \"trunc\")                                       \\\n              V(_, two_digit_string, \"2-digit\")                                 \\\n              V(_, type_string, \"type\")                                         \\\n              V(_, unknown_string, \"unknown\")                                   \\\n              V(_, upper_string, \"upper\")                                       \\\n              V(_, usage_string, \"usage\")                                       \\\n              V(_, useGrouping_string, \"useGrouping\")                           \\\n              V(_, unitDisplay_string, \"unitDisplay\")                           \\\n              V(_, weekday_string, \"weekday\")                                   \\\n              V(_, weekend_string, \"weekend\")                                   \\\n              V(_, weeksDisplay_string, \"weeksDisplay\")                         \\\n              V(_, weekInfo_string, \"weekInfo\")                                 \\\n              V(_, yearName_string, \"yearName\")                                 \\\n              V(_, yearsDisplay_string, \"yearsDisplay\")\n            #else  // V8_INTL_SUPPORT\n            #define INTERNALIZED_STRING_LIST_GENERATOR_INTL(V, _)\n            #endif  // V8_INTL_SUPPORT\n        ]]></code>\n    </imports>\n\n    <imports>\n        <metadata>\n        {\n            \"language\": \"cpp\",\n            \"purpose\": \"Defines macro for extra important internalized string to be allocated early on the read only heap and early in the roots table.\"\n        }\n        </metadata>\n        <code><![CDATA[\n            #define EXTRA_IMPORTANT_INTERNALIZED_STRING_LIST_GENERATOR(V, _) \\\n              V(_, empty_string, \"\")\n        ]]></code>\n    </imports>\n\n    <imports>\n        <metadata>\n        {\n            \"language\": \"cpp\",\n            \"purpose\": \"Defines a macro for important internalized strings to be allocated early on the read only heap.\"\n        }\n        </metadata>\n        <code><![CDATA[\n            #define IMPORTANT_INTERNALIZED_STRING_LIST_GENERATOR(V, _) \\\n              V(_, prototype_string, \"prototype\")                      \\\n              V(_, name_string, \"name\")                                \\\n              V(_, enumerable_string, \"enumerable\")                    \\\n              V(_, configurable_string, \"configurable\")                \\\n              V(_, value_string, \"value\")                              \\\n              V(_, writable_string, \"writable\")\n        ]]></code>\n    </imports>\n\n    <imports>\n        <metadata>\n        {\n            \"language\": \"cpp\",\n            \"purpose\": \"Defines a macro for single character ASCII internalized strings.\"\n        }\n        </metadata>\n        <code><![CDATA[\n            #define SINGLE_CHARACTER_ASCII_INTERNALIZED_STRING_LIST_GENERATOR(V_, _) \\\n              V_(_, ascii_nul_string, \"\\0\")                                          \\\n              V_(_, ascii_soh_string, \"\\x01\")                                        \\\n              V_(_, ascii_stx_string, \"\\x02\")                                        \\\n              V_(_, ascii_etx_string, \"\\x03\")                                        \\\n              V_(_, ascii_eot_string, \"\\x04\")                                        \\\n              V_(_, ascii_enq_string, \"\\x05\")                                        \\\n              V_(_, ascii_ack_string, \"\\x06\")                                        \\\n              V_(_, ascii_bel_string, \"\\a\")                                          \\\n              V_(_, ascii_bs_string, \"\\b\")                                           \\\n              V_(_, ascii_ht_string, \"\\t\")                                           \\\n              V_(_, ascii_lf_string, \"\\n\")                                           \\\n              V_(_, ascii_vt_string, \"\\v\")                                           \\\n              V_(_, ascii_ff_string, \"\\f\")                                           \\\n              V_(_, ascii_cr_string, \"\\r\")                                           \\\n              V_(_, ascii_so_string, \"\\x0e\")                                         \\\n              V_(_, ascii_si_string, \"\\x0f\")                                         \\\n              V_(_, ascii_dle_string, \"\\x10\")                                        \\\n              V_(_, ascii_dc1_string, \"\\x11\")                                        \\\n              V_(_, ascii_dc2_string, \"\\x12\")                                        \\\n              V_(_, ascii_dc3_string, \"\\x13\")                                        \\\n              V_(_, ascii_dc4_string, \"\\x14\")                                        \\\n              V_(_, ascii_nak_string, \"\\x15\")                                        \\\n              V_(_, ascii_syn_string, \"\\x16\")                                        \\\n              V_(_, ascii_etb_string, \"\\x17\")                                        \\\n              V_(_, ascii_can_string, \"\\x18\")                                        \\\n              V_(_, ascii_em_string, \"\\x19\")                                         \\\n              V_(_, ascii_sub_string, \"\\x1a\")                                        \\\n              V_(_, ascii_esc_string, \"\\x1b\")                                        \\\n              V_(_, ascii_fs_string, \"\\x1c\")                                         \\\n              V_(_, ascii_gs_string, \"\\x1d\")                                         \\\n              V_(_, ascii_rs_string, \"\\x1e\")                                         \\\n              V_(_, ascii_us_string, \"\\x1f\")                                         \\\n              V_(_, space_string, \" \")                                               \\\n              V_(_, exclamation_mark_string, \"!\")                                    \\\n              V_(_, double_quotes_string, \"\\\"\")                                      \\\n              V_(_, hash_string, \"#\")                                                \\\n              V_(_, dollar_string, \"$\")                                              \\\n              V_(_, percent_sign_string, \"%\")                                        \\\n              V_(_, ampersand_string, \"&\")                                           \\\n              V_(_, single_quote_string, \"\\'\")                                       \\\n              V_(_, open_parenthesis_string, \"(\")                                    \\\n              V_(_, close_parenthesis_string, \")\")                                   \\\n              V_(_, asterisk_string, \"*\")                                            \\\n              V_(_, plus_string, \"+\")                                                \\\n              V_(_, comma_string, \",\")                                               \\\n              V_(_, minus_string, \"-\")                                               \\\n              V_(_, dot_string, \".\")                                                 \\\n              V_(_, slash_string, \"/\")                                               \\\n              V_(_, zero_string, \"0\")                                                \\\n              V_(_, one_string, \"1\")                                                 \\\n              V_(_, two_string, \"2\")                                                 \\\n              V_(_, three_string, \"3\")                                               \\\n              V_(_, four_string, \"4\")                                                \\\n              V_(_, five_string, \"5\")                                                \\\n              V_(_, six_string, \"6\")                                                 \\\n              V_(_, seven_string, \"7\")                                               \\\n              V_(_, eight_string, \"8\")                                               \\\n              V_(_, nine_string, \"9\")                                                \\\n              V_(_, colon_string, \":\")                                               \\\n              V_(_, semicolon_string, \";\")                                           \\\n              V_(_, less_than_string, \"<\")                                           \\\n              V_(_, equals_string, \"=\")                                              \\\n              V_(_, greater_than_string, \">\")                                        \\\n              V_(_, question_mark_string, \"?\")                                       \\\n              V_(_, at_sign_string, \"@\")                                             \\\n              V_(_, A_string, \"A\")                                                   \\\n              V_(_, B_string, \"B\")                                                   \\\n              V_(_, C_string, \"C\")                                                   \\\n              V_(_, D_string, \"D\")                                                   \\\n              V_(_, E_string, \"E\")                                                   \\\n              V_(_, F_string, \"F\")                                                   \\\n              V_(_, G_string, \"G\")                                                   \\\n              V_(_, H_string, \"H\")                                                   \\\n              V_(_, I_string, \"I\")                                                   \\\n              V_(_, J_string, \"J\")                                                   \\\n              V_(_, K_string, \"K\")                                                   \\\n              V_(_, L_string, \"L\")                                                   \\\n              V_(_, M_string, \"M\")                                                   \\\n              V_(_, N_string, \"N\")                                                   \\\n              V_(_, O_string, \"O\")                                                   \\\n              V_(_, P_string, \"P\")                                                   \\\n              V_(_, Q_string, \"Q\")                                                   \\\n              V_(_, R_string, \"R\")                                                   \\\n              V_(_, S_string, \"S\")                                                   \\\n              V_(_, T_string, \"T\")                                                   \\\n              V_(_, U_string, \"U\")                                                   \\\n              V_(_, V_string, \"V\")                                                   \\\n              V_(_, W_string, \"W\")                                                   \\\n              V_(_, X_string, \"X\")                                                   \\\n              V_(_, Y_string, \"Y\")                                                   \\\n              V_(_, Z_string, \"Z\")                                                   \\\n              V_(_, open_bracket_string, \"[\")                                        \\\n              V_(_, backslash_string, \"\\\\\")                                          \\\n              V_(_, close_bracket_string, \"]\")                                       \\\n              V_(_, caret_string, \"^\")                                               \\\n              V_(_, underscore_string, \"_\")                                          \\\n              V_(_, backtick_string, \"`\")                                            \\\n              V_(_, a_string, \"a\")                                                   \\\n              V_(_, b_string, \"b\")                                                   \\\n              V_(_, c_string, \"c\")                                                   \\\n              V_(_, d_string, \"d\")                                                   \\\n              V_(_, e_string, \"e\")                                                   \\\n              V_(_, f_string, \"f\")                                                   \\\n              V_(_, g_string, \"g\")                                                   \\\n              V_(_, h_string, \"h\")                                                   \\\n              V_(_, i_string, \"i\")                                                   \\\n              V_(_, j_string, \"j\")                                                   \\\n              V_(_, k_string, \"k\")                                                   \\\n              V_(_, l_string, \"l\")                                                   \\\n              V_(_, m_string, \"m\")                                                   \\\n              V_(_, n_string, \"n\")                                                   \\\n              V_(_, o_string, \"o\")                                                   \\\n              V_(_, p_string, \"p\")                                                   \\\n              V_(_, q_string, \"q\")                                                   \\\n              V_(_, r_string, \"r\")                                                   \\\n              V_(_, s_string, \"s\")                                                   \\\n              V_(_, t_string, \"t\")                                                   \\\n              V_(_, u_string, \"u\")                                                   \\\n              V_(_, v_string, \"v\")                                                   \\\n              V_(_, w_string, \"w\")                                                   \\\n              V_(_, x_string, \"x\")                                                   \\\n              V_(_, y_string, \"y\")                                                   \\\n              V_(_, z_string, \"z\")                                                   \\\n              V_(_, open_brace_string, \"{\")                                          \\\n              V_(_, pipe_string, \"|\")                                                \\\n              V_(_, close_brace_string, \"}\")                                         \\\n              V_(_, tilde_string, \"~\")                                               \\\n              V_(_, ascii_del_string, \"\\x7f\")\n        ]]></code>\n    </imports>\n\n    <imports>\n        <metadata>\n        {\n            \"language\": \"cpp\",\n            \"purpose\": \"Defines macro for single character internalized strings, including ASCII and Latin-1 characters.\"\n        }\n        </metadata>\n        <code><![CDATA[\n            #define SINGLE_CHARACTER_INTERNALIZED_STRING_LIST_GENERATOR(V_, _) \\\n              SINGLE_CHARACTER_ASCII_INTERNALIZED_STRING_LIST_GENERATOR(V_, _) \\\n              V_(_, latin1_80_string, \"\\x80\")                                  \\\n              V_(_, latin1_81_string, \"\\x81\")                                  \\\n              V_(_, latin1_82_string, \"\\x82\")                                  \\\n              V_(_, latin1_83_string, \"\\x83\")                                  \\\n              V_(_, latin1_84_string, \"\\x84\")                                  \\\n              V_(_, latin1_85_string, \"\\x85\")                                  \\\n              V_(_, latin1_86_string, \"\\x86\")                                  \\\n              V_(_, latin1_87_string, \"\\x87\")                                  \\\n              V_(_, latin1_88_string, \"\\x88\")                                  \\\n              V_(_, latin1_89_string, \"\\x89\")                                  \\\n              V_(_, latin1_8a_string, \"\\x8a\")                                  \\\n              V_(_, latin1_8b_string, \"\\x8b\")                                  \\\n              V_(_, latin1_8c_string, \"\\x8c\")                                  \\\n              V_(_, latin1_8d_string, \"\\x8d\")                                  \\\n              V_(_, latin1_8e_string, \"\\x8e\")                                  \\\n              V_(_, latin1_8f_string, \"\\x8f\")                                  \\\n              V_(_, latin1_90_string, \"\\x90\")                                  \\\n              V_(_, latin1_91_string, \"\\x91\")                                  \\\n              V_(_, latin1_92_string, \"\\x92\")                                  \\\n              V_(_, latin1_93_string, \"\\x93\")                                  \\\n              V_(_, latin1_94_string, \"\\x94\")                                  \\\n              V_(_, latin1_95_string, \"\\x95\")                                  \\\n              V_(_, latin1_96_string, \"\\x96\")                                  \\\n              V_(_, latin1_97_string, \"\\x97\")                                  \\\n              V_(_, latin1_98_string, \"\\x98\")                                  \\\n              V_(_, latin1_99_string, \"\\x99\")                                  \\\n              V_(_, latin1_9a_string, \"\\x9a\")                                  \\\n              V_(_, latin1_9b_string, \"\\x9b\")                                  \\\n              V_(_, latin1_9c_string, \"\\x9c\")                                  \\\n              V_(_, latin1_9d_string, \"\\x9d\")                                  \\\n              V_(_, latin1_9e_string, \"\\x9e\")                                  \\\n              V_(_, latin1_9f_string, \"\\x9f\")                                  \\\n              V_(_, latin1_a0_string, \"\\xa0\")                                  \\\n              V_(_, latin1_a1_string, \"\\xa1\")                                  \\\n              V_(_, latin1_a2_string, \"\\xa2\")                                  \\\n              V_(_, latin1_a3_string, \"\\xa3\")                                  \\\n              V_(_, latin1_a4_string, \"\\xa4\")                                  \\\n              V_(_, latin1_a5_string, \"\\xa5\")                                  \\\n              V_(_, latin1_a6_string, \"\\xa6\")                                  \\\n              V_(_, latin1_a7_string, \"\\xa7\")                                  \\\n              V_(_, latin1_a8_string, \"\\xa8\")                                  \\\n              V_(_, latin1_a9_string, \"\\xa9\")                                  \\\n              V_(_, latin1_aa_string, \"\\xaa\")                                  \\\n              V_(_, latin1_ab_string, \"\\xab\")                                  \\\n              V_(_, latin1_ac_string, \"\\xac\")                                  \\\n              V_(_, latin1_ad_string, \"\\xad\")                                  \\\n              V_(_, latin1_ae_string, \"\\xae\")                                  \\\n              V_(_, latin1_af_string, \"\\xaf\")                                  \\\n              V_(_, latin1_b0_string, \"\\xb0\")                                  \\\n              V_(_, latin1_b1_string, \"\\xb1\")                                  \\\n              V_(_, latin1_b2_string, \"\\xb2\")                                  \\\n              V_(_, latin1_b3_string, \"\\xb3\")                                  \\\n              V_(_, latin1_b4_string, \"\\xb4\")                                  \\\n              V_(_, latin1_b5_string, \"\\xb5\")                                  \\\n              V_(_, latin1_b6_string, \"\\xb6\")                                  \\\n              V_(_, latin1_b7_string, \"\\xb7\")                                  \\\n              V_(_, latin1_b8_string, \"\\xb8\")                                  \\\n              V_(_, latin1_b9_string, \"\\xb9\")                                  \\\n              V_(_, latin1_ba_string, \"\\xba\")                                  \\\n              V_(_, latin1_bb_string, \"\\xbb\")                                  \\\n              V_(_, latin1_bc_string, \"\\xbc\")                                  \\\n              V_(_, latin1_bd_string, \"\\xbd\")                                  \\\n              V_(_, latin1_be_string, \"\\xbe\")                                  \\\n              V_(_, latin1_bf_string, \"\\xbf\")                                  \\\n              V_(_, latin1_c0_string, \"\\xc0\")                                  \\\n              V_(_, latin1_c1_string, \"\\xc1\")                                  \\\n              V_(_, latin1_c2_string, \"\\xc2\")                                  \\\n              V_(_, latin1_c3_string, \"\\xc3\")                                  \\\n              V_(_, latin1_c4_string, \"\\xc4\")                                  \\\n              V_(_, latin1_c5_string, \"\\xc5\")                                  \\\n              V_(_, latin1_c6_string, \"\\xc6\")                                  \\\n              V_(_, latin1_c7_string, \"\\xc7\")                                  \\\n              V_(_, latin1_c8_string, \"\\xc8\")                                  \\\n              V_(_, latin1_c9_string, \"\\xc9\")                                  \\\n              V_(_, latin1_ca_string, \"\\xca\")                                  \\\n              V_(_, latin1_cb_string, \"\\xcb\")                                  \\\n              V_(_, latin1_cc_string, \"\\xcc\")                                  \\\n              V_(_, latin1_cd_string, \"\\xcd\")                                  \\\n              V_(_, latin1_ce_string, \"\\xce\")                                  \\\n              V_(_, latin1_cf_string, \"\\xcf\")                                  \\\n              V_(_, latin1_d0_string, \"\\xd0\")                                  \\\n              V_(_, latin1_d1_string, \"\\xd1\")                                  \\\n              V_(_, latin1_d2_string, \"\\xd2\")                                  \\\n              V_(_, latin1_d3_string, \"\\xd3\")                                  \\\n              V_(_, latin1_d4_string, \"\\xd4\")                                  \\\n              V_(_, latin1_d5_string, \"\\xd5\")                                  \\\n              V_(_, latin1_d6_string, \"\\xd6\")                                  \\\n              V_(_, latin1_d7_string, \"\\xd7\")                                  \\\n              V_(_, latin1_d8_string, \"\\xd8\")                                  \\\n              V_(_, latin1_d9_string, \"\\xd9\")                                  \\\n              V_(_, latin1_da_string, \"\\xda\")                                  \\\n              V_(_, latin1_db_string, \"\\xdb\")                                  \\\n              V_(_, latin1_dc_string, \"\\xdc\")                                  \\\n              V_(_, latin1_dd_string, \"\\xdd\")                                  \\\n              V_(_, latin1_de_string, \"\\xde\")                                  \\\n              V_(_, latin1_df_string, \"\\xdf\")                                  \\\n              V_(_, latin1_e0_string, \"\\xe0\")                                  \\\n              V_(_, latin1_e1_string, \"\\xe1\")                                  \\\n              V_(_, latin1_e2_string, \"\\xe2\")                                  \\\n              V_(_, latin1_e3_string, \"\\xe3\")                                  \\\n              V_(_, latin1_e4_string, \"\\xe4\")                                  \\\n              V_(_, latin1_e5_string, \"\\xe5\")                                  \\\n              V_(_, latin1_e6_string, \"\\xe6\")                                  \\\n              V_(_, latin1_e7_string, \"\\xe7\")                                  \\\n              V_(_, latin1_e8_string, \"\\xe8\")                                  \\\n              V_(_, latin1_e9_string, \"\\xe9\")                                  \\\n              V_(_, latin1_ea_string, \"\\xea\")                                  \\\n              V_(_, latin1_eb_string, \"\\xeb\")                                  \\\n              V_(_, latin1_ec_string, \"\\xec\")                                  \\\n              V_(_, latin1_ed_string, \"\\xed\")                                  \\\n              V_(_, latin1_ee_string, \"\\xee\")                                  \\\n              V_(_, latin1_ef_string, \"\\xef\")                                  \\\n              V_(_, latin1_f0_string, \"\\xf0\")                                  \\\n              V_(_, latin1_f1_string, \"\\xf1\")                                  \\\n              V_(_, latin1_f2_string, \"\\xf2\")                                  \\\n              V_(_, latin1_f3_string, \"\\xf3\")                                  \\\n              V_(_, latin1_f4_string, \"\\xf4\")                                  \\\n              V_(_, latin1_f5_string, \"\\xf5\")                                  \\\n              V_(_, latin1_f6_string, \"\\xf6\")                                  \\\n              V_(_, latin1_f7_string, \"\\xf7\")                                  \\\n              V_(_, latin1_f8_string, \"\\xf8\")                                  \\\n              V_(_, latin1_f9_string, \"\\xf9\")                                  \\\n              V_(_, latin1_fa_string, \"\\xfa\")                                  \\\n              V_(_, latin1_fb_string, \"\\xfb\")                                  \\\n              V_(_, latin1_fc_string, \"\\xfc\")                                  \\\n              V_(_, latin1_fd_string, \"\\xfd\")                                  \\\n              V_(_, latin1_fe_string, \"\\xfe\")                                  \\\n              V_(_, latin1_ff_string, \"\\xff\")\n        ]]></code>\n    </imports>\n\n    <imports>\n        <metadata>\n        {\n            \"language\": \"cpp\",\n            \"purpose\": \"Defines a macro that combines different categories of internalized strings (INTL, single character, and other specific strings).  These are considered 'not important', likely indicating they are used less frequently or are not as critical for initial heap setup.\"\n        }\n        </metadata>\n        <code><![CDATA[\n            #define NOT_IMPORTANT_INTERNALIZED_STRING_LIST_GENERATOR(V, _)                \\\n              INTERNALIZED_STRING_LIST_GENERATOR_INTL(V, _)                               \\\n              SINGLE_CHARACTER_INTERNALIZED_STRING_LIST_GENERATOR(V, _)                   \\\n              V(_, add_string, \"add\")                                                     \\\n              V(_, AggregateError_string, \"AggregateError\")                               \\\n              V(_, alphabet_string, \"alphabet\")                                           \\\n              V(_, always_string, \"always\")                                               \\\n              V(_, anonymous_string, \"anonymous\")                                         \\\n              V(_, apply_string, \"apply\")                                                 \\\n              V(_, Arguments_string, \"Arguments\")                                         \\\n              V(_, arguments_string, \"arguments\")                                         \\\n              V(_, arguments_to_string, \"[object Arguments]\")                             \\\n              V(_, Array_string, \"Array\")                                                 \\\n              V(_, array_to_string, \"[object Array]\")                                     \\\n              V(_, ArrayBuffer_string, \"ArrayBuffer\")                                     \\\n              V(_, ArrayIterator_string, \"Array Iterator\")                                \\\n              V(_, as_string, \"as\")                                                       \\\n              V(_, assert_string, \"assert\")                                               \\\n              V(_, async_string, \"async\")                                                 \\\n              V(_, AtomicsCondition_string, \"Atomics.Condition\")                          \\\n              V(_, AtomicsMutex_string, \"Atomics.Mutex\")                                  \\\n              V(_, auto_string, \"auto\")                                                   \\\n              V(_, BigInt_string, \"BigInt\")                                               \\\n              V(_, bigint_string, \"bigint\")                                               \\\n              V(_, BigInt64Array_string, \"BigInt64Array\")                                 \\\n              V(_, BigUint64Array_string, \"BigUint64Array\")                               \\\n              V(_, bind_string, \"bind\")                                                   \\\n              V(_, blank_string, \"blank\")                                                 \\\n              V(_, Boolean_string, \"Boolean\")                                             \\\n              V(_, boolean_string, \"boolean\")                                             \\\n              V(_, boolean_to_string, \"[object Boolean]\")                                 \\\n              V(_, bound__string, \"bound \")                                               \\\n              V(_, buffer_string, \"buffer\")                                               \\\n              V(_, byte_length_string, \"byteLength\")                                      \\\n              "
}