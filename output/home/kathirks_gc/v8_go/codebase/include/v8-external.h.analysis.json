{
  "file_path": "/home/kathirks_gc/v8_go/codebase/include/v8-external.h",
  "imports": [
    "v8-value.h",
    "v8config.h"
  ],
  "classes": [
    {
      "name": "External",
      "properties": [],
      "methods": [
        {
          "name": "New",
          "parameters": [
            "Isolate* isolate",
            "void* value"
          ],
          "return_type": "Local<External>",
          "logic": "Creates a new External object that wraps the given C++ void* value and associates it with the given isolate."
        },
        {
          "name": "Cast",
          "parameters": [
            "Value* value"
          ],
          "return_type": "External*",
          "logic": "Casts a v8::Value* to an External*. Performs a type check in debug mode (if V8_ENABLE_CHECKS is defined) before the cast.  Returns a pointer to the casted External object."
        },
        {
          "name": "Value",
          "parameters": [],
          "return_type": "void*",
          "logic": "Returns the underlying C++ void* value wrapped by this External object."
        },
        {
          "name": "CheckCast",
          "parameters": [
            "v8::Value* obj"
          ],
          "return_type": "void",
          "logic": "This method is responsible for checking if a given `v8::Value` is actually an `External` object.  It likely throws an exception or asserts if the cast is invalid. This is only enabled when `V8_ENABLE_CHECKS` is defined."
        }
      ]
    }
  ],
  "functions": []
}