{
  "file_path": "/home/kathirks_gc/v8_go/codebase/include/v8-container.h",
  "imports": [
    "<stddef.h>",
    "<stdint.h>",
    "<functional>",
    "v8-local-handle.h",
    "v8-object.h",
    "v8config.h"
  ],
  "classes": [
    {
      "name": "Array",
      "properties": [],
      "methods": [
        {
          "name": "Length",
          "parameters": [],
          "return_type": "uint32_t",
          "logic": "Returns the length of the JavaScript array."
        },
        {
          "name": "New",
          "parameters": [
            "Isolate* isolate",
            "int length = 0"
          ],
          "return_type": "Local<Array>",
          "logic": "Creates a new JavaScript array with the specified length. If the length is negative, the returned array will have length 0."
        },
        {
          "name": "New",
          "parameters": [
            "Isolate* isolate",
            "Local<Value>* elements",
            "size_t length"
          ],
          "return_type": "Local<Array>",
          "logic": "Creates a JavaScript array from a C++ array of Local<Value> objects with a known length."
        },
        {
          "name": "Cast",
          "parameters": [
            "Value* value"
          ],
          "return_type": "Array*",
          "logic": "Casts a Value* to an Array*.  Performs a check in debug mode."
        },
        {
          "name": "New",
          "parameters": [
            "Local<Context> context",
            "size_t length",
            "std::function<MaybeLocal<v8::Value>()> next_value_callback"
          ],
          "return_type": "MaybeLocal<Array>",
          "logic": "Creates a JavaScript array by calling a callback to retrieve elements."
        },
        {
          "name": "Iterate",
          "parameters": [
            "Local<Context> context",
            "IterationCallback callback",
            "void* callback_data"
          ],
          "return_type": "Maybe<void>",
          "logic": "Iterates over each element of the array and calls the provided callback function.  Optimized for low overhead, with restrictions on the callback."
        }
      ]
    },
    {
      "name": "Map",
      "properties": [],
      "methods": [
        {
          "name": "Size",
          "parameters": [],
          "return_type": "size_t",
          "logic": "Returns the number of elements in the Map."
        },
        {
          "name": "Clear",
          "parameters": [],
          "return_type": "void",
          "logic": "Removes all elements from the Map."
        },
        {
          "name": "Get",
          "parameters": [
            "Local<Context> context",
            "Local<Value> key"
          ],
          "return_type": "MaybeLocal<Value>",
          "logic": "Retrieves the value associated with the given key from the Map."
        },
        {
          "name": "Set",
          "parameters": [
            "Local<Context> context",
            "Local<Value> key",
            "Local<Value> value"
          ],
          "return_type": "MaybeLocal<Map>",
          "logic": "Sets the value associated with the given key in the Map."
        },
        {
          "name": "Has",
          "parameters": [
            "Local<Context> context",
            "Local<Value> key"
          ],
          "return_type": "Maybe<bool>",
          "logic": "Checks if the Map contains the given key."
        },
        {
          "name": "Delete",
          "parameters": [
            "Local<Context> context",
            "Local<Value> key"
          ],
          "return_type": "Maybe<bool>",
          "logic": "Deletes the element with the given key from the Map."
        },
        {
          "name": "AsArray",
          "parameters": [],
          "return_type": "Local<Array>",
          "logic": "Returns an array representation of the Map, where each key-value pair becomes two consecutive array elements."
        },
        {
          "name": "New",
          "parameters": [
            "Isolate* isolate"
          ],
          "return_type": "Local<Map>",
          "logic": "Creates a new empty Map."
        },
        {
          "name": "Cast",
          "parameters": [
            "Value* value"
          ],
          "return_type": "Map*",
          "logic": "Casts a Value* to a Map*.  Performs a check in debug mode."
        }
      ]
    },
    {
      "name": "Set",
      "properties": [],
      "methods": [
        {
          "name": "Size",
          "parameters": [],
          "return_type": "size_t",
          "logic": "Returns the number of elements in the Set."
        },
        {
          "name": "Clear",
          "parameters": [],
          "return_type": "void",
          "logic": "Removes all elements from the Set."
        },
        {
          "name": "Add",
          "parameters": [
            "Local<Context> context",
            "Local<Value> key"
          ],
          "return_type": "MaybeLocal<Set>",
          "logic": "Adds a key to the Set."
        },
        {
          "name": "Has",
          "parameters": [
            "Local<Context> context",
            "Local<Value> key"
          ],
          "return_type": "Maybe<bool>",
          "logic": "Checks if the Set contains the given key."
        },
        {
          "name": "Delete",
          "parameters": [
            "Local<Context> context",
            "Local<Value> key"
          ],
          "return_type": "Maybe<bool>",
          "logic": "Deletes the element with the given key from the Set."
        },
        {
          "name": "AsArray",
          "parameters": [],
          "return_type": "Local<Array>",
          "logic": "Returns an array representation of the Set, containing all keys in the Set."
        },
        {
          "name": "New",
          "parameters": [
            "Isolate* isolate"
          ],
          "return_type": "Local<Set>",
          "logic": "Creates a new empty Set."
        },
        {
          "name": "Cast",
          "parameters": [
            "Value* value"
          ],
          "return_type": "Set*",
          "logic": "Casts a Value* to a Set*.  Performs a check in debug mode."
        }
      ]
    }
  ],
  "functions": []
}