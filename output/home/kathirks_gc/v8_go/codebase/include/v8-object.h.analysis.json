{
  "file_path": "/home/kathirks_gc/v8_go/codebase/include/v8-object.h",
  "error": "JSON parsing error",
  "raw_response": "```json\n{\n  \"file_path\": \"/home/kathirks_gc/v8_go/codebase/include/v8-object.h\",\n  \"imports\": [\n    \"v8-internal.h\",\n    \"v8-local-handle.h\",\n    \"v8-maybe.h\",\n    \"v8-persistent-handle.h\",\n    \"v8-primitive.h\",\n    \"v8-sandbox.h\",\n    \"v8-traced-handle.h\",\n    \"v8-value.h\",\n    \"v8config.h\"\n  ],\n  \"classes\": [\n    {\n      \"name\": \"Private\",\n      \"properties\": [],\n      \"methods\": [\n        {\n          \"name\": \"Name\",\n          \"parameters\": [],\n          \"return_type\": \"Local<Value>\",\n          \"logic\": \"Returns the print name string of the private symbol, or undefined if none.\"\n        },\n        {\n          \"name\": \"New\",\n          \"parameters\": [\n            \"Isolate* isolate\",\n            \"Local<String> name\"\n          ],\n          \"return_type\": \"Local<Private>\",\n          \"logic\": \"Create a private symbol. If name is not empty, it will be the description.\"\n        },\n        {\n          \"name\": \"ForApi\",\n          \"parameters\": [\n            \"Isolate* isolate\",\n            \"Local<String> name\"\n          ],\n          \"return_type\": \"Local<Private>\",\n          \"logic\": \"Retrieve a global private symbol. If a symbol with this name has not been retrieved in the same isolate before, it is created.\"\n        },\n        {\n          \"name\": \"Cast\",\n          \"parameters\": [\n            \"Data* data\"\n          ],\n          \"return_type\": \"Private*\",\n          \"logic\": \"Casts a Data* to a Private*.\"\n        },\n        {\n          \"name\": \"Private\",\n          \"parameters\": [],\n          \"return_type\": \"void\",\n          \"logic\": \"Private constructor (no public access).\"\n        },\n        {\n          \"name\": \"CheckCast\",\n          \"parameters\": [\n            \"Data* that\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Performs a check to ensure that the Data* is of the correct type before casting.\"\n        }\n      ]\n    },\n    {\n      \"name\": \"PropertyDescriptor\",\n      \"properties\": [],\n      \"methods\": [\n        {\n          \"name\": \"PropertyDescriptor\",\n          \"parameters\": [],\n          \"return_type\": \"void\",\n          \"logic\": \"GenericDescriptor - default constructor.\"\n        },\n        {\n          \"name\": \"PropertyDescriptor\",\n          \"parameters\": [\n            \"Local<Value> value\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"DataDescriptor constructor.\"\n        },\n        {\n          \"name\": \"PropertyDescriptor\",\n          \"parameters\": [\n            \"Local<Value> value\",\n            \"bool writable\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"DataDescriptor with writable property constructor.\"\n        },\n        {\n          \"name\": \"PropertyDescriptor\",\n          \"parameters\": [\n            \"Local<Value> get\",\n            \"Local<Value> set\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"AccessorDescriptor constructor.\"\n        },\n        {\n          \"name\": \"~PropertyDescriptor\",\n          \"parameters\": [],\n          \"return_type\": \"void\",\n          \"logic\": \"Destructor.\"\n        },\n        {\n          \"name\": \"value\",\n          \"parameters\": [],\n          \"return_type\": \"Local<Value>\",\n          \"logic\": \"Returns the value.\"\n        },\n        {\n          \"name\": \"has_value\",\n          \"parameters\": [],\n          \"return_type\": \"bool\",\n          \"logic\": \"Returns true if the value is present.\"\n        },\n        {\n          \"name\": \"get\",\n          \"parameters\": [],\n          \"return_type\": \"Local<Value>\",\n          \"logic\": \"Returns the getter.\"\n        },\n        {\n          \"name\": \"has_get\",\n          \"parameters\": [],\n          \"return_type\": \"bool\",\n          \"logic\": \"Returns true if the getter is present.\"\n        },\n        {\n          \"name\": \"set\",\n          \"parameters\": [],\n          \"return_type\": \"Local<Value>\",\n          \"logic\": \"Returns the setter.\"\n        },\n        {\n          \"name\": \"has_set\",\n          \"parameters\": [],\n          \"return_type\": \"bool\",\n          \"logic\": \"Returns true if the setter is present.\"\n        },\n        {\n          \"name\": \"set_enumerable\",\n          \"parameters\": [\n            \"bool enumerable\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Sets the enumerable flag.\"\n        },\n        {\n          \"name\": \"enumerable\",\n          \"parameters\": [],\n          \"return_type\": \"bool\",\n          \"logic\": \"Returns the enumerable flag.\"\n        },\n        {\n          \"name\": \"has_enumerable\",\n          \"parameters\": [],\n          \"return_type\": \"bool\",\n          \"logic\": \"Returns true if the enumerable flag is present.\"\n        },\n        {\n          \"name\": \"set_configurable\",\n          \"parameters\": [\n            \"bool configurable\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Sets the configurable flag.\"\n        },\n        {\n          \"name\": \"configurable\",\n          \"parameters\": [],\n          \"return_type\": \"bool\",\n          \"logic\": \"Returns the configurable flag.\"\n        },\n        {\n          \"name\": \"has_configurable\",\n          \"parameters\": [],\n          \"return_type\": \"bool\",\n          \"logic\": \"Returns true if the configurable flag is present.\"\n        },\n        {\n          \"name\": \"writable\",\n          \"parameters\": [],\n          \"return_type\": \"bool\",\n          \"logic\": \"Returns the writable flag.\"\n        },\n        {\n          \"name\": \"has_writable\",\n          \"parameters\": [],\n          \"return_type\": \"bool\",\n          \"logic\": \"Returns true if the writable flag is present.\"\n        },\n        {\n          \"name\": \"get_private\",\n          \"parameters\": [],\n          \"return_type\": \"PropertyDescriptor::PrivateData*\",\n          \"logic\": \"Returns the private data pointer.\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Object\",\n      \"properties\": [],\n      \"methods\": [\n        {\n          \"name\": \"Set\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"Local<Value> key\",\n            \"Local<Value> value\"\n          ],\n          \"return_type\": \"Maybe<bool>\",\n          \"logic\": \"Sets a property on the object.\"\n        },\n        {\n          \"name\": \"Set\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"Local<Value> key\",\n            \"Local<Value> value\",\n            \"MaybeLocal<Object> receiver\"\n          ],\n          \"return_type\": \"Maybe<bool>\",\n          \"logic\": \"Sets a property on the object with a receiver.\"\n        },\n        {\n          \"name\": \"Set\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"uint32_t index\",\n            \"Local<Value> value\"\n          ],\n          \"return_type\": \"Maybe<bool>\",\n          \"logic\": \"Sets an indexed property on the object.\"\n        },\n        {\n          \"name\": \"CreateDataProperty\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"Local<Name> key\",\n            \"Local<Value> value\"\n          ],\n          \"return_type\": \"Maybe<bool>\",\n          \"logic\": \"Defines a configurable, writable, enumerable property with the given value on the object unless the property already exists and is not configurable or the object is not extensible.\"\n        },\n        {\n          \"name\": \"CreateDataProperty\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"uint32_t index\",\n            \"Local<Value> value\"\n          ],\n          \"return_type\": \"Maybe<bool>\",\n          \"logic\": \"Defines a configurable, writable, enumerable indexed property with the given value on the object unless the property already exists and is not configurable or the object is not extensible.\"\n        },\n        {\n          \"name\": \"DefineOwnProperty\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"Local<Name> key\",\n            \"Local<Value> value\",\n            \"PropertyAttribute attributes\"\n          ],\n          \"return_type\": \"Maybe<bool>\",\n          \"logic\": \"Defines a property with the given attributes.\"\n        },\n        {\n          \"name\": \"DefineProperty\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"Local<Name> key\",\n            \"PropertyDescriptor& descriptor\"\n          ],\n          \"return_type\": \"Maybe<bool>\",\n          \"logic\": \"Defines a property using a property descriptor.\"\n        },\n        {\n          \"name\": \"Get\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"Local<Value> key\"\n          ],\n          \"return_type\": \"MaybeLocal<Value>\",\n          \"logic\": \"Gets a property from the object.\"\n        },\n        {\n          \"name\": \"Get\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"Local<Value> key\",\n            \"MaybeLocal<Object> receiver\"\n          ],\n          \"return_type\": \"MaybeLocal<Value>\",\n          \"logic\": \"Gets a property from the object with a receiver.\"\n        },\n        {\n          \"name\": \"Get\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"uint32_t index\"\n          ],\n          \"return_type\": \"MaybeLocal<Value>\",\n          \"logic\": \"Gets an indexed property from the object.\"\n        },\n        {\n          \"name\": \"GetPropertyAttributes\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"Local<Value> key\"\n          ],\n          \"return_type\": \"Maybe<PropertyAttribute>\",\n          \"logic\": \"Gets the property attributes of a property.\"\n        },\n        {\n          \"name\": \"GetOwnPropertyDescriptor\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"Local<Name> key\"\n          ],\n          \"return_type\": \"MaybeLocal<Value>\",\n          \"logic\": \"Gets the own property descriptor of a property.\"\n        },\n        {\n          \"name\": \"Has\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"Local<Value> key\"\n          ],\n          \"return_type\": \"Maybe<bool>\",\n          \"logic\": \"Checks if the object has a property.\"\n        },\n        {\n          \"name\": \"Delete\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"Local<Value> key\"\n          ],\n          \"return_type\": \"Maybe<bool>\",\n          \"logic\": \"Deletes a property from the object.\"\n        },\n        {\n          \"name\": \"Has\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"uint32_t index\"\n          ],\n          \"return_type\": \"Maybe<bool>\",\n          \"logic\": \"Checks if the object has an indexed property.\"\n        },\n        {\n          \"name\": \"Delete\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"uint32_t index\"\n          ],\n          \"return_type\": \"Maybe<bool>\",\n          \"logic\": \"Deletes an indexed property from the object.\"\n        },\n        {\n          \"name\": \"SetAccessorProperty\",\n          \"parameters\": [\n            \"Local<Name> name\",\n            \"Local<Function> getter\",\n            \"Local<Function> setter\",\n            \"PropertyAttribute attributes\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Sets an accessor property.\"\n        },\n        {\n          \"name\": \"SetNativeDataProperty\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"Local<Name> name\",\n            \"AccessorNameGetterCallback getter\",\n            \"AccessorNameSetterCallback setter\",\n            \"Local<Value> data\",\n            \"PropertyAttribute attributes\",\n            \"SideEffectType getter_side_effect_type\",\n            \"SideEffectType setter_side_effect_type\"\n          ],\n          \"return_type\": \"Maybe<bool>\",\n          \"logic\": \"Sets a native data property.\"\n        },\n        {\n          \"name\": \"SetLazyDataProperty\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"Local<Name> name\",\n            \"AccessorNameGetterCallback getter\",\n            \"Local<Value> data\",\n            \"PropertyAttribute attributes\",\n            \"SideEffectType getter_side_effect_type\",\n            \"SideEffectType setter_side_effect_type\"\n          ],\n          \"return_type\": \"Maybe<bool>\",\n          \"logic\": \"Sets a lazy data property.\"\n        },\n        {\n          \"name\": \"HasPrivate\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"Local<Private> key\"\n          ],\n          \"return_type\": \"Maybe<bool>\",\n          \"logic\": \"Checks if the object has a private property.\"\n        },\n        {\n          \"name\": \"SetPrivate\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"Local<Private> key\",\n            \"Local<Value> value\"\n          ],\n          \"return_type\": \"Maybe<bool>\",\n          \"logic\": \"Sets a private property on the object.\"\n        },\n        {\n          \"name\": \"DeletePrivate\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"Local<Private> key\"\n          ],\n          \"return_type\": \"Maybe<bool>\",\n          \"logic\": \"Deletes a private property from the object.\"\n        },\n        {\n          \"name\": \"GetPrivate\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"Local<Private> key\"\n          ],\n          \"return_type\": \"MaybeLocal<Value>\",\n          \"logic\": \"Gets a private property from the object.\"\n        },\n        {\n          \"name\": \"GetPropertyNames\",\n          \"parameters\": [\n            \"Local<Context> context\"\n          ],\n          \"return_type\": \"MaybeLocal<Array>\",\n          \"logic\": \"Returns an array containing the names of the enumerable properties of this object, including properties from prototype objects.\"\n        },\n        {\n          \"name\": \"GetPropertyNames\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"KeyCollectionMode mode\",\n            \"PropertyFilter property_filter\",\n            \"IndexFilter index_filter\",\n            \"KeyConversionMode key_conversion\"\n          ],\n          \"return_type\": \"MaybeLocal<Array>\",\n          \"logic\": \"Returns an array containing the names of the properties, filtered by the specified criteria.\"\n        },\n        {\n          \"name\": \"GetOwnPropertyNames\",\n          \"parameters\": [\n            \"Local<Context> context\"\n          ],\n          \"return_type\": \"MaybeLocal<Array>\",\n          \"logic\": \"Returns an array containing the names of the enumerable properties of this object.\"\n        },\n        {\n          \"name\": \"GetOwnPropertyNames\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"PropertyFilter filter\",\n            \"KeyConversionMode key_conversion\"\n          ],\n          \"return_type\": \"MaybeLocal<Array>\",\n          \"logic\": \"Returns an array containing the names of the filtered properties of this object.\"\n        },\n        {\n          \"name\": \"GetPrototype\",\n          \"parameters\": [],\n          \"return_type\": \"Local<Value>\",\n          \"logic\": \"Gets the prototype object.\"\n        },\n        {\n          \"name\": \"GetPrototypeV2\",\n          \"parameters\": [],\n          \"return_type\": \"Local<Value>\",\n          \"logic\": \"Gets the prototype object (same as getting __proto__ property).\"\n        },\n        {\n          \"name\": \"SetPrototype\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"Local<Value> prototype\"\n          ],\n          \"return_type\": \"Maybe<bool>\",\n          \"logic\": \"Sets the prototype object.\"\n        },\n        {\n          \"name\": \"SetPrototypeV2\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"Local<Value> prototype\"\n          ],\n          \"return_type\": \"Maybe<bool>\",\n          \"logic\": \"Sets the prototype object (same as setting __proto__ property).\"\n        },\n        {\n          \"name\": \"FindInstanceInPrototypeChain\",\n          \"parameters\": [\n            \"Local<FunctionTemplate> tmpl\"\n          ],\n          \"return_type\": \"Local<Object>\",\n          \"logic\": \"Finds an instance of the given function template in the prototype chain.\"\n        },\n        {\n          \"name\": \"ObjectProtoToString\",\n          \"parameters\": [\n            \"Local<Context> context\"\n          ],\n          \"return_type\": \"MaybeLocal<String>\",\n          \"logic\": \"Call builtin Object.prototype.toString on this object.\"\n        },\n        {\n          \"name\": \"GetConstructorName\",\n          \"parameters\": [],\n          \"return_type\": \"Local<String>\",\n          \"logic\": \"Returns the name of the function invoked as a constructor for this object.\"\n        },\n        {\n          \"name\": \"SetIntegrityLevel\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"IntegrityLevel level\"\n          ],\n          \"return_type\": \"Maybe<bool>\",\n          \"logic\": \"Sets the integrity level of the object.\"\n        },\n        {\n          \"name\": \"InternalFieldCount\",\n          \"parameters\": [],\n          \"return_type\": \"int\",\n          \"logic\": \"Gets the number of internal fields for this Object.\"\n        },\n        {\n          \"name\": \"InternalFieldCount\",\n          \"parameters\": [\n            \"const PersistentBase<Object>& object\"\n          ],\n          \"return_type\": \"int\",\n          \"logic\": \"Same as above, but works for PersistentBase.\"\n        },\n        {\n          \"name\": \"InternalFieldCount\",\n          \"parameters\": [\n            \"const BasicTracedReference<Object>& object\"\n          ],\n          \"return_type\": \"int\",\n          \"logic\": \"Same as above, but works for BasicTracedReference.\"\n        },\n        {\n          \"name\": \"GetInternalField\",\n          \"parameters\": [\n            \"int index\"\n          ],\n          \"return_type\": \"Local<Data>\",\n          \"logic\": \"Gets the data from an internal field.\"\n        },\n        {\n          \"name\": \"SetInternalField\",\n          \"parameters\": [\n            \"int index\",\n            \"Local<Data> data\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Sets the data in an internal field.\"\n        },\n        {\n          \"name\": \"GetAlignedPointerFromInternalField\",\n          \"parameters\": [\n            \"int index\"\n          ],\n          \"return_type\": \"void*\",\n          \"logic\": \"Gets a 2-byte-aligned native pointer from an internal field.\"\n        },\n        {\n          \"name\": \"GetAlignedPointerFromInternalField\",\n          \"parameters\": [\n            \"v8::Isolate* isolate\",\n            \"int index\"\n          ],\n          \"return_type\": \"void*\",\n          \"logic\": \"Gets a 2-byte-aligned native pointer from an internal field.\"\n        },\n        {\n          \"name\": \"GetAlignedPointerFromInternalField\",\n          \"parameters\": [\n            \"const PersistentBase<Object>& object\",\n            \"int index\"\n          ],\n          \"return_type\": \"void*\",\n          \"logic\": \"Same as above, but works for PersistentBase.\"\n        },\n        {\n          \"name\": \"GetAlignedPointerFromInternalField\",\n          \"parameters\": [\n            \"const BasicTracedReference<Object>& object\",\n            \"int index\"\n          ],\n          \"return_type\": \"void*\",\n          \"logic\": \"Same as above, but works for TracedReference.\"\n        },\n        {\n          \"name\": \"SetAlignedPointerInInternalField\",\n          \"parameters\": [\n            \"int index\",\n            \"void* value\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Sets a 2-byte-aligned native pointer in an internal field.\"\n        },\n        {\n          \"name\": \"SetAlignedPointerInInternalFields\",\n          \"parameters\": [\n            \"int argc\",\n            \"int indices[]\",\n            \"void* values[]\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Sets aligned pointer in multiple internal fields.\"\n        },\n        {\n          \"name\": \"Unwrap\",\n          \"parameters\": [\n            \"v8::Isolate* isolate\",\n            \"const v8::Local<v8::Object>& wrapper\"\n          ],\n          \"return_type\": \"T*\",\n          \"logic\": \"Unwraps a JS wrapper object to retrieve the C++ instance.\"\n        },\n        {\n          \"name\": \"Unwrap\",\n          \"parameters\": [\n            \"v8::Isolate* isolate\",\n            \"const PersistentBase<Object>& wrapper\"\n          ],\n          \"return_type\": \"T*\",\n          \"logic\": \"Unwraps a JS wrapper object (PersistentBase) to retrieve the C++ instance.\"\n        },\n        {\n          \"name\": \"Unwrap\",\n          \"parameters\": [\n            \"v8::Isolate* isolate\",\n            \"const BasicTracedReference<Object>& wrapper\"\n          ],\n          \"return_type\": \"T*\",\n          \"logic\": \"Unwraps a JS wrapper object (BasicTracedReference) to retrieve the C++ instance.\"\n        },\n        {\n          \"name\": \"Unwrap\",\n          \"parameters\": [\n            \"v8::Isolate* isolate\",\n            \"const v8::Local<v8::Object>& wrapper\",\n            \"CppHeapPointerTagRange tag_range\"\n          ],\n          \"return_type\": \"T*\",\n          \"logic\": \"Unwraps a JS wrapper object to retrieve the C++ instance (with tag range).\"\n        },\n        {\n          \"name\": \"Unwrap\",\n          \"parameters\": [\n            \"v8::Isolate* isolate\",\n            \"const PersistentBase<Object>& wrapper\",\n            \"CppHeapPointerTagRange tag_range\"\n          ],\n          \"return_type\": \"T*\",\n          \"logic\": \"Unwraps a JS wrapper object (PersistentBase) to retrieve the C++ instance (with tag range).\"\n        },\n        {\n          \"name\": \"Unwrap\",\n          \"parameters\": [\n            \"v8::Isolate* isolate\",\n            \"const BasicTracedReference<Object>& wrapper\",\n            \"CppHeapPointerTagRange tag_range\"\n          ],\n          \"return_type\": \"T*\",\n          \"logic\": \"Unwraps a JS wrapper object (BasicTracedReference) to retrieve the C++ instance (with tag range).\"\n        },\n        {\n          \"name\": \"Wrap\",\n          \"parameters\": [\n            \"v8::Isolate* isolate\",\n            \"const v8::Local<v8::Object>& wrapper\",\n            \"void* wrappable\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Wraps a JS wrapper with a C++ instance.\"\n        },\n        {\n          \"name\": \"Wrap\",\n          \"parameters\": [\n            \"v8::Isolate* isolate\",\n            \"const PersistentBase<Object>& wrapper\",\n            \"void* wrappable\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Wraps a JS wrapper (PersistentBase) with a C++ instance.\"\n        },\n        {\n          \"name\": \"Wrap\",\n          \"parameters\": [\n            \"v8::Isolate* isolate\",\n            \"const BasicTracedReference<Object>& wrapper\",\n            \"void* wrappable\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Wraps a JS wrapper (BasicTracedReference) with a C++ instance.\"\n        },\n                {\n          \"name\": \"Wrap\",\n          \"parameters\": [\n            \"v8::Isolate* isolate\",\n            \"const v8::Local<v8::Object>& wrapper\",\n            \"void* wrappable\",\n            \"CppHeapPointerTag tag\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Wraps a JS wrapper with a C++ instance. (with a tag)\"\n        },\n        {\n          \"name\": \"Wrap\",\n          \"parameters\": [\n            \"v8::Isolate* isolate\",\n            \"const PersistentBase<Object>& wrapper\",\n            \"void* wrappable\",\n            \"CppHeapPointerTag tag\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Wraps a JS wrapper (PersistentBase) with a C++ instance. (with a tag)\"\n        },\n        {\n          \"name\": \"Wrap\",\n          \"parameters\": [\n            \"v8::Isolate* isolate\",\n            \"const BasicTracedReference<Object>& wrapper\",\n            \"void* wrappable\",\n            \"CppHeapPointerTag tag\"\n          ],\n          \"return_type\": \"void\",\n          \"logic\": \"Wraps a JS wrapper (BasicTracedReference) with a C++ instance. (with a tag)\"\n        },\n        {\n          \"name\": \"HasOwnProperty\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"Local<Name> key\"\n          ],\n          \"return_type\": \"Maybe<bool>\",\n          \"logic\": \"Checks if the object has an own property.\"\n        },\n        {\n          \"name\": \"HasOwnProperty\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"uint32_t index\"\n          ],\n          \"return_type\": \"Maybe<bool>\",\n          \"logic\": \"Checks if the object has an own indexed property.\"\n        },\n        {\n          \"name\": \"HasRealNamedProperty\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"Local<Name> key\"\n          ],\n          \"return_type\": \"Maybe<bool>\",\n          \"logic\": \"Checks if an object has an own property without causing side effects (no interceptors).\"\n        },\n        {\n          \"name\": \"HasRealIndexedProperty\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"uint32_t index\"\n          ],\n          \"return_type\": \"Maybe<bool>\",\n          \"logic\": \"Checks if the object has a real indexed property.\"\n        },\n        {\n          \"name\": \"HasRealNamedCallbackProperty\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"Local<Name> key\"\n          ],\n          \"return_type\": \"Maybe<bool>\",\n          \"logic\": \"Checks if the object has a real named callback property.\"\n        },\n        {\n          \"name\": \"GetRealNamedPropertyInPrototypeChain\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"Local<Name> key\"\n          ],\n          \"return_type\": \"MaybeLocal<Value>\",\n          \"logic\": \"Gets a real named property in the prototype chain.\"\n        },\n        {\n          \"name\": \"GetRealNamedPropertyAttributesInPrototypeChain\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"Local<Name> key\"\n          ],\n          \"return_type\": \"Maybe<PropertyAttribute>\",\n          \"logic\": \"Gets the property attributes of a real property in the prototype chain.\"\n        },\n        {\n          \"name\": \"GetRealNamedProperty\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"Local<Name> key\"\n          ],\n          \"return_type\": \"MaybeLocal<Value>\",\n          \"logic\": \"Gets a real named property.\"\n        },\n        {\n          \"name\": \"GetRealNamedPropertyAttributes\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"Local<Name> key\"\n          ],\n          \"return_type\": \"Maybe<PropertyAttribute>\",\n          \"logic\": \"Gets the property attributes of a real property.\"\n        },\n        {\n          \"name\": \"HasNamedLookupInterceptor\",\n          \"parameters\": [],\n          \"return_type\": \"bool\",\n          \"logic\": \"Tests for a named lookup interceptor.\"\n        },\n        {\n          \"name\": \"HasIndexedLookupInterceptor\",\n          \"parameters\": [],\n          \"return_type\": \"bool\",\n          \"logic\": \"Tests for an index lookup interceptor.\"\n        },\n        {\n          \"name\": \"GetIdentityHash\",\n          \"parameters\": [],\n          \"return_type\": \"int\",\n          \"logic\": \"Returns the identity hash for this object.\"\n        },\n        {\n          \"name\": \"Clone\",\n          \"parameters\": [\n            \"v8::Isolate* isolate\"\n          ],\n          \"return_type\": \"Local<Object>\",\n          \"logic\": \"Clone this object with a fast but shallow copy. (with an isolate)\"\n        },\n        {\n          \"name\": \"Clone\",\n          \"parameters\": [],\n          \"return_type\": \"Local<Object>\",\n          \"logic\": \"Clone this object with a fast but shallow copy.\"\n        },\n        {\n          \"name\": \"GetCreationContext\",\n          \"parameters\": [\n            \"v8::Isolate* isolate\"\n          ],\n          \"return_type\": \"MaybeLocal<Context>\",\n          \"logic\": \"Returns the context in which the object was created. (with an isolate)\"\n        },\n        {\n          \"name\": \"GetCreationContext\",\n          \"parameters\": [],\n          \"return_type\": \"MaybeLocal<Context>\",\n          \"logic\": \"Returns the context in which the object was created.\"\n        },\n        {\n          \"name\": \"GetCreationContextChecked\",\n          \"parameters\": [\n            \"v8::Isolate* isolate\"\n          ],\n          \"return_type\": \"Local<Context>\",\n          \"logic\": \"Shortcut for GetCreationContext(...).ToLocalChecked(). (with an isolate)\"\n        },\n        {\n          \"name\": \"GetCreationContextChecked\",\n          \"parameters\": [],\n          \"return_type\": \"Local<Context>\",\n          \"logic\": \"Shortcut for GetCreationContext(...).ToLocalChecked().\"\n        },\n        {\n          \"name\": \"GetCreationContext\",\n          \"parameters\": [\n            \"v8::Isolate* isolate\",\n            \"const PersistentBase<Object>& object\"\n          ],\n          \"return_type\": \"MaybeLocal<Context>\",\n          \"logic\": \"Gets the creation context from persistent object. (with an isolate)\"\n        },\n        {\n          \"name\": \"GetCreationContext\",\n          \"parameters\": [\n            \"const PersistentBase<Object>& object\"\n          ],\n          \"return_type\": \"MaybeLocal<Context>\",\n          \"logic\": \"Gets the creation context from persistent object.\"\n        },\n        {\n          \"name\": \"GetAlignedPointerFromEmbedderDataInCreationContext\",\n          \"parameters\": [\n            \"v8::Isolate* isolate\",\n            \"int index\"\n          ],\n          \"return_type\": \"void*\",\n          \"logic\": \"Gets aligned pointer from embedder data in creation context (with isolate).\"\n        },\n        {\n          \"name\": \"GetAlignedPointerFromEmbedderDataInCreationContext\",\n          \"parameters\": [\n            \"int index\"\n          ],\n          \"return_type\": \"void*\",\n          \"logic\": \"Gets aligned pointer from embedder data in creation context.\"\n        },\n        {\n          \"name\": \"IsCallable\",\n          \"parameters\": [],\n          \"return_type\": \"bool\",\n          \"logic\": \"Checks whether a callback is set by the ObjectTemplate::SetCallAsFunctionHandler method.\"\n        },\n        {\n          \"name\": \"IsConstructor\",\n          \"parameters\": [],\n          \"return_type\": \"bool\",\n          \"logic\": \"True if this object is a constructor.\"\n        },\n        {\n          \"name\": \"IsApiWrapper\",\n          \"parameters\": [],\n          \"return_type\": \"bool\",\n          \"logic\": \"True if this object can be generally used to wrap object objects.\"\n        },\n        {\n          \"name\": \"IsUndetectable\",\n          \"parameters\": [],\n          \"return_type\": \"bool\",\n          \"logic\": \"True if this object was created from an object template which was marked as undetectable.\"\n        },\n        {\n          \"name\": \"CallAsFunction\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"Local<Value> recv\",\n            \"int argc\",\n            \"Local<Value> argv[]\"\n          ],\n          \"return_type\": \"MaybeLocal<Value>\",\n          \"logic\": \"Call an Object as a function if a callback is set by the ObjectTemplate::SetCallAsFunctionHandler method.\"\n        },\n        {\n          \"name\": \"CallAsConstructor\",\n          \"parameters\": [\n            \"Local<Context> context\",\n            \"int argc\",\n            \"Local<Value> argv[]\"\n          ],\n          \"return_type\": \"MaybeLocal<Value>\",\n          \"logic\": \"Call an Object as a constructor if a callback is set by the ObjectTemplate::SetCallAsFunctionHandler method.\"\n        },\n        {\n          \"name\": \"GetIsolate\",\n          \"parameters\": [],\n          \"return_type\": \"Isolate*\",\n          \"logic\": \"Return the isolate to which the Object belongs to.\"\n        },\n        {\n          \"name\": \"GetIsolate\",\n          \"parameters\": [\n              \"const TracedReference<Object>& handle\"\n          ],\n          \"return_type\": \"Isolate*\",\n          \"logic\": \"Return the isolate to which the Object belongs to.\"\n        },\n        {\n          \"name\": \"PreviewEntries\",\n          \"parameters\": [\n              \"bool* is_key_value\"\n          ],\n          \"return_type\": \"MaybeLocal<Array>\",\n          \"logic\": \"If this object is a Set, Map, WeakSet or WeakMap, this returns a representation of the elements of this object as an array.\"\n        },\n        {\n          \"name\": \"New\",\n          \"parameters\": [\n            \"Isolate* isolate\"\n          ],\n          \"return_type\": \"Local<Object>\",\n          \"logic\": \"Creates a JavaScript object.\"\n        },\n        {\n          \"name\": \"New\",\n          \"parameters\": [\n            \"Isolate* isolate\",\n            \"Local<Value> prototype_or_null\",\n            \"Local<Name>*"
}