{
  "file_path": "/home/kathirks_gc/v8_go/codebase/include/libplatform/libplatform.h",
  "imports": [
    "<memory>",
    "libplatform/libplatform-export.h",
    "libplatform/v8-tracing.h",
    "v8-platform.h",
    "v8config.h"
  ],
  "classes": [],
  "functions": [
    {
      "name": "NewDefaultPlatform",
      "parameters": [
        "int thread_pool_size",
        "IdleTaskSupport idle_task_support",
        "InProcessStackDumping in_process_stack_dumping",
        "std::unique_ptr<v8::TracingController> tracing_controller",
        "PriorityMode priority_mode"
      ],
      "return_type": "std::unique_ptr<v8::Platform>",
      "logic": "Returns a new instance of the default v8::Platform implementation.  It configures the thread pool size, idle task support, in-process stack dumping, tracing controller, and priority mode for the platform."
    },
    {
      "name": "NewSingleThreadedDefaultPlatform",
      "parameters": [
        "IdleTaskSupport idle_task_support",
        "InProcessStackDumping in_process_stack_dumping",
        "std::unique_ptr<v8::TracingController> tracing_controller"
      ],
      "return_type": "std::unique_ptr<v8::Platform>",
      "logic": "Returns a new instance of the default v8::Platform implementation suitable for single-threaded usage. It disables the worker thread pool and configures idle task support, in-process stack dumping, and a tracing controller."
    },
    {
      "name": "NewDefaultJobHandle",
      "parameters": [
        "v8::Platform* platform",
        "v8::TaskPriority priority",
        "std::unique_ptr<v8::JobTask> job_task",
        "size_t num_worker_threads"
      ],
      "return_type": "std::unique_ptr<v8::JobHandle>",
      "logic": "Returns a new instance of the default v8::JobHandle implementation. It's used to create and manage background jobs with a specified platform, priority, task, and number of worker threads."
    },
    {
      "name": "PumpMessageLoop",
      "parameters": [
        "v8::Platform* platform",
        "v8::Isolate* isolate",
        "MessageLoopBehavior behavior"
      ],
      "return_type": "bool",
      "logic": "Pumps the message loop for the given isolate, executing tasks from the task queue. It returns true if a task was executed and false otherwise. It allows specifying whether to wait for work or not."
    },
    {
      "name": "RunIdleTasks",
      "parameters": [
        "v8::Platform* platform",
        "v8::Isolate* isolate",
        "double idle_time_in_seconds"
      ],
      "return_type": "void",
      "logic": "Runs pending idle tasks for a specified duration. It processes tasks that are marked as low priority and only executed when the system is idle."
    },
    {
      "name": "NotifyIsolateShutdown",
      "parameters": [
        "v8::Platform* platform",
        "v8::Isolate* isolate"
      ],
      "return_type": "void",
      "logic": "Notifies the given platform about the Isolate getting deleted. This allows the platform to perform cleanup and resource management related to the isolate."
    }
  ]
}