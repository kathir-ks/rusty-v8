{
  "file_path": "/home/kathirks_gc/v8_go/codebase/include/cppgc/object-size-trait.h",
  "imports": [
    "<cstddef>",
    "cppgc/type-traits.h",
    "v8config.h"
  ],
  "classes": [
    {
      "name": "cppgc::internal::BaseObjectSizeTrait",
      "properties": [],
      "methods": [
        {
          "name": "GetObjectSizeForGarbageCollected",
          "parameters": [
            "const void*"
          ],
          "return_type": "size_t",
          "logic": "This function, likely implemented elsewhere, determines the size of an object allocated as garbage collected given a pointer to it. It's declared but not defined within this class (hence protected)."
        },
        {
          "name": "GetObjectSizeForGarbageCollectedMixin",
          "parameters": [
            "const void*"
          ],
          "return_type": "size_t",
          "logic": "This function, likely implemented elsewhere, determines the size of an object allocated as garbage collected when provided an inner pointer to a mixin part of the object. It's declared but not defined within this class (hence protected)."
        }
      ]
    },
    {
      "name": "cppgc::subtle::ObjectSizeTrait<T, false>",
      "properties": [],
      "methods": [
        {
          "name": "GetSize",
          "parameters": [
            "const T& object"
          ],
          "return_type": "size_t",
          "logic": "This function uses the `GetObjectSizeForGarbageCollected` method (inherited from `BaseObjectSizeTrait`) to retrieve the size of the object `object`. It's designed for garbage-collected objects directly."
        }
      ]
    },
    {
      "name": "cppgc::subtle::ObjectSizeTrait<T, true>",
      "properties": [],
      "methods": [
        {
          "name": "GetSize",
          "parameters": [
            "const T& object"
          ],
          "return_type": "size_t",
          "logic": "This function uses the `GetObjectSizeForGarbageCollectedMixin` method (inherited from `BaseObjectSizeTrait`) to retrieve the size of the object `object` through a pointer to a mixin. It's designed for garbage-collected objects that are mixins."
        }
      ]
    }
  ],
  "functions": []
}