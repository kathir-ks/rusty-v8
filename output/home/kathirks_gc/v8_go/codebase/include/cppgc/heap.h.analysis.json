{
  "file_path": "/home/kathirks_gc/v8_go/codebase/include/cppgc/heap.h",
  "imports": [
    "<cstddef>",
    "<cstdint>",
    "<memory>",
    "<vector>",
    "cppgc/common.h",
    "cppgc/custom-space.h",
    "cppgc/platform.h",
    "v8config.h"
  ],
  "classes": [
    {
      "name": "Heap",
      "properties": [],
      "methods": [
        {
          "name": "Create",
          "parameters": [
            "std::shared_ptr<Platform> platform",
            "HeapOptions options = HeapOptions::Default()"
          ],
          "return_type": "std::unique_ptr<Heap>",
          "logic": "Creates a new heap instance using the provided platform and options."
        },
        {
          "name": "~Heap",
          "parameters": [],
          "return_type": "virtual",
          "logic": "Virtual destructor for the Heap class, ensuring proper cleanup."
        },
        {
          "name": "ForceGarbageCollectionSlow",
          "parameters": [
            "const char* source",
            "const char* reason",
            "StackState stack_state = StackState::kMayContainHeapPointers"
          ],
          "return_type": "void",
          "logic": "Forces a garbage collection cycle.  Takes source, reason, and stack state as parameters."
        },
        {
          "name": "GetAllocationHandle",
          "parameters": [],
          "return_type": "AllocationHandle&",
          "logic": "Returns the allocation handle for the heap, used for allocating objects."
        },
        {
          "name": "GetHeapHandle",
          "parameters": [],
          "return_type": "HeapHandle&",
          "logic": "Returns the heap handle, allowing other APIs to refer to this heap."
        }
      ]
    },
    {
      "name": "Heap::ResourceConstraints",
      "properties": [
        "size_t initial_heap_size_bytes"
      ],
      "methods": []
    },
    {
      "name": "Heap::HeapOptions",
      "properties": [
        "std::vector<std::unique_ptr<CustomSpaceBase>> custom_spaces",
        "StackSupport stack_support",
        "MarkingType marking_support",
        "SweepingType sweeping_support",
        "ResourceConstraints resource_constraints"
      ],
      "methods": [
        {
          "name": "Default",
          "parameters": [],
          "return_type": "HeapOptions",
          "logic": "Creates a HeapOptions instance with reasonable default values."
        }
      ]
    }
  ],
  "functions": []
}