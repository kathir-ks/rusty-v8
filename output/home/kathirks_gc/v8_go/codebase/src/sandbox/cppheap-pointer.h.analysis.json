{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/sandbox/cppheap-pointer.h",
  "imports": [
    "include/v8-sandbox.h",
    "src/sandbox/isolate.h"
  ],
  "classes": [],
  "functions": [
    {
      "name": "ReadCppHeapPointerField",
      "parameters": [
        "Address field_address",
        "IsolateForPointerCompression isolate"
      ],
      "return_type": "Address",
      "logic": "Reads a C++ heap pointer field from the given address, using the provided isolate for pointer compression. The template parameters `lower_bound` and `upper_bound` (CppHeapPointerTag) are used implicitly in the implementation (not shown in the header file) to validate the tag of the pointer. This version assumes a specific tag range defined by the template parameters."
    },
    {
      "name": "ReadCppHeapPointerField",
      "parameters": [
        "Address field_address",
        "IsolateForPointerCompression isolate",
        "CppHeapPointerTagRange tag_range"
      ],
      "return_type": "Address",
      "logic": "Reads a C++ heap pointer field from the given address, using the provided isolate for pointer compression and a specific `tag_range` to validate the tag of the pointer."
    },
    {
      "name": "WriteLazilyInitializedCppHeapPointerField",
      "parameters": [
        "Address field_address",
        "IsolateForPointerCompression isolate",
        "Address value"
      ],
      "return_type": "void",
      "logic": "Writes a C++ heap pointer `value` to the given address, using the provided isolate for pointer compression.  The template parameter `tag` (CppHeapPointerTag) is used implicitly in the implementation (not shown in the header file) to tag the pointer."
    },
    {
      "name": "WriteLazilyInitializedCppHeapPointerField",
      "parameters": [
        "Address field_address",
        "IsolateForPointerCompression isolate",
        "Address value",
        "CppHeapPointerTag tag"
      ],
      "return_type": "void",
      "logic": "Writes a C++ heap pointer `value` with a given `tag` to the given address, using the provided isolate for pointer compression."
    }
  ]
}