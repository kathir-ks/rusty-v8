{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/execution/pointer-authentication-dummy.h",
  "imports": [
    "include/v8-internal.h",
    "src/base/logging.h",
    "src/base/macros.h",
    "src/execution/pointer-authentication.h",
    "src/flags/flags.h"
  ],
  "classes": [
    {
      "name": "PointerAuthentication",
      "properties": [],
      "methods": [
        {
          "name": "AuthenticatePC",
          "parameters": [
            "Address* pc_address",
            "unsigned"
          ],
          "return_type": "Address",
          "logic": "Loads the return address from the provided address and returns it. This is a dummy implementation, so it simply dereferences the pointer."
        },
        {
          "name": "StripPAC",
          "parameters": [
            "Address pc"
          ],
          "return_type": "Address",
          "logic": "Returns the provided address unmodified. This is a dummy implementation for stripping pointer authentication codes."
        },
        {
          "name": "ReplacePC",
          "parameters": [
            "Address* pc_address",
            "Address new_pc",
            "int"
          ],
          "return_type": "void",
          "logic": "Replaces the value at the provided address with a new address without any signing.  This is a dummy implementation."
        },
        {
          "name": "SignAndCheckPC",
          "parameters": [
            "Isolate*",
            "Address pc",
            "Address"
          ],
          "return_type": "Address",
          "logic": "Returns the provided address unmodified. This is a dummy implementation for signing and checking pointer authentication codes."
        },
        {
          "name": "MoveSignedPC",
          "parameters": [
            "Isolate*",
            "Address pc",
            "Address",
            "Address"
          ],
          "return_type": "Address",
          "logic": "Returns the provided address unmodified if webassembly is enabled. Checks that either wasm_deopt or experimental_wasm_growable_stacks flags are set. If not wasm, it raises an unrechable error."
        }
      ]
    }
  ],
  "functions": []
}