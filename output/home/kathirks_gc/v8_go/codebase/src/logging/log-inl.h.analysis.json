{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/logging/log-inl.h",
  "imports": [
    "src/execution/isolate.h",
    "src/logging/log.h",
    "src/objects/objects-inl.h",
    "src/tracing/trace-event.h"
  ],
  "classes": [
    {
      "name": "V8FileLogger",
      "properties": [],
      "methods": [
        {
          "name": "ToNativeByScript",
          "parameters": [
            "LogEventListener::CodeTag tag",
            "Tagged<Script> script"
          ],
          "return_type": "LogEventListener::CodeTag",
          "logic": "Converts a CodeTag to a Native CodeTag if the script is a native script.  It checks if the input script is of type 'kNative' and if so, it changes the code tag accordingly (e.g., kFunction -> kNativeFunction, kScript -> kNativeScript). Returns the original tag otherwise."
        }
      ]
    },
    {
      "name": "TimerEventScope<TimerEvent>",
      "properties": [],
      "methods": [
        {
          "name": "LogTimerEvent",
          "parameters": [
            "v8::LogEventStatus se"
          ],
          "return_type": "void",
          "logic": "Logs a timer event using the CallEventLogger function in V8FileLogger. It obtains the event name and 'expose_to_api' flag from the TimerEvent template parameter.  It ultimately triggers an event log with specific details about the timer event, useful for performance profiling and debugging."
        }
      ]
    }
  ],
  "functions": [],
  "copyright": "Copyright 2006-2009 the V8 project authors.",
  "license": "Use of this source code is governed by a BSD-style license that can be found in the LICENSE file."
}