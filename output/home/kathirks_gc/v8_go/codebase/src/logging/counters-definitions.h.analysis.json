{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/logging/counters-definitions.h",
  "imports": [
    "include/v8-internal.h"
  ],
  "classes": [],
  "functions": [],
  "macros": [
    {
      "name": "HISTOGRAM_RANGE_LIST",
      "parameters": [
        "HR"
      ],
      "logic": "Defines a list of range histograms using the provided macro HR. Each HR macro call defines a specific histogram with its name, caption, minimum value, maximum value, and number of buckets. These histograms are generic range histograms used for tracking various metrics."
    },
    {
      "name": "HISTOGRAM_RANGE_LIST_SLOW",
      "parameters": [
        "HR"
      ],
      "logic": "Defines a list of range histograms for slow operations (when V8_ENABLE_DRUMBRAKE is defined) using the provided macro HR. These histograms measure the percentage of time spent in Wasm jitted code and the Wasm interpreter, specifically tracking instances where execution is considered too slow."
    },
    {
      "name": "NESTED_TIMED_HISTOGRAM_LIST",
      "parameters": [
        "HT"
      ],
      "logic": "Defines a list of timed histograms using the provided macro HT.  These histograms are meant to be used with `NestedTimedHistogramScope`. Each HT macro call defines a specific timer histogram with its name, caption, maximum value, and unit of time (e.g., milliseconds, microseconds)."
    },
    {
      "name": "NESTED_TIMED_HISTOGRAM_LIST_SLOW",
      "parameters": [
        "HT"
      ],
      "logic": "Defines a list of timed histograms for slow operations using the provided macro HT.  These histograms measure the execution time of V8, including JS and runtime calls."
    },
    {
      "name": "TIMED_HISTOGRAM_LIST",
      "parameters": [
        "HT"
      ],
      "logic": "Defines a list of thread-safe timed histograms using the provided macro HT. Each HT macro call defines a specific timer histogram with its name, caption, maximum value, and unit of time.  These are typically used to measure the duration of various operations, such as garbage collection, compilation, and wasm operations."
    },
    {
      "name": "AGGREGATABLE_HISTOGRAM_TIMER_LIST",
      "parameters": [
        "AHT"
      ],
      "logic": "Defines a list of aggregatable timer histograms using the provided macro AHT.  These histograms are specifically designed to be aggregated."
    },
    {
      "name": "HISTOGRAM_PERCENTAGE_LIST",
      "parameters": [
        "HP"
      ],
      "logic": "Defines a list of percentage histograms using the provided macro HP. Each HP macro call defines a specific percentage histogram used to track various metrics as percentages (e.g., heap fragmentation)."
    },
    {
      "name": "HISTOGRAM_LEGACY_MEMORY_LIST",
      "parameters": [
        "HM"
      ],
      "logic": "Defines a list of memory histograms using the provided macro HM. These legacy memory histograms track memory usage and committed memory."
    },
    {
      "name": "STATS_COUNTER_LIST",
      "parameters": [
        "SC"
      ],
      "logic": "Defines a list of statistics counters using the provided macro SC. Each SC macro call defines a specific statistics counter used to track various counts (e.g., global handle count, compilation cache hits/misses, memory usage)."
    },
    {
      "name": "STATS_COUNTER_NATIVE_CODE_LIST",
      "parameters": [
        "SC"
      ],
      "logic": "Defines a list of statistics counters that can be incremented directly from native code using the provided macro SC.  These counters are specifically for metrics that need to be updated efficiently from within compiled code."
    }
  ]
}