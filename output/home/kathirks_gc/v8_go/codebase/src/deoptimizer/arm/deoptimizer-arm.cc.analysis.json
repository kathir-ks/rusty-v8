{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/deoptimizer/arm/deoptimizer-arm.cc",
  "imports": [
    "src/deoptimizer/deoptimizer.h",
    "src/execution/isolate-data.h"
  ],
  "classes": [
    {
      "name": "RegisterValues",
      "properties": [
        "simd128_registers_"
      ],
      "methods": [
        {
          "name": "GetFloatRegister",
          "parameters": [
            "unsigned n"
          ],
          "return_type": "Float32",
          "logic": "Reads a Float32 value from the simd128_registers_ array at the specified index n."
        },
        {
          "name": "GetDoubleRegister",
          "parameters": [
            "unsigned n"
          ],
          "return_type": "Float64",
          "logic": "Reads a Float64 value from the simd128_registers_ array at the specified index n."
        },
        {
          "name": "SetDoubleRegister",
          "parameters": [
            "unsigned n",
            "Float64 value"
          ],
          "return_type": "void",
          "logic": "Writes a Float64 value to the simd128_registers_ array at the specified index n."
        }
      ]
    },
    {
      "name": "FrameDescription",
      "properties": [
        "pc_"
      ],
      "methods": [
        {
          "name": "SetCallerPc",
          "parameters": [
            "unsigned offset",
            "intptr_t value"
          ],
          "return_type": "void",
          "logic": "Sets the caller's program counter (PC) at the given offset in the frame."
        },
        {
          "name": "SetCallerFp",
          "parameters": [
            "unsigned offset",
            "intptr_t value"
          ],
          "return_type": "void",
          "logic": "Sets the caller's frame pointer (FP) at the given offset in the frame."
        },
        {
          "name": "SetCallerConstantPool",
          "parameters": [
            "unsigned offset",
            "intptr_t value"
          ],
          "return_type": "void",
          "logic": "This function is not implemented and throws an error because embedded constant pool support is not available."
        },
        {
          "name": "SetPc",
          "parameters": [
            "intptr_t pc"
          ],
          "return_type": "void",
          "logic": "Sets the program counter (PC) in the frame description."
        }
      ]
    },
    {
      "name": "Deoptimizer",
      "properties": [],
      "methods": [
        {
          "name": "PatchToJump",
          "parameters": [
            "Address pc",
            "Address new_pc"
          ],
          "return_type": "void",
          "logic": "This function is not implemented and throws an error, indicating that patching to jump is not supported."
        }
      ]
    }
  ],
  "functions": [],
  "constants": [
    {
      "name": "kEagerDeoptExitSize",
      "value": "2 * kInstrSize"
    },
    {
      "name": "kLazyDeoptExitSize",
      "value": "2 * kInstrSize"
    },
    {
      "name": "kAdaptShadowStackOffsetToSubtract",
      "value": "0"
    }
  ]
}