{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/deoptimizer/ppc/deoptimizer-ppc.cc",
  "imports": [
    "src/deoptimizer/deoptimizer.h",
    "src/execution/isolate-data.h"
  ],
  "classes": [
    {
      "name": "Deoptimizer",
      "properties": [
        "kEagerDeoptExitSize",
        "kLazyDeoptExitSize",
        "kAdaptShadowStackOffsetToSubtract"
      ],
      "methods": [
        {
          "name": "PatchToJump",
          "parameters": [
            "Address pc",
            "Address new_pc"
          ],
          "return_type": "void",
          "logic": "This function is intended to patch a given address 'pc' to jump to a new address 'new_pc'. However, it currently uses UNREACHABLE(), indicating that this functionality is not implemented for the PPC architecture."
        }
      ]
    },
    {
      "name": "RegisterValues",
      "properties": [],
      "methods": [
        {
          "name": "GetFloatRegister",
          "parameters": [
            "unsigned n"
          ],
          "return_type": "Float32",
          "logic": "Reads a Float64 value from the simd128_registers_ array at index 'n', converts it to a float, and then returns the float as a Float32."
        },
        {
          "name": "GetDoubleRegister",
          "parameters": [
            "unsigned n"
          ],
          "return_type": "Float64",
          "logic": "Reads a Float64 value from the simd128_registers_ array at index 'n' and returns it."
        },
        {
          "name": "SetDoubleRegister",
          "parameters": [
            "unsigned n",
            "Float64 value"
          ],
          "return_type": "void",
          "logic": "Writes a Float64 value to the simd128_registers_ array at index 'n'."
        }
      ]
    },
    {
      "name": "FrameDescription",
      "properties": [],
      "methods": [
        {
          "name": "SetCallerPc",
          "parameters": [
            "unsigned offset",
            "intptr_t value"
          ],
          "return_type": "void",
          "logic": "Sets the caller's program counter (PC) in the frame at the given offset using the SetFrameSlot method."
        },
        {
          "name": "SetCallerFp",
          "parameters": [
            "unsigned offset",
            "intptr_t value"
          ],
          "return_type": "void",
          "logic": "Sets the caller's frame pointer (FP) in the frame at the given offset using the SetFrameSlot method."
        },
        {
          "name": "SetCallerConstantPool",
          "parameters": [
            "unsigned offset",
            "intptr_t value"
          ],
          "return_type": "void",
          "logic": "Sets the caller's constant pool in the frame at the given offset using the SetFrameSlot method. Only enabled if V8_EMBEDDED_CONSTANT_POOL_BOOL is true."
        },
        {
          "name": "SetPc",
          "parameters": [
            "intptr_t pc"
          ],
          "return_type": "void",
          "logic": "Sets the program counter (PC) to the given value."
        }
      ]
    }
  ],
  "functions": []
}