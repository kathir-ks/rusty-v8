{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/objects/js-promise-inl.h",
  "imports": [
    "src/objects/js-promise.h",
    "src/objects/objects-inl.h",
    "src/objects/objects.h",
    "src/objects/object-macros.h",
    "torque-generated/src/objects/js-promise-tq-inl.inc",
    "src/objects/object-macros-undef.h"
  ],
  "classes": [
    {
      "name": "JSPromise",
      "properties": [
        "flags",
        "has_handler",
        "is_silent"
      ],
      "methods": [
        {
          "name": "GetNextAsyncTaskId",
          "parameters": [
            "uint32_t async_task_id"
          ],
          "return_type": "uint32_t",
          "logic": "Gets the next available async task ID by incrementing the input ID, wrapping around at the maximum value, and avoiding kInvalidAsyncTaskId.  This provides a unique ID for asynchronous operations associated with the promise."
        },
        {
          "name": "has_async_task_id",
          "parameters": [],
          "return_type": "bool",
          "logic": "Checks if the promise has an assigned async task ID (i.e., it's not kInvalidAsyncTaskId)."
        },
        {
          "name": "async_task_id",
          "parameters": [],
          "return_type": "uint32_t",
          "logic": "Decodes and retrieves the async task ID from the promise's flags."
        },
        {
          "name": "set_async_task_id",
          "parameters": [
            "uint32_t id"
          ],
          "return_type": "void",
          "logic": "Sets the async task ID within the promise's flags, encoding the provided ID."
        },
        {
          "name": "result",
          "parameters": [],
          "return_type": "Tagged<Object>",
          "logic": "Returns the result of the promise when the promise is not pending.  It retrieves the result from the reactions_or_result field."
        },
        {
          "name": "reactions",
          "parameters": [],
          "return_type": "Tagged<Object>",
          "logic": "Returns the reactions of the promise when the promise is pending. It retrieves the reactions from the reactions_or_result field."
        }
      ]
    }
  ],
  "functions": [],
  "macros": [
    {
      "name": "TQ_OBJECT_CONSTRUCTORS_IMPL",
      "logic": "This macro likely implements the constructors for the JSPromise class using the Torque DSL (Domain Specific Language)."
    },
    {
      "name": "BOOL_ACCESSORS",
      "logic": "This macro defines getter and setter methods for boolean flags within the JSPromise object. It likely involves bitwise operations to manipulate the flags efficiently."
    }
  ]
}