{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/tasks/task-utils.h",
  "imports": [
    "<functional>",
    "<memory>"
  ],
  "classes": [
    {
      "name": "CancelableIdleTask",
      "properties": [],
      "methods": []
    },
    {
      "name": "CancelableTask",
      "properties": [],
      "methods": []
    },
    {
      "name": "CancelableTaskManager",
      "properties": [],
      "methods": []
    },
    {
      "name": "Isolate",
      "properties": [],
      "methods": []
    }
  ],
  "functions": [
    {
      "name": "MakeCancelableTask",
      "parameters": [
        "Isolate*",
        "std::function<void()>"
      ],
      "return_type": "std::unique_ptr<CancelableTask>",
      "logic": "Creates a cancelable task associated with an Isolate. The task, when executed, will call the provided function."
    },
    {
      "name": "MakeCancelableTask",
      "parameters": [
        "CancelableTaskManager*",
        "std::function<void()>"
      ],
      "return_type": "std::unique_ptr<CancelableTask>",
      "logic": "Creates a cancelable task associated with a CancelableTaskManager. The task, when executed, will call the provided function."
    },
    {
      "name": "MakeCancelableIdleTask",
      "parameters": [
        "Isolate*",
        "std::function<void(double)>"
      ],
      "return_type": "std::unique_ptr<CancelableIdleTask>",
      "logic": "Creates a cancelable idle task associated with an Isolate. The idle task, when executed, will call the provided function with the amount of time available."
    },
    {
      "name": "MakeCancelableIdleTask",
      "parameters": [
        "CancelableTaskManager*",
        "std::function<void(double)>"
      ],
      "return_type": "std::unique_ptr<CancelableIdleTask>",
      "logic": "Creates a cancelable idle task associated with a CancelableTaskManager. The idle task, when executed, will call the provided function with the amount of time available."
    }
  ]
}