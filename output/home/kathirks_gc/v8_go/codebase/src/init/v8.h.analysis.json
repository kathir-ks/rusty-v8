{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/init/v8.h",
  "imports": [
    "src/common/globals.h"
  ],
  "classes": [
    {
      "name": "V8",
      "properties": [
        "platform_"
      ],
      "methods": [
        {
          "name": "Initialize",
          "parameters": [],
          "return_type": "void",
          "logic": "Performs global initialization of the V8 engine."
        },
        {
          "name": "Dispose",
          "parameters": [],
          "return_type": "void",
          "logic": "Performs global disposal of the V8 engine."
        },
        {
          "name": "FatalProcessOutOfMemory",
          "parameters": [
            "Isolate* isolate",
            "const char* location",
            "const OOMDetails& details = kNoOOMDetails"
          ],
          "return_type": "[[noreturn]] static void",
          "logic": "Reports a fatal out-of-memory error and terminates the process. Takes an isolate, location, and OOM details."
        },
        {
          "name": "FatalProcessOutOfMemory",
          "parameters": [
            "Isolate* isolate",
            "const char* location",
            "const char* detail"
          ],
          "return_type": "[[noreturn]] static void",
          "logic": "Reports a fatal out-of-memory error and terminates the process, constructing OOMDetails from a detail string.  A variant of the above method."
        },
        {
          "name": "InitializePlatform",
          "parameters": [
            "v8::Platform* platform"
          ],
          "return_type": "void",
          "logic": "Initializes the V8 platform."
        },
        {
          "name": "InitializePlatformForTesting",
          "parameters": [
            "v8::Platform* platform"
          ],
          "return_type": "void",
          "logic": "Initializes the V8 platform specifically for testing purposes."
        },
        {
          "name": "DisposePlatform",
          "parameters": [],
          "return_type": "void",
          "logic": "Disposes the V8 platform."
        },
        {
          "name": "GetCurrentPlatform",
          "parameters": [],
          "return_type": "v8::Platform*",
          "logic": "Returns the current V8 platform."
        },
        {
          "name": "SetPlatformForTesting",
          "parameters": [
            "v8::Platform* platform"
          ],
          "return_type": "void",
          "logic": "Replaces the current platform with the given platform, used only for testing."
        },
        {
          "name": "SetSnapshotBlob",
          "parameters": [
            "StartupData* snapshot_blob"
          ],
          "return_type": "void",
          "logic": "Sets the snapshot blob used during V8 initialization."
        }
      ]
    }
  ],
  "functions": [],
  "constants": [
    {
      "name": "kNoOOMDetails",
      "type": "OOMDetails",
      "logic": "Constant representing no out-of-memory details."
    },
    {
      "name": "kHeapOOM",
      "type": "OOMDetails",
      "logic": "Constant representing heap out-of-memory."
    }
  ]
}