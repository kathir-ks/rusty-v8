{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/d8/d8-platforms.h",
  "imports": [
    "<cstdint>",
    "<memory>"
  ],
  "classes": [
    {
      "name": "Isolate",
      "properties": [],
      "methods": []
    },
    {
      "name": "Platform",
      "properties": [],
      "methods": []
    }
  ],
  "functions": [
    {
      "name": "MakePredictablePlatform",
      "parameters": [
        "std::unique_ptr<Platform> platform"
      ],
      "return_type": "std::unique_ptr<Platform>",
      "logic": "Returns a v8::Platform implementation with disabled worker threads, disallowed idle tasks, and deterministic time reporting."
    },
    {
      "name": "MakeDelayedTasksPlatform",
      "parameters": [
        "std::unique_ptr<Platform> platform",
        "int64_t random_seed"
      ],
      "return_type": "std::unique_ptr<Platform>",
      "logic": "Returns a v8::Platform implementation which randomly delays tasks (foreground and background) for stress-testing different interleavings.  It takes a random seed as input; if the seed is 0, a random seed is chosen."
    }
  ]
}