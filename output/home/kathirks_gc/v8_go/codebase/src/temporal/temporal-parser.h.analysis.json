{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/temporal/temporal-parser.h",
  "imports": [
    "<optional>",
    "src/execution/isolate.h"
  ],
  "classes": [
    {
      "name": "ParsedISO8601Result",
      "properties": [
        "date_year",
        "date_month",
        "date_day",
        "time_hour",
        "time_minute",
        "time_second",
        "time_nanosecond",
        "tzuo_sign",
        "tzuo_hour",
        "tzuo_minute",
        "tzuo_second",
        "tzuo_nanosecond",
        "utc_designator",
        "tzi_name_start",
        "tzi_name_length",
        "calendar_name_start",
        "calendar_name_length",
        "offset_string_start",
        "offset_string_length"
      ],
      "methods": [
        {
          "name": "ParsedISO8601Result",
          "parameters": [],
          "return_type": "void",
          "logic": "Constructor that initializes all fields to kMinInt31 (for int32_t fields) or false (for utc_designator), and 0 for string offsets and lengths."
        },
        {
          "name": "date_year_is_undefined",
          "parameters": [],
          "return_type": "bool",
          "logic": "Checks if date_year is undefined (equal to kMinInt31)."
        },
        {
          "name": "date_month_is_undefined",
          "parameters": [],
          "return_type": "bool",
          "logic": "Checks if date_month is undefined (equal to kMinInt31)."
        },
        {
          "name": "date_day_is_undefined",
          "parameters": [],
          "return_type": "bool",
          "logic": "Checks if date_day is undefined (equal to kMinInt31)."
        },
        {
          "name": "time_hour_is_undefined",
          "parameters": [],
          "return_type": "bool",
          "logic": "Checks if time_hour is undefined (equal to kMinInt31)."
        },
        {
          "name": "time_minute_is_undefined",
          "parameters": [],
          "return_type": "bool",
          "logic": "Checks if time_minute is undefined (equal to kMinInt31)."
        },
        {
          "name": "time_second_is_undefined",
          "parameters": [],
          "return_type": "bool",
          "logic": "Checks if time_second is undefined (equal to kMinInt31)."
        },
        {
          "name": "time_nanosecond_is_undefined",
          "parameters": [],
          "return_type": "bool",
          "logic": "Checks if time_nanosecond is undefined (equal to kMinInt31)."
        },
        {
          "name": "tzuo_hour_is_undefined",
          "parameters": [],
          "return_type": "bool",
          "logic": "Checks if tzuo_hour is undefined (equal to kMinInt31)."
        },
        {
          "name": "tzuo_minute_is_undefined",
          "parameters": [],
          "return_type": "bool",
          "logic": "Checks if tzuo_minute is undefined (equal to kMinInt31)."
        },
        {
          "name": "tzuo_second_is_undefined",
          "parameters": [],
          "return_type": "bool",
          "logic": "Checks if tzuo_second is undefined (equal to kMinInt31)."
        },
        {
          "name": "tzuo_sign_is_undefined",
          "parameters": [],
          "return_type": "bool",
          "logic": "Checks if tzuo_sign is undefined (equal to kMinInt31)."
        },
        {
          "name": "tzuo_nanosecond_is_undefined",
          "parameters": [],
          "return_type": "bool",
          "logic": "Checks if tzuo_nanosecond is undefined (equal to kMinInt31)."
        }
      ]
    },
    {
      "name": "ParsedISO8601Duration",
      "properties": [
        "sign",
        "years",
        "months",
        "weeks",
        "days",
        "whole_hours",
        "whole_minutes",
        "whole_seconds",
        "hours_fraction",
        "minutes_fraction",
        "seconds_fraction"
      ],
      "methods": [
        {
          "name": "ParsedISO8601Duration",
          "parameters": [],
          "return_type": "void",
          "logic": "Constructor that initializes all fields except sign to kEmpty and sign to 1."
        }
      ]
    },
    {
      "name": "TemporalParser",
      "properties": [],
      "methods": [
        {
          "name": "ParseTemporalDateString",
          "parameters": [
            "Isolate* isolate",
            "DirectHandle<String> iso_string"
          ],
          "return_type": "std::optional<ParsedISO8601Result>",
          "logic": "Parses a TemporalDateString from the input string."
        },
        {
          "name": "ParseTemporalDateTimeString",
          "parameters": [
            "Isolate* isolate",
            "DirectHandle<String> iso_string"
          ],
          "return_type": "std::optional<ParsedISO8601Result>",
          "logic": "Parses a TemporalDateTimeString from the input string."
        },
        {
          "name": "ParseTemporalTimeString",
          "parameters": [
            "Isolate* isolate",
            "DirectHandle<String> iso_string"
          ],
          "return_type": "std::optional<ParsedISO8601Result>",
          "logic": "Parses a TemporalTimeString from the input string."
        },
        {
          "name": "ParseTemporalYearMonthString",
          "parameters": [
            "Isolate* isolate",
            "DirectHandle<String> iso_string"
          ],
          "return_type": "std::optional<ParsedISO8601Result>",
          "logic": "Parses a TemporalYearMonthString from the input string."
        },
        {
          "name": "ParseTemporalMonthDayString",
          "parameters": [
            "Isolate* isolate",
            "DirectHandle<String> iso_string"
          ],
          "return_type": "std::optional<ParsedISO8601Result>",
          "logic": "Parses a TemporalMonthDayString from the input string."
        },
        {
          "name": "ParseTemporalInstantString",
          "parameters": [
            "Isolate* isolate",
            "DirectHandle<String> iso_string"
          ],
          "return_type": "std::optional<ParsedISO8601Result>",
          "logic": "Parses a TemporalInstantString from the input string."
        },
        {
          "name": "ParseTemporalZonedDateTimeString",
          "parameters": [
            "Isolate* isolate",
            "DirectHandle<String> iso_string"
          ],
          "return_type": "std::optional<ParsedISO8601Result>",
          "logic": "Parses a TemporalZonedDateTimeString from the input string."
        },
        {
          "name": "ParseTimeZoneIdentifier",
          "parameters": [
            "Isolate* isolate",
            "DirectHandle<String> iso_string"
          ],
          "return_type": "std::optional<ParsedISO8601Result>",
          "logic": "Parses a TimeZoneIdentifier from the input string."
        },
        {
          "name": "ParseTemporalRelativeToString",
          "parameters": [
            "Isolate* isolate",
            "DirectHandle<String> iso_string"
          ],
          "return_type": "std::optional<ParsedISO8601Result>",
          "logic": "Parses a TemporalRelativeToString from the input string."
        },
        {
          "name": "ParseCalendarName",
          "parameters": [
            "Isolate* isolate",
            "DirectHandle<String> iso_string"
          ],
          "return_type": "std::optional<ParsedISO8601Result>",
          "logic": "Parses a CalendarName from the input string."
        },
        {
          "name": "ParseTemporalDurationString",
          "parameters": [
            "Isolate* isolate",
            "DirectHandle<String> iso_string"
          ],
          "return_type": "std::optional<ParsedISO8601Duration>",
          "logic": "Parses a TemporalDurationString from the input string."
        },
        {
          "name": "ParseTimeZoneNumericUTCOffset",
          "parameters": [
            "Isolate* isolate",
            "DirectHandle<String> iso_string"
          ],
          "return_type": "std::optional<ParsedISO8601Result>",
          "logic": "Parses a TimeZoneNumericUTCOffset from the input string."
        }
      ]
    }
  ],
  "functions": []
}