{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/extensions/cputracemark-extension.h",
  "imports": [
    "include/v8-extension.h",
    "src/base/strings.h"
  ],
  "classes": [
    {
      "name": "v8::internal::CpuTraceMarkExtension",
      "properties": [
        "buffer_[50]"
      ],
      "methods": [
        {
          "name": "CpuTraceMarkExtension",
          "parameters": [
            "const char* fun_name"
          ],
          "return_type": "constructor",
          "logic": "Constructor for the CpuTraceMarkExtension. It initializes the base v8::Extension class with the name \"v8/cpumark\" and the generated source code from BuildSource, which is a native function declaration."
        },
        {
          "name": "GetNativeFunctionTemplate",
          "parameters": [
            "v8::Isolate* isolate",
            "v8::Local<v8::String> name"
          ],
          "return_type": "v8::Local<v8::FunctionTemplate>",
          "logic": "Overrides the base class method to provide a function template for the extension's native function. The actual implementation is not provided in this header file but should be defined in the corresponding .cc file."
        },
        {
          "name": "Mark",
          "parameters": [
            "const v8::FunctionCallbackInfo<v8::Value>& info"
          ],
          "return_type": "void",
          "logic": "Static function that serves as the callback for the native function. It's expected to contain the logic for marking CPU traces. The implementation is not provided in this header file."
        },
        {
          "name": "BuildSource",
          "parameters": [
            "char* buf",
            "size_t size",
            "const char* fun_name"
          ],
          "return_type": "const char*",
          "logic": "Static function that builds the JavaScript source code for the native function declaration. It uses base::SNPrintF to format the string 'native function %s();' with the provided function name and store it in the provided buffer."
        }
      ]
    }
  ],
  "functions": [],
  "unknowns": []
}