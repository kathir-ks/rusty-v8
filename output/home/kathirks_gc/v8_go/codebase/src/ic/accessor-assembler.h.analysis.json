{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/ic/accessor-assembler.h",
  "imports": [
    "<optional>",
    "src/codegen/code-stub-assembler.h",
    "src/compiler/code-assembler.h",
    "src/objects/dictionary.h"
  ],
  "classes": [
    {
      "name": "AccessorAssembler",
      "properties": [],
      "methods": [
        {
          "name": "AccessorAssembler",
          "parameters": [
            "compiler::CodeAssemblerState* state"
          ],
          "return_type": "void",
          "logic": "Constructor for the AccessorAssembler class. Initializes the CodeStubAssembler with the given state."
        },
        {
          "name": "GenerateLoadIC",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates inline cache (IC) code for loading properties."
        },
        {
          "name": "GenerateLoadIC_Megamorphic",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates LoadIC code for megamorphic property loads (many different object shapes)."
        },
        {
          "name": "GenerateLoadIC_Noninlined",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates LoadIC code that is not inlined into the bytecode handlers."
        },
        {
          "name": "GenerateLoadIC_NoFeedback",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates LoadIC code without feedback."
        },
        {
          "name": "GenerateLoadGlobalIC_NoFeedback",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates LoadGlobalIC code without feedback."
        },
        {
          "name": "GenerateLoadICTrampoline",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates a trampoline for LoadIC calls."
        },
        {
          "name": "GenerateLoadICBaseline",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates baseline LoadIC code."
        },
        {
          "name": "GenerateLoadICTrampoline_Megamorphic",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates a megamorphic trampoline for LoadIC calls."
        },
        {
          "name": "GenerateLoadSuperIC",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates LoadIC code for super properties."
        },
        {
          "name": "GenerateLoadSuperICBaseline",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates baseline LoadIC code for super properties."
        },
        {
          "name": "GenerateKeyedLoadIC",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates inline cache (IC) code for loading array elements/keyed properties."
        },
        {
          "name": "GenerateEnumeratedKeyedLoadIC",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates KeyedLoadIC code for enumerated properties."
        },
        {
          "name": "GenerateKeyedLoadIC_Megamorphic",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates KeyedLoadIC code for megamorphic property loads (many different object shapes)."
        },
        {
          "name": "GenerateKeyedLoadIC_PolymorphicName",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates KeyedLoadIC code for polymorphic names."
        },
        {
          "name": "GenerateKeyedLoadICTrampoline",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates a trampoline for KeyedLoadIC calls."
        },
        {
          "name": "GenerateKeyedLoadICBaseline",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates baseline KeyedLoadIC code."
        },
        {
          "name": "GenerateEnumeratedKeyedLoadICBaseline",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates baseline EnumeratedKeyedLoadIC code."
        },
        {
          "name": "GenerateKeyedLoadICTrampoline_Megamorphic",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates a megamorphic trampoline for KeyedLoadIC calls."
        },
        {
          "name": "GenerateStoreIC",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates inline cache (IC) code for storing properties."
        },
        {
          "name": "GenerateStoreIC_Megamorphic",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates StoreIC code for megamorphic property stores (many different object shapes)."
        },
        {
          "name": "GenerateStoreICTrampoline",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates a trampoline for StoreIC calls."
        },
        {
          "name": "GenerateStoreICTrampoline_Megamorphic",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates a megamorphic trampoline for StoreIC calls."
        },
        {
          "name": "GenerateStoreICBaseline",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates baseline StoreIC code."
        },
        {
          "name": "GenerateDefineNamedOwnIC",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates inline cache (IC) code for defining named own properties."
        },
        {
          "name": "GenerateDefineNamedOwnICTrampoline",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates a trampoline for DefineNamedOwnIC calls."
        },
        {
          "name": "GenerateDefineNamedOwnICBaseline",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates baseline DefineNamedOwnIC code."
        },
        {
          "name": "GenerateStoreGlobalIC",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates inline cache (IC) code for storing global properties."
        },
        {
          "name": "GenerateStoreGlobalICTrampoline",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates a trampoline for StoreGlobalIC calls."
        },
        {
          "name": "GenerateStoreGlobalICBaseline",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates baseline StoreGlobalIC code."
        },
        {
          "name": "GenerateCloneObjectIC",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates inline cache (IC) code for cloning objects."
        },
        {
          "name": "GenerateCloneObjectICBaseline",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates baseline CloneObjectIC code."
        },
        {
          "name": "GenerateCloneObjectIC_Slow",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates slow-path CloneObjectIC code."
        },
        {
          "name": "GenerateKeyedHasIC",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates inline cache (IC) code for checking keyed property existence (in)."
        },
        {
          "name": "GenerateKeyedHasICBaseline",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates baseline KeyedHasIC code."
        },
        {
          "name": "GenerateKeyedHasIC_Megamorphic",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates KeyedHasIC code for megamorphic property checks."
        },
        {
          "name": "GenerateKeyedHasIC_PolymorphicName",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates KeyedHasIC code for polymorphic names."
        },
        {
          "name": "GenerateLoadGlobalIC",
          "parameters": [
            "TypeofMode typeof_mode"
          ],
          "return_type": "void",
          "logic": "Generates LoadGlobalIC code with a specified typeof mode."
        },
        {
          "name": "GenerateLoadGlobalICTrampoline",
          "parameters": [
            "TypeofMode typeof_mode"
          ],
          "return_type": "void",
          "logic": "Generates a trampoline for LoadGlobalIC calls with a specified typeof mode."
        },
        {
          "name": "GenerateLoadGlobalICBaseline",
          "parameters": [
            "TypeofMode typeof_mode"
          ],
          "return_type": "void",
          "logic": "Generates baseline LoadGlobalIC code with a specified typeof mode."
        },
        {
          "name": "GenerateLookupGlobalIC",
          "parameters": [
            "TypeofMode typeof_mode"
          ],
          "return_type": "void",
          "logic": "Generates LookupGlobalIC code with a specified typeof mode."
        },
        {
          "name": "GenerateLookupGlobalICTrampoline",
          "parameters": [
            "TypeofMode typeof_mode"
          ],
          "return_type": "void",
          "logic": "Generates a trampoline for LookupGlobalIC calls with a specified typeof mode."
        },
        {
          "name": "GenerateLookupGlobalICBaseline",
          "parameters": [
            "TypeofMode typeof_mode"
          ],
          "return_type": "void",
          "logic": "Generates baseline LookupGlobalIC code with a specified typeof mode."
        },
        {
          "name": "GenerateLookupContextTrampoline",
          "parameters": [
            "TypeofMode typeof_mode",
            "ContextKind context_kind"
          ],
          "return_type": "void",
          "logic": "Generates a trampoline for LookupContext calls with specified typeof mode and context kind."
        },
        {
          "name": "GenerateLookupContextBaseline",
          "parameters": [
            "TypeofMode typeof_mode",
            "ContextKind context_kind"
          ],
          "return_type": "void",
          "logic": "Generates baseline LookupContext code with a specified typeof mode and context kind."
        },
        {
          "name": "GenerateKeyedStoreIC",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates inline cache (IC) code for storing array elements/keyed properties."
        },
        {
          "name": "GenerateKeyedStoreICTrampoline",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates a trampoline for KeyedStoreIC calls."
        },
        {
          "name": "GenerateKeyedStoreICTrampoline_Megamorphic",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates a megamorphic trampoline for KeyedStoreIC calls."
        },
        {
          "name": "GenerateKeyedStoreICBaseline",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates baseline KeyedStoreIC code."
        },
        {
          "name": "GenerateDefineKeyedOwnIC",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates code for DefineKeyedOwnIC (define a keyed own property)."
        },
        {
          "name": "GenerateDefineKeyedOwnICTrampoline",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates a trampoline for DefineKeyedOwnIC calls."
        },
        {
          "name": "GenerateDefineKeyedOwnICBaseline",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates baseline DefineKeyedOwnIC code."
        },
        {
          "name": "GenerateStoreInArrayLiteralIC",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates code for storing into array literals (StoreInArrayLiteralIC)."
        },
        {
          "name": "GenerateStoreInArrayLiteralICBaseline",
          "parameters": [],
          "return_type": "void",
          "logic": "Generates baseline StoreInArrayLiteralIC code."
        },
        {
          "name": "TryProbeStubCache",
          "parameters": [
            "StubCache* stub_cache",
            "TNode<JSAny> lookup_start_object",
            "TNode<Map> lookup_start_object_map",
            "TNode<Name> name",
            "Label* if_handler",
            "TVariable<MaybeObject>* var_handler",
            "Label* if_miss"
          ],
          "return_type": "void",
          "logic": "Tries to probe the stub cache for a property lookup."
        },
        {
          "name": "TryProbeStubCache",
          "parameters": [
            "StubCache* stub_cache",
            "TNode<JSAny> lookup_start_object",
            "TNode<Name> name",
            "Label* if_handler",
            "TVariable<MaybeObject>* var_handler",
            "Label* if_miss"
          ],
          "return_type": "void",
          "logic": "Tries to probe the stub cache for a property lookup, loading the receiver map."
        },
        {
          "name": "StubCachePrimaryOffsetForTesting",
          "parameters": [
            "TNode<Name> name",
            "TNode<Map> map"
          ],
          "return_type": "TNode<IntPtrT>",
          "logic": "Calculates the primary offset in the stub cache for testing purposes."
        },
        {
          "name": "StubCacheSecondaryOffsetForTesting",
          "parameters": [
            "TNode<Name> name",
            "TNode<Map> map"
          ],
          "return_type": "TNode<IntPtrT>",
          "logic": "Calculates the secondary offset in the stub cache for testing purposes."
        },
        {
          "name": "LoadGlobalIC",
          "parameters": [
            "TNode<HeapObject> maybe_feedback_vector",
            "const LazyNode<TaggedIndex>& lazy_slot",
            "const LazyNode<Context>& lazy_context",
            "const LazyNode<Name>& lazy_name",
            "TypeofMode typeof_mode",
            "ExitPoint* exit_point"
          ],
          "return_type": "void",
          "logic": "Implements the LoadGlobalIC logic using lazy nodes for evaluation."
        },
        {
          "name": "LoadIC_BytecodeHandler",
          "parameters": [
            "const LazyLoadICParameters* p",
            "ExitPoint* exit_point"
          ],
          "return_type": "void",
          "logic": "Specialized LoadIC for inlined bytecode handlers, optimizing for common paths."
        },
        {
          "name": "LoadHandlerDataField",
          "parameters": [
            "TNode<DataHandler> handler",
            "int data_index"
          ],
          "return_type": "TNode<MaybeObject>",
          "logic": "Loads the dataX field from the DataHandler object."
        }
      ]
    },
    {
      "name": "ExitPoint",
      "properties": [],
      "methods": [
        {
          "name": "ExitPoint",
          "parameters": [
            "CodeStubAssembler* assembler"
          ],
          "return_type": "void",
          "logic": "Constructor for direct exit points."
        },
        {
          "name": "ExitPoint",
          "parameters": [
            "CodeStubAssembler* assembler",
            "const IndirectReturnHandler& indirect_return_handler"
          ],
          "return_type": "void",
          "logic": "Constructor for indirect exit points with a handler function."
        },
        {
          "name": "ExitPoint",
          "parameters": [
            "CodeStubAssembler* assembler",
            "CodeAssemblerLabel* out",
            "compiler::CodeAssembler::TVariable<Object>* var_result"
          ],
          "return_type": "void",
          "logic": "Constructor for indirect exit points with a label and variable for the result."
        },
        {
          "name": "ReturnCallRuntime",
          "parameters": [
            "Runtime::FunctionId function",
            "TNode<Context> context",
            "TArgs... args"
          ],
          "return_type": "void",
          "logic": "Returns a call to a runtime function, either as a tail call or storing the result."
        },
        {
          "name": "ReturnCallBuiltin",
          "parameters": [
            "Builtin builtin",
            "TNode<Context> context",
            "TArgs... args"
          ],
          "return_type": "void",
          "logic": "Returns a call to a builtin function, either as a tail call or storing the result."
        },
        {
          "name": "ReturnCallStub",
          "parameters": [
            "const CallInterfaceDescriptor& descriptor",
            "TNode<Code> target",
            "TNode<Context> context",
            "TArgs... args"
          ],
          "return_type": "void",
          "logic": "Returns a call to a code stub, either as a tail call or storing the result."
        },
        {
          "name": "Return",
          "parameters": [
            "const TNode<Object> result"
          ],
          "return_type": "void",
          "logic": "Returns a value, either as a tail call or storing the result."
        },
        {
          "name": "IsDirect",
          "parameters": [],
          "return_type": "bool",
          "logic": "Checks if the exit point is a direct return (tail call)."
        }
      ]
    }
  ],
  "functions": []
}