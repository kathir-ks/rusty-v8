{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/wasm/module-instantiate.h",
  "imports": [
    "<stdint.h>",
    "<optional>",
    "src/common/message-template.h",
    "src/objects/code-kind.h",
    "src/wasm/wasm-value.h",
    "src/wasm/well-known-imports.h"
  ],
  "classes": [
    {
      "name": "ResolvedWasmImport",
      "properties": [
        "kind_",
        "well_known_status_",
        "suspend_",
        "callable_",
        "trusted_function_data_"
      ],
      "methods": [
        {
          "name": "ResolvedWasmImport",
          "parameters": [
            "DirectHandle<WasmTrustedInstanceData> trusted_instance_data",
            "int func_index",
            "DirectHandle<JSReceiver> callable",
            "const wasm::CanonicalSig* sig",
            "CanonicalTypeIndex expected_sig_id",
            "WellKnownImport preknown_import"
          ],
          "return_type": "V8_EXPORT_PRIVATE",
          "logic": "Constructor for the ResolvedWasmImport class.  Resolves which import call wrapper is required for the given JS callable. Provides the kind of wrapper needed, the ultimate target callable, and the suspender object if applicable."
        },
        {
          "name": "kind",
          "parameters": [],
          "return_type": "ImportCallKind",
          "logic": "Returns the ImportCallKind for this import."
        },
        {
          "name": "well_known_status",
          "parameters": [],
          "return_type": "WellKnownImport",
          "logic": "Returns the WellKnownImport status for this import."
        },
        {
          "name": "suspend",
          "parameters": [],
          "return_type": "Suspend",
          "logic": "Returns the Suspend status for this import."
        },
        {
          "name": "callable",
          "parameters": [],
          "return_type": "DirectHandle<JSReceiver>",
          "logic": "Returns the JSReceiver representing the callable."
        },
        {
          "name": "trusted_function_data",
          "parameters": [],
          "return_type": "DirectHandle<WasmFunctionData>",
          "logic": "Returns the trusted WasmFunctionData associated with the callable."
        },
        {
          "name": "SetCallable",
          "parameters": [
            "Isolate* isolate",
            "Tagged<JSReceiver> callable"
          ],
          "return_type": "void",
          "logic": "Sets the callable (internal helper)"
        },
        {
          "name": "SetCallable",
          "parameters": [
            "Isolate* isolate",
            "DirectHandle<JSReceiver> callable"
          ],
          "return_type": "void",
          "logic": "Sets the callable (internal helper)"
        },
        {
          "name": "ComputeKind",
          "parameters": [
            "DirectHandle<WasmTrustedInstanceData> trusted_instance_data",
            "int func_index",
            "const wasm::CanonicalSig* expected_sig",
            "CanonicalTypeIndex expected_canonical_type_index",
            "WellKnownImport preknown_import"
          ],
          "return_type": "ImportCallKind",
          "logic": "Computes the ImportCallKind based on the provided information."
        }
      ]
    },
    {
      "name": "WrapperCompilationInfo",
      "properties": [
        "code_kind",
        "import_kind",
        "expected_arity",
        "suspend"
      ],
      "methods": []
    }
  ],
  "functions": [
    {
      "name": "InstantiateToInstanceObject",
      "parameters": [
        "Isolate* isolate",
        "ErrorThrower* thrower",
        "DirectHandle<WasmModuleObject> module_object",
        "MaybeDirectHandle<JSReceiver> imports",
        "MaybeDirectHandle<JSArrayBuffer> memory"
      ],
      "return_type": "MaybeDirectHandle<WasmInstanceObject>",
      "logic": "Instantiates a WasmModuleObject into a WasmInstanceObject."
    },
    {
      "name": "InitializeElementSegment",
      "parameters": [
        "Zone* zone",
        "Isolate* isolate",
        "DirectHandle<WasmTrustedInstanceData> trusted_instance_data",
        "DirectHandle<WasmTrustedInstanceData> shared_trusted_instance_data",
        "uint32_t segment_index"
      ],
      "return_type": "std::optional<MessageTemplate>",
      "logic": "Initializes a segment at a given index of the segment array of the wasm instance."
    },
    {
      "name": "CreateMapForType",
      "parameters": [
        "Isolate* isolate",
        "const WasmModule* module",
        "ModuleTypeIndex type_index",
        "DirectHandle<FixedArray> maybe_shared_maps"
      ],
      "return_type": "V8_EXPORT_PRIVATE void",
      "logic": "Creates a Map object for a given Wasm type."
    }
  ]
}