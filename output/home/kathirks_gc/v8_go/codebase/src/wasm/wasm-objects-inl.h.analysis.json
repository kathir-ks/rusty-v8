{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/wasm/wasm-objects-inl.h",
  "imports": [
    "<type_traits>",
    "src/base/memory.h",
    "src/common/ptr-compr.h",
    "src/heap/heap-write-barrier-inl.h",
    "src/objects/contexts-inl.h",
    "src/objects/foreign.h",
    "src/objects/heap-number.h",
    "src/objects/js-array-buffer-inl.h",
    "src/objects/js-function-inl.h",
    "src/objects/js-objects-inl.h",
    "src/objects/managed.h",
    "src/objects/oddball-inl.h",
    "src/objects/script-inl.h",
    "src/roots/roots.h",
    "src/wasm/wasm-code-manager.h",
    "src/wasm/wasm-module.h",
    "src/wasm/wasm-objects.h",
    "third_party/fp16/src/include/fp16.h",
    "src/wasm/interpreter/wasm-interpreter-objects.h",
    "src/objects/object-macros.h",
    "torque-generated/src/wasm/wasm-objects-tq-inl.inc"
  ],
  "classes": [
    {
      "name": "WasmModuleObject",
      "properties": [],
      "methods": [
        {
          "name": "native_module",
          "parameters": [],
          "return_type": "wasm::NativeModule*",
          "logic": "Returns the underlying NativeModule object associated with this WasmModuleObject."
        },
        {
          "name": "shared_native_module",
          "parameters": [],
          "return_type": "const std::shared_ptr<wasm::NativeModule>&",
          "logic": "Returns a shared pointer to the underlying NativeModule object associated with this WasmModuleObject."
        },
        {
          "name": "module",
          "parameters": [],
          "return_type": "const wasm::WasmModule*",
          "logic": "Returns the WasmModule object associated with the NativeModule."
        },
        {
          "name": "is_asm_js",
          "parameters": [],
          "return_type": "bool",
          "logic": "Checks if the WasmModuleObject represents an asm.js module."
        }
      ]
    },
    {
      "name": "WasmGlobalObject",
      "properties": [],
      "methods": [
        {
          "name": "type",
          "parameters": [],
          "return_type": "wasm::ValueType",
          "logic": "Retrieves the ValueType associated with this WasmGlobalObject, ensuring it's valid. Sanity check to avoid sandbox violation."
        },
        {
          "name": "set_type",
          "parameters": [
            "wasm::ValueType value"
          ],
          "return_type": "void",
          "logic": "Sets the ValueType associated with this WasmGlobalObject."
        },
        {
          "name": "type_size",
          "parameters": [],
          "return_type": "int",
          "logic": "Returns the size of the ValueType."
        },
        {
          "name": "address",
          "parameters": [],
          "return_type": "Address",
          "logic": "Returns the memory address of the global variable's storage."
        },
        {
          "name": "GetI32",
          "parameters": [],
          "return_type": "int32_t",
          "logic": "Reads an int32_t value from the global's memory location."
        },
        {
          "name": "GetI64",
          "parameters": [],
          "return_type": "int64_t",
          "logic": "Reads an int64_t value from the global's memory location."
        },
        {
          "name": "GetF32",
          "parameters": [],
          "return_type": "float",
          "logic": "Reads a float value from the global's memory location."
        },
        {
          "name": "GetF64",
          "parameters": [],
          "return_type": "double",
          "logic": "Reads a double value from the global's memory location."
        },
        {
          "name": "GetS128RawBytes",
          "parameters": [],
          "return_type": "uint8_t*",
          "logic": "Returns a pointer to raw bytes of s128 stored in global."
        },
        {
          "name": "GetRef",
          "parameters": [],
          "return_type": "DirectHandle<Object>",
          "logic": "Retrieves a reference (object) stored in the global's memory location."
        },
        {
          "name": "SetI32",
          "parameters": [
            "int32_t value"
          ],
          "return_type": "void",
          "logic": "Writes an int32_t value to the global's memory location."
        },
        {
          "name": "SetI64",
          "parameters": [
            "int64_t value"
          ],
          "return_type": "void",
          "logic": "Writes an int64_t value to the global's memory location."
        },
        {
          "name": "SetF32",
          "parameters": [
            "float value"
          ],
          "return_type": "void",
          "logic": "Writes a float value to the global's memory location."
        },
        {
          "name": "SetF64",
          "parameters": [
            "double value"
          ],
          "return_type": "void",
          "logic": "Writes a double value to the global's memory location."
        },
        {
          "name": "SetRef",
          "parameters": [
            "DirectHandle<Object> value"
          ],
          "return_type": "void",
          "logic": "Writes a reference (object) to the global's memory location."
        }
      ]
    },
    {
      "name": "WasmTrustedInstanceData",
      "properties": [],
      "methods": [
        {
          "name": "clear_padding",
          "parameters": [],
          "return_type": "void",
          "logic": "Clears optional padding bytes in the object."
        },
        {
          "name": "memory_object",
          "parameters": [
            "int memory_index"
          ],
          "return_type": "Tagged<WasmMemoryObject>",
          "logic": "Returns the WasmMemoryObject at the given index."
        },
        {
          "name": "memory_base",
          "parameters": [
            "int memory_index"
          ],
          "return_type": "uint8_t*",
          "logic": "Returns the base address of the Wasm memory at the given index."
        },
        {
          "name": "memory_size",
          "parameters": [
            "int memory_index"
          ],
          "return_type": "size_t",
          "logic": "Returns the size of the Wasm memory at the given index."
        },
        {
          "name": "dispatch_table",
          "parameters": [
            "uint32_t table_index"
          ],
          "return_type": "Tagged<WasmDispatchTable>",
          "logic": "Returns the WasmDispatchTable at the given index."
        },
        {
          "name": "has_dispatch_table",
          "parameters": [
            "uint32_t table_index"
          ],
          "return_type": "bool",
          "logic": "Checks if a WasmDispatchTable exists at the given index."
        },
        {
          "name": "native_module",
          "parameters": [],
          "return_type": "wasm::NativeModule*",
          "logic": "Returns the NativeModule associated with this instance."
        },
        {
          "name": "module_object",
          "parameters": [],
          "return_type": "Tagged<WasmModuleObject>",
          "logic": "Returns the WasmModuleObject associated with this instance."
        },
        {
          "name": "module",
          "parameters": [],
          "return_type": "const wasm::WasmModule*",
          "logic": "Returns the WasmModule associated with this instance."
        }
      ]
    },
    {
      "name": "ImportedFunctionEntry",
      "properties": [],
      "methods": []
    },
    {
      "name": "WasmDispatchTable",
      "properties": [],
      "methods": [
        {
          "name": "offheap_data",
          "parameters": [],
          "return_type": "WasmDispatchTableData*",
          "logic": "Gets the off-heap data associated with this dispatch table."
        },
        {
          "name": "table_type",
          "parameters": [],
          "return_type": "wasm::CanonicalValueType",
          "logic": "Returns the canonical value type of the table."
        },
        {
          "name": "set_table_type",
          "parameters": [
            "wasm::CanonicalValueType type"
          ],
          "return_type": "void",
          "logic": "Sets the canonical value type of the table."
        },
        {
          "name": "clear_entry_padding",
          "parameters": [
            "int index"
          ],
          "return_type": "void",
          "logic": "Clears padding bytes for a given entry in the table."
        },
        {
          "name": "length",
          "parameters": [
            "AcquireLoadTag"
          ],
          "return_type": "int",
          "logic": "Returns the length of the table with acquire load tag."
        },
        {
          "name": "length",
          "parameters": [],
          "return_type": "int",
          "logic": "Returns the length of the table."
        },
        {
          "name": "capacity",
          "parameters": [],
          "return_type": "int",
          "logic": "Returns the capacity of the table."
        },
        {
          "name": "implicit_arg",
          "parameters": [
            "int index"
          ],
          "return_type": "Tagged<Object>",
          "logic": "Returns the implicit argument for a given entry in the table."
        },
        {
          "name": "target",
          "parameters": [
            "int index"
          ],
          "return_type": "WasmCodePointer",
          "logic": "Returns the target code pointer for a given entry in the table."
        },
        {
          "name": "sig",
          "parameters": [
            "int index"
          ],
          "return_type": "wasm::CanonicalTypeIndex",
          "logic": "Returns the signature index for a given entry in the table."
        },
        {
          "name": "function_index",
          "parameters": [
            "int index"
          ],
          "return_type": "uint32_t",
          "logic": "Returns function index for a given entry in the table if wasm jitless mode is enabled."
        }
      ]
    },
    {
      "name": "WasmExportedFunction",
      "properties": [],
      "methods": []
    },
    {
      "name": "WasmImportData",
      "properties": [],
      "methods": [
        {
          "name": "suspend",
          "parameters": [],
          "return_type": "wasm::Suspend",
          "logic": "Gets the suspend state."
        },
        {
          "name": "set_suspend",
          "parameters": [
            "wasm::Suspend value"
          ],
          "return_type": "void",
          "logic": "Sets the suspend state."
        },
        {
          "name": "table_slot",
          "parameters": [],
          "return_type": "uint32_t",
          "logic": "Gets the table slot."
        },
        {
          "name": "set_table_slot",
          "parameters": [
            "uint32_t value"
          ],
          "return_type": "void",
          "logic": "Sets the table slot."
        }
      ]
    },
    {
      "name": "WasmInternalFunction",
      "properties": [],
      "methods": [
        {
          "name": "call_target",
          "parameters": [],
          "return_type": "WasmCodePointer",
          "logic": "Returns the call target code pointer."
        },
        {
          "name": "set_call_target",
          "parameters": [
            "WasmCodePointer code_pointer"
          ],
          "return_type": "void",
          "logic": "Sets the call target code pointer."
        }
      ]
    },
    {
      "name": "WasmFunctionData",
      "properties": [],
      "methods": []
    },
    {
      "name": "WasmExportedFunctionData",
      "properties": [],
      "methods": [
        {
          "name": "sig_index",
          "parameters": [],
          "return_type": "wasm::CanonicalTypeIndex",
          "logic": "Returns the canonical type index of the signature."
        },
        {
          "name": "is_promising",
          "parameters": [],
          "return_type": "bool",
          "logic": "Determines if the function is a promise."
        }
      ]
    },
    {
      "name": "WasmJSFunctionData",
      "properties": [],
      "methods": [
        {
          "name": "sig_index",
          "parameters": [],
          "return_type": "wasm::CanonicalTypeIndex",
          "logic": "Returns the canonical type index of the signature."
        },
        {
          "name": "offheap_data",
          "parameters": [],
          "return_type": "WasmJSFunctionData::OffheapData*",
          "logic": "Gets the off-heap data associated with this WasmJSFunctionData."
        }
      ]
    },
    {
      "name": "WasmJSFunction",
      "properties": [],
      "methods": []
    },
    {
      "name": "WasmCapiFunctionData",
      "properties": [],
      "methods": [
        {
          "name": "sig_index",
          "parameters": [],
          "return_type": "wasm::CanonicalTypeIndex",
          "logic": "Returns the canonical type index of the signature."
        }
      ]
    },
    {
      "name": "WasmCapiFunction",
      "properties": [],
      "methods": []
    },
    {
      "name": "WasmExternalFunction",
      "properties": [],
      "methods": [
        {
          "name": "func_ref",
          "parameters": [],
          "return_type": "Tagged<WasmFuncRef>",
          "logic": "Returns the function reference."
        }
      ]
    },
    {
      "name": "WasmTypeInfo",
      "properties": [],
      "methods": [
        {
          "name": "type",
          "parameters": [],
          "return_type": "wasm::CanonicalValueType",
          "logic": "Returns the canonical value type of the WasmTypeInfo."
        },
        {
          "name": "type_index",
          "parameters": [],
          "return_type": "wasm::CanonicalTypeIndex",
          "logic": "Returns the canonical type index of the WasmTypeInfo."
        },
        {
          "name": "element_type",
          "parameters": [],
          "return_type": "wasm::CanonicalValueType",
          "logic": "Returns the canonical value type of the element of the WasmTypeInfo."
        }
      ]
    },
    {
      "name": "WasmTableObject",
      "properties": [],
      "methods": [
        {
          "name": "type",
          "parameters": [
            "const wasm::WasmModule* module"
          ],
          "return_type": "wasm::ValueType",
          "logic": "Returns the ValueType of the WasmTableObject, given a WasmModule."
        },
        {
          "name": "canonical_type",
          "parameters": [
            "const wasm::WasmModule* module"
          ],
          "return_type": "wasm::CanonicalValueType",
          "logic": "Returns the canonical value type, given the module."
        },
        {
          "name": "unsafe_type",
          "parameters": [],
          "return_type": "wasm::ValueType",
          "logic": "Returns the ValueType without safety checks."
        },
        {
          "name": "is_in_bounds",
          "parameters": [
            "uint32_t entry_index"
          ],
          "return_type": "bool",
          "logic": "Checks if a given entry index is within the bounds of the table."
        },
        {
          "name": "is_table64",
          "parameters": [],
          "return_type": "bool",
          "logic": "Checks if the table uses 64 bit addressing."
        },
        {
          "name": "maximum_length_u64",
          "parameters": [],
          "return_type": "std::optional<uint64_t>",
          "logic": "Returns the maximum length of the table as a uint64_t, if defined."
        }
      ]
    },
    {
      "name": "WasmMemoryObject",
      "properties": [],
      "methods": [
        {
          "name": "has_maximum_pages",
          "parameters": [],
          "return_type": "bool",
          "logic": "Checks if the memory object has a maximum number of pages defined."
        },
        {
          "name": "is_memory64",
          "parameters": [],
          "return_type": "bool",
          "logic": "Check if memory uses 64 bit addressing."
        }
      ]
    },
    {
      "name": "WasmObject",
      "properties": [],
      "methods": [
        {
          "name": "ReadValueAt",
          "parameters": [
            "Isolate* isolate",
            "DirectHandle<HeapObject> obj",
            "wasm::CanonicalValueType type",
            "uint32_t offset"
          ],
          "return_type": "DirectHandle<Object>",
          "logic": "Reads a value of a specific type from a given offset in a Wasm object."
        },
        {
          "name": "FromNumber",
          "parameters": [
            "Tagged<Object> value"
          ],
          "return_type": "ElementType",
          "logic": "Converts a Number object to a given ElementType."
        }
      ]
    },
    {
      "name": "WasmStruct",
      "properties": [],
      "methods": [
        {
          "name": "EncodeInstanceSizeInMap",
          "parameters": [
            "int instance_size",
            "Tagged<Map> map"
          ],
          "return_type": "void",
          "logic": "Encodes the instance size of a WasmStruct into the map object."
        },
        {
          "name": "DecodeInstanceSizeFromMap",
          "parameters": [
            "Tagged<Map> map"
          ],
          "return_type": "int",
          "logic": "Decodes the instance size of a WasmStruct from the map object."
        },
        {
          "name": "GcSafeSize",
          "parameters": [
            "Tagged<Map> map"
          ],
          "return_type": "int",
          "logic": "Decodes the instance size from the map to determine the size for GC."
        },
        {
          "name": "RawFieldAddress",
          "parameters": [
            "int raw_offset"
          ],
          "return_type": "Address",
          "logic": "Calculates the raw field address of a wasm struct."
        },
        {
          "name": "RawField",
          "parameters": [
            "int raw_offset"
          ],
          "return_type": "ObjectSlot",
          "logic": "Returns the field given a raw offset."
        }
      ]
    },
    {
      "name": "WasmArray",
      "properties": [],
      "methods": [
        {
          "name": "type_index",
          "parameters": [
            "Tagged<Map> map"
          ],
          "return_type": "wasm::CanonicalTypeIndex",
          "logic": "Returns the type index given a map."
        },
        {
          "name": "GcSafeElementType",
          "parameters": [
            "Tagged<Map> map"
          ],
          "return_type": "const wasm::CanonicalValueType",
          "logic": "Return the element type, safe for GC."
        },
        {
          "name": "SizeFor",
          "parameters": [
            "Tagged<Map> map",
            "int length"
          ],
          "return_type": "int",
          "logic": "Returns the size for given map and length."
        },
        {
          "name": "element_offset",
          "parameters": [
            "uint32_t index"
          ],
          "return_type": "uint32_t",
          "logic": "Calculates the offset for an element."
        },
        {
          "name": "ElementAddress",
          "parameters": [
            "uint32_t index"
          ],
          "return_type": "Address",
          "logic": "Return the memory address of an element."
        },
        {
          "name": "ElementSlot",
          "parameters": [
            "uint32_t index"
          ],
          "return_type": "ObjectSlot",
          "logic": "Returns the object slot of an element."
        },
        {
          "name": "GetElement",
          "parameters": [
            "Isolate* isolate",
            "DirectHandle<WasmArray> array",
            "uint32_t index"
          ],
          "return_type": "DirectHandle<Object>",
          "logic": "Return the element at a given index."
        },
        {
          "name": "EncodeElementSizeInMap",
          "parameters": [
            "int element_size",
            "Tagged<Map> map"
          ],
          "return_type": "void",
          "logic": "Encodes the element size in a map."
        },
        {
          "name": "DecodeElementSizeFromMap",
          "parameters": [
            "Tagged<Map> map"
          ],
          "return_type": "int",
          "logic": "Decodes the element size from a map."
        }
      ]
    }
  ],
  "functions": []
}