{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/wasm/baseline/liftoff-compiler.h",
  "imports": [
    "src/wasm/function-compiler.h"
  ],
  "classes": [
    {
      "name": "LiftoffOptions",
      "properties": [
        "func_index",
        "for_debugging",
        "counters",
        "detected_features",
        "breakpoints",
        "debug_sidetable",
        "dead_breakpoint",
        "max_steps",
        "detect_nondeterminism",
        "deopt_info_bytecode_offset",
        "deopt_location_kind"
      ],
      "methods": [
        {
          "name": "is_initialized",
          "parameters": [],
          "return_type": "bool",
          "logic": "Checks if all non-optional fields of the LiftoffOptions object have been initialized (func_index >= 0)."
        },
        {
          "name": "set_func_index",
          "parameters": [
            "new_value"
          ],
          "return_type": "LiftoffOptions&",
          "logic": "Sets the value of the 'func_index' member.  Uses the SETTER macro."
        },
        {
          "name": "set_for_debugging",
          "parameters": [
            "new_value"
          ],
          "return_type": "LiftoffOptions&",
          "logic": "Sets the value of the 'for_debugging' member. Uses the SETTER macro."
        },
        {
          "name": "set_counters",
          "parameters": [
            "new_value"
          ],
          "return_type": "LiftoffOptions&",
          "logic": "Sets the value of the 'counters' member. Uses the SETTER macro."
        },
        {
          "name": "set_detected_features",
          "parameters": [
            "new_value"
          ],
          "return_type": "LiftoffOptions&",
          "logic": "Sets the value of the 'detected_features' member. Uses the SETTER macro."
        },
        {
          "name": "set_breakpoints",
          "parameters": [
            "new_value"
          ],
          "return_type": "LiftoffOptions&",
          "logic": "Sets the value of the 'breakpoints' member. Uses the SETTER macro."
        },
        {
          "name": "set_debug_sidetable",
          "parameters": [
            "new_value"
          ],
          "return_type": "LiftoffOptions&",
          "logic": "Sets the value of the 'debug_sidetable' member. Uses the SETTER macro."
        },
        {
          "name": "set_dead_breakpoint",
          "parameters": [
            "new_value"
          ],
          "return_type": "LiftoffOptions&",
          "logic": "Sets the value of the 'dead_breakpoint' member. Uses the SETTER macro."
        },
        {
          "name": "set_max_steps",
          "parameters": [
            "new_value"
          ],
          "return_type": "LiftoffOptions&",
          "logic": "Sets the value of the 'max_steps' member. Uses the SETTER macro."
        },
        {
          "name": "set_detect_nondeterminism",
          "parameters": [
            "new_value"
          ],
          "return_type": "LiftoffOptions&",
          "logic": "Sets the value of the 'detect_nondeterminism' member. Uses the SETTER macro."
        },
        {
          "name": "set_deopt_info_bytecode_offset",
          "parameters": [
            "new_value"
          ],
          "return_type": "LiftoffOptions&",
          "logic": "Sets the value of the 'deopt_info_bytecode_offset' member. Uses the SETTER macro."
        },
        {
          "name": "set_deopt_location_kind",
          "parameters": [
            "new_value"
          ],
          "return_type": "LiftoffOptions&",
          "logic": "Sets the value of the 'deopt_location_kind' member. Uses the SETTER macro."
        },
        {
          "name": "Set",
          "parameters": [
            "field_ptr",
            "new_value"
          ],
          "return_type": "LiftoffOptions&",
          "logic": "Private template function used by the SETTER macro to perform the actual setting of the LiftoffOptions fields, ensuring that the field is only set once."
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "ExecuteLiftoffCompilation",
      "parameters": [
        "CompilationEnv*",
        "const FunctionBody&",
        "const LiftoffOptions&"
      ],
      "return_type": "WasmCompilationResult",
      "logic": "Executes the Liftoff compilation process for a given function body with the specified options."
    },
    {
      "name": "GenerateLiftoffDebugSideTable",
      "parameters": [
        "const WasmCode*"
      ],
      "return_type": "std::unique_ptr<DebugSideTable>",
      "logic": "Generates a debug side table for the Liftoff compiler, used for debugging purposes."
    }
  ]
}