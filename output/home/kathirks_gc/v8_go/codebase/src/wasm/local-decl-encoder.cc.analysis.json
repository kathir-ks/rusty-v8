{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/wasm/local-decl-encoder.cc",
  "imports": [
    "src/wasm/local-decl-encoder.h",
    "src/codegen/signature.h",
    "src/wasm/leb-helper.h"
  ],
  "classes": [
    {
      "name": "LocalDeclEncoder",
      "properties": [
        "local_decls",
        "total",
        "sig"
      ],
      "methods": [
        {
          "name": "Prepend",
          "parameters": [
            "Zone* zone",
            "const uint8_t** start",
            "const uint8_t** end"
          ],
          "return_type": "void",
          "logic": "Prepends the encoded local declarations to a given buffer. Allocates a buffer in the provided zone, copies existing data to the end of the new buffer and writes the local declarations to the beginning, updates start and end pointers."
        },
        {
          "name": "Emit",
          "parameters": [
            "uint8_t* buffer"
          ],
          "return_type": "size_t",
          "logic": "Emits the encoded local declarations into a given buffer. Writes the number of local declaration groups, then iterates through each group, writing the count and type of locals in that group. Returns the number of bytes written to the buffer."
        },
        {
          "name": "AddLocals",
          "parameters": [
            "uint32_t count",
            "ValueType type"
          ],
          "return_type": "uint32_t",
          "logic": "Adds a group of local variables with the same type to the encoder.  Combines consecutive local declarations of the same type, keeping track of the total number of locals, and returns the index of the newly added locals."
        },
        {
          "name": "Size",
          "parameters": [],
          "return_type": "size_t",
          "logic": "Calculates the size in bytes required to encode all local declarations. This size is used to allocate sufficient buffer space for encoding."
        }
      ]
    }
  ],
  "functions": [],
  "structs": [
    {
      "name": "LocalDeclEncoderBuffer",
      "logic": "This struct is just a type tag for Zone::NewArray<T>(size_t) call."
    }
  ]
}