{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/wasm/leb-helper.h",
  "imports": [
    "<cstddef>",
    "<cstdint>"
  ],
  "classes": [
    {
      "name": "LEBHelper",
      "properties": [],
      "methods": [
        {
          "name": "write_u32v",
          "parameters": [
            "uint8_t** dest",
            "uint32_t val"
          ],
          "return_type": "void",
          "logic": "Writes a 32-bit unsigned LEB value to the destination pointer, updating the pointer to point after the last byte written. Uses bitwise operations to encode the value in LEB128 format."
        },
        {
          "name": "write_i32v",
          "parameters": [
            "uint8_t** dest",
            "int32_t val"
          ],
          "return_type": "void",
          "logic": "Writes a 32-bit signed LEB value to the destination pointer, updating the pointer to point after the last byte written. Uses bitwise operations to encode the value in LEB128 format, handling both positive and negative values correctly to avoid sign extension issues."
        },
        {
          "name": "write_u64v",
          "parameters": [
            "uint8_t** dest",
            "uint64_t val"
          ],
          "return_type": "void",
          "logic": "Writes a 64-bit unsigned LEB value to the destination pointer, updating the pointer to point after the last byte written. Uses bitwise operations to encode the value in LEB128 format."
        },
        {
          "name": "write_i64v",
          "parameters": [
            "uint8_t** dest",
            "int64_t val"
          ],
          "return_type": "void",
          "logic": "Writes a 64-bit signed LEB value to the destination pointer, updating the pointer to point after the last byte written. Uses bitwise operations to encode the value in LEB128 format, handling both positive and negative values correctly to avoid sign extension issues."
        },
        {
          "name": "sizeof_u32v",
          "parameters": [
            "size_t val"
          ],
          "return_type": "size_t",
          "logic": "Computes the number of bytes required to represent a 32-bit unsigned integer in LEB128 format."
        },
        {
          "name": "sizeof_i32v",
          "parameters": [
            "int32_t val"
          ],
          "return_type": "size_t",
          "logic": "Computes the number of bytes required to represent a 32-bit signed integer in LEB128 format."
        },
        {
          "name": "sizeof_u64v",
          "parameters": [
            "uint64_t val"
          ],
          "return_type": "size_t",
          "logic": "Computes the number of bytes required to represent a 64-bit unsigned integer in LEB128 format."
        },
        {
          "name": "sizeof_i64v",
          "parameters": [
            "int64_t val"
          ],
          "return_type": "size_t",
          "logic": "Computes the number of bytes required to represent a 64-bit signed integer in LEB128 format."
        }
      ]
    }
  ],
  "functions": [],
  "constants": [
    {
      "name": "kPaddedVarInt32Size",
      "value": "5",
      "type": "size_t"
    },
    {
      "name": "kMaxVarInt32Size",
      "value": "5",
      "type": "size_t"
    },
    {
      "name": "kMaxVarInt64Size",
      "value": "10",
      "type": "size_t"
    }
  ]
}