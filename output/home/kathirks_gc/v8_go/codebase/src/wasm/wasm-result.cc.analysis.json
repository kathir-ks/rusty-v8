{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/wasm/wasm-result.cc",
  "imports": [
    "src/wasm/wasm-result.h",
    "src/base/strings.h",
    "src/execution/isolate-inl.h",
    "src/heap/factory.h",
    "src/objects/objects.h"
  ],
  "classes": [
    {
      "name": "WasmError",
      "properties": [],
      "methods": [
        {
          "name": "FormatError",
          "parameters": [
            "const char* format",
            "va_list args"
          ],
          "return_type": "std::string",
          "logic": "Formats an error message string using a printf-style format string and variable arguments. Returns the formatted string."
        }
      ]
    },
    {
      "name": "ErrorThrower",
      "properties": [
        "isolate_",
        "error_type_",
        "error_msg_",
        "context_"
      ],
      "methods": [
        {
          "name": "Format",
          "parameters": [
            "ErrorType type",
            "const char* format",
            "va_list args"
          ],
          "return_type": "void",
          "logic": "Formats the error message and stores the error type. Prepends context to the error message if available. Only reports the first error."
        },
        {
          "name": "TypeError",
          "parameters": [
            "const char* format",
            "..."
          ],
          "return_type": "void",
          "logic": "Formats the error message as a TypeError."
        },
        {
          "name": "RangeError",
          "parameters": [
            "const char* format",
            "..."
          ],
          "return_type": "void",
          "logic": "Formats the error message as a RangeError."
        },
        {
          "name": "CompileError",
          "parameters": [
            "const char* format",
            "..."
          ],
          "return_type": "void",
          "logic": "Formats the error message as a CompileError."
        },
        {
          "name": "LinkError",
          "parameters": [
            "const char* format",
            "..."
          ],
          "return_type": "void",
          "logic": "Formats the error message as a LinkError."
        },
        {
          "name": "RuntimeError",
          "parameters": [
            "const char* format",
            "..."
          ],
          "return_type": "void",
          "logic": "Formats the error message as a RuntimeError."
        },
        {
          "name": "Reify",
          "parameters": [],
          "return_type": "DirectHandle<Object>",
          "logic": "Creates a JS error object based on the stored error type and message."
        },
        {
          "name": "Reset",
          "parameters": [],
          "return_type": "void",
          "logic": "Resets the error type and message."
        },
        {
          "name": "~ErrorThrower",
          "parameters": [],
          "return_type": "void",
          "logic": "Destructor for ErrorThrower, throws a JS exception if there is an error and no other exception is pending."
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "VPrintFToString",
      "parameters": [
        "std::string* str",
        "size_t str_offset",
        "const char* format",
        "va_list args"
      ],
      "return_type": "void",
      "logic": "Formats a string using a printf-style format string and variable arguments, appending to an existing string. Resizes the string buffer as needed to fit the formatted output."
    },
    {
      "name": "PrintFToString",
      "parameters": [
        "std::string* str",
        "size_t str_offset",
        "const char* format",
        "..."
      ],
      "return_type": "void",
      "logic": "Formats a string using a printf-style format string and variable arguments, appending to an existing string.  Wraps VPrintFToString with va_start/va_end."
    }
  ]
}