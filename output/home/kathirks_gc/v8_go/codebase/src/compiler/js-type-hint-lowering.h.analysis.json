{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/compiler/js-type-hint-lowering.h",
  "imports": [
    "src/base/flags.h",
    "src/compiler/graph-reducer.h",
    "src/deoptimizer/deoptimize-reason.h"
  ],
  "classes": [
    {
      "name": "JSTypeHintLowering",
      "properties": [
        "broker_",
        "jsgraph_",
        "flags_",
        "feedback_vector_"
      ],
      "methods": [
        {
          "name": "JSTypeHintLowering",
          "parameters": [
            "JSHeapBroker* broker",
            "JSGraph* jsgraph",
            "FeedbackVectorRef feedback_vector",
            "Flags flags"
          ],
          "return_type": "void",
          "logic": "Constructor for the JSTypeHintLowering class, initializes the broker, jsgraph, feedback_vector, and flags."
        },
        {
          "name": "ReduceUnaryOperation",
          "parameters": [
            "const Operator* op",
            "Node* operand",
            "Node* effect",
            "Node* control",
            "FeedbackSlot slot"
          ],
          "return_type": "LoweringResult",
          "logic": "Attempts to reduce a unary operation to a more specific simplified operation based on type feedback."
        },
        {
          "name": "ReduceBinaryOperation",
          "parameters": [
            "const Operator* op",
            "Node* left",
            "Node* right",
            "Node* effect",
            "Node* control",
            "FeedbackSlot slot"
          ],
          "return_type": "LoweringResult",
          "logic": "Attempts to reduce a binary operation to a more specific simplified operation based on type feedback."
        },
        {
          "name": "ReduceForInNextOperation",
          "parameters": [
            "Node* receiver",
            "Node* cache_array",
            "Node* cache_type",
            "Node* index",
            "Node* effect",
            "Node* control",
            "FeedbackSlot slot"
          ],
          "return_type": "LoweringResult",
          "logic": "Attempts to reduce a for..in next operation based on type feedback."
        },
        {
          "name": "ReduceForInPrepareOperation",
          "parameters": [
            "Node* enumerator",
            "Node* effect",
            "Node* control",
            "FeedbackSlot slot"
          ],
          "return_type": "LoweringResult",
          "logic": "Attempts to reduce a for..in prepare operation based on type feedback."
        },
        {
          "name": "ReduceToNumberOperation",
          "parameters": [
            "Node* value",
            "Node* effect",
            "Node* control",
            "FeedbackSlot slot"
          ],
          "return_type": "LoweringResult",
          "logic": "Attempts to reduce a ToNumber operation based on type feedback."
        },
        {
          "name": "ReduceCallOperation",
          "parameters": [
            "const Operator* op",
            "Node* const* args",
            "int arg_count",
            "Node* effect",
            "Node* control",
            "FeedbackSlot slot"
          ],
          "return_type": "LoweringResult",
          "logic": "Attempts to reduce a call operation to a more specific simplified operation based on type feedback."
        },
        {
          "name": "ReduceConstructOperation",
          "parameters": [
            "const Operator* op",
            "Node* const* args",
            "int arg_count",
            "Node* effect",
            "Node* control",
            "FeedbackSlot slot"
          ],
          "return_type": "LoweringResult",
          "logic": "Attempts to reduce a construct operation based on type feedback."
        },
        {
          "name": "ReduceGetIteratorOperation",
          "parameters": [
            "const Operator* op",
            "Node* obj",
            "Node* effect",
            "Node* control",
            "FeedbackSlot load_slot",
            "FeedbackSlot call_slot"
          ],
          "return_type": "LoweringResult",
          "logic": "Attempts to reduce a get iterator operation based on type feedback."
        },
        {
          "name": "ReduceLoadNamedOperation",
          "parameters": [
            "const Operator* op",
            "Node* effect",
            "Node* control",
            "FeedbackSlot slot"
          ],
          "return_type": "LoweringResult",
          "logic": "Attempts to reduce a named load operation based on type feedback."
        },
        {
          "name": "ReduceLoadKeyedOperation",
          "parameters": [
            "const Operator* op",
            "Node* obj",
            "Node* key",
            "Node* effect",
            "Node* control",
            "FeedbackSlot slot"
          ],
          "return_type": "LoweringResult",
          "logic": "Attempts to reduce a keyed load operation based on type feedback."
        },
        {
          "name": "ReduceStoreNamedOperation",
          "parameters": [
            "const Operator* op",
            "Node* obj",
            "Node* val",
            "Node* effect",
            "Node* control",
            "FeedbackSlot slot"
          ],
          "return_type": "LoweringResult",
          "logic": "Attempts to reduce a named store operation based on type feedback."
        },
        {
          "name": "ReduceStoreKeyedOperation",
          "parameters": [
            "const Operator* op",
            "Node* obj",
            "Node* key",
            "Node* val",
            "Node* effect",
            "Node* control",
            "FeedbackSlot slot"
          ],
          "return_type": "LoweringResult",
          "logic": "Attempts to reduce a keyed store operation based on type feedback."
        },
        {
          "name": "GetBinaryOperationHint",
          "parameters": [
            "FeedbackSlot slot"
          ],
          "return_type": "BinaryOperationHint",
          "logic": "Retrieves the binary operation hint from the feedback slot."
        },
        {
          "name": "GetCompareOperationHint",
          "parameters": [
            "FeedbackSlot slot"
          ],
          "return_type": "CompareOperationHint",
          "logic": "Retrieves the compare operation hint from the feedback slot."
        },
        {
          "name": "BuildDeoptIfFeedbackIsInsufficient",
          "parameters": [
            "FeedbackSlot slot",
            "Node* effect",
            "Node* control",
            "DeoptimizeReason reson"
          ],
          "return_type": "Node*",
          "logic": "Builds a deoptimization node if the feedback data is insufficient."
        },
        {
          "name": "broker",
          "parameters": [],
          "return_type": "JSHeapBroker*",
          "logic": "Returns the JSHeapBroker."
        },
        {
          "name": "jsgraph",
          "parameters": [],
          "return_type": "JSGraph*",
          "logic": "Returns the JSGraph."
        },
        {
          "name": "isolate",
          "parameters": [],
          "return_type": "Isolate*",
          "logic": "Returns the Isolate."
        },
        {
          "name": "flags",
          "parameters": [],
          "return_type": "Flags",
          "logic": "Returns the Flags."
        },
        {
          "name": "feedback_vector",
          "parameters": [],
          "return_type": "FeedbackVectorRef",
          "logic": "Returns the FeedbackVectorRef."
        }
      ]
    },
    {
      "name": "JSTypeHintLowering::LoweringResult",
      "properties": [
        "kind_",
        "value_",
        "effect_",
        "control_"
      ],
      "methods": [
        {
          "name": "value",
          "parameters": [],
          "return_type": "Node*",
          "logic": "Returns the value node."
        },
        {
          "name": "effect",
          "parameters": [],
          "return_type": "Node*",
          "logic": "Returns the effect node."
        },
        {
          "name": "control",
          "parameters": [],
          "return_type": "Node*",
          "logic": "Returns the control node."
        },
        {
          "name": "Changed",
          "parameters": [],
          "return_type": "bool",
          "logic": "Returns true if the lowering resulted in a change."
        },
        {
          "name": "IsExit",
          "parameters": [],
          "return_type": "bool",
          "logic": "Returns true if the lowering resulted in an exit (deoptimization)."
        },
        {
          "name": "IsSideEffectFree",
          "parameters": [],
          "return_type": "bool",
          "logic": "Returns true if the lowering resulted in a side-effect-free operation."
        },
        {
          "name": "SideEffectFree",
          "parameters": [
            "Node* value",
            "Node* effect",
            "Node* control"
          ],
          "return_type": "LoweringResult",
          "logic": "Creates a LoweringResult representing a side-effect-free operation."
        },
        {
          "name": "NoChange",
          "parameters": [],
          "return_type": "LoweringResult",
          "logic": "Creates a LoweringResult representing no change."
        },
        {
          "name": "Exit",
          "parameters": [
            "Node* control"
          ],
          "return_type": "LoweringResult",
          "logic": "Creates a LoweringResult representing an exit (deoptimization)."
        }
      ]
    }
  ],
  "functions": []
}