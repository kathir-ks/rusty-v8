{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/compiler/access-builder.cc",
  "error": "JSON parsing error",
  "raw_response": "```json\n{\n  \"file_path\": \"/home/kathirks_gc/v8_go/codebase/src/compiler/access-builder.cc\",\n  \"imports\": [\n    \"src/compiler/access-builder.h\",\n    \"src/compiler/type-cache.h\",\n    \"src/handles/handles-inl.h\",\n    \"src/objects/arguments.h\",\n    \"src/objects/contexts.h\",\n    \"src/objects/heap-number.h\",\n    \"src/objects/js-collection.h\",\n    \"src/objects/js-generator.h\",\n    \"src/objects/js-objects.h\",\n    \"src/objects/objects-inl.h\",\n    \"src/objects/ordered-hash-table.h\",\n    \"src/objects/source-text-module.h\",\n    \"src/objects/tagged-field.h\"\n  ],\n  \"classes\": [],\n  \"functions\": [\n    {\n      \"name\": \"AccessBuilder::ForExternalIntPtr\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing an external IntPtr. It specifies the base as untagged, no write barrier, and the machine type as IntPtr.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForMap\",\n      \"parameters\": [\n        \"WriteBarrierKind write_barrier\"\n      ],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the map of a HeapObject. It specifies the base as tagged, the offset of the map field, and the provided write barrier kind.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForHeapNumberValue\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the value field of a HeapNumber. It specifies the base as tagged, the offset of the value field, and the machine type as Float64.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForHeapInt32Value\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the lower 32-bit word of a HeapNumber's double value. It specifies the offset accordingly and the machine type as Int32.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForHeapInt32UpperValue\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the upper 32-bit word of a HeapNumber's double value (Exponent and sign). It specifies the offset accordingly and the machine type as Int32.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForHeapNumberOrOddballOrHoleValue\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns the same as ForHeapNumberValue(). Contains static assertions to prove that the relevant offsets for HeapNumber, Oddball and Hole are identical.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForBigIntBitfield\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the bitfield of a BigInt object. It specifies the base as tagged, the offset of the bitfield, and the machine type as Uint32.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForBigIntOptionalPadding\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object for accessing the optional padding field of a BigInt object, used to align the data. (Conditional compilation based on BIGINT_NEEDS_PADDING). Specifies the offset, type and machine type.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForBigIntLeastSignificantDigit64\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the least significant digit of a BigInt object. It specifies the base as tagged, the offset of the data start, and the machine type as Uint64.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSObjectPropertiesOrHash\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object for accessing the properties or hash field of a JSObject. Specifies tag, offset, type, machinetype and write_barrier_kind.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSObjectPropertiesOrHashKnownPointer\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object for accessing the properties or hash field of a JSObject with a known pointer. Specifies tag, offset, type, machine_type and write_barrier_kind.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSObjectElements\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the elements of a JSObject. It specifies the base as tagged, the offset of the elements field, and the machine type as TaggedPointer.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSObjectInObjectProperty\",\n      \"parameters\": [\n        \"MapRef map\",\n        \"int index\",\n        \"MachineType machine_type\"\n      ],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing an in-object property of a JSObject.  Calculates the offset based on the Map and index.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSObjectOffset\",\n      \"parameters\": [\n        \"int offset\",\n        \"WriteBarrierKind write_barrier_kind\"\n      ],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing a JSObject at a given offset. Uses provided write barrier.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSCollectionTable\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object for the table of a JSCollection.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSCollectionIteratorTable\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object for the table of a JSCollectionIterator.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSCollectionIteratorIndex\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object for the index of a JSCollectionIterator.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSExternalObjectValue\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the value of a JSExternalObject. It specifies the base as tagged, the offset of the value field, and the machine type as Pointer.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSExternalObjectPointerHandle\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the pointer handle of a JSExternalObject (Sandboxed environment only). Returns handle to the underlying pointer.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSFunctionPrototypeOrInitialMap\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the prototype or initial map of a JSFunction.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSFunctionContext\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the context of a JSFunction.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSFunctionSharedFunctionInfo\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the shared function info of a JSFunction.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSFunctionFeedbackCell\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the feedback cell of a JSFunction.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSFunctionDispatchHandleNoWriteBarrier\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the dispatch handle of a JSFunction (LeapTiering). No write barrier required.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSFunctionCode\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the code of a JSFunction. (Conditional compilation based on LeapTiering/Sandboxed environments)\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSBoundFunctionBoundTargetFunction\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the bound target function of a JSBoundFunction.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSBoundFunctionBoundThis\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the bound 'this' of a JSBoundFunction.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSBoundFunctionBoundArguments\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the bound arguments of a JSBoundFunction.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSGeneratorObjectContext\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the context of a JSGeneratorObject.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSGeneratorObjectFunction\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the function of a JSGeneratorObject.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSGeneratorObjectReceiver\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the receiver of a JSGeneratorObject.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSGeneratorObjectContinuation\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the continuation of a JSGeneratorObject.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSGeneratorObjectInputOrDebugPos\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the input or debug position of a JSGeneratorObject.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSGeneratorObjectParametersAndRegisters\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the parameters and registers of a JSGeneratorObject.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSGeneratorObjectResumeMode\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the resume mode of a JSGeneratorObject.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSAsyncFunctionObjectPromise\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the promise of a JSAsyncFunctionObject.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSAsyncGeneratorObjectQueue\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the queue of a JSAsyncGeneratorObject.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSAsyncGeneratorObjectIsAwaiting\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the is_awaiting flag of a JSAsyncGeneratorObject.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSArrayLength\",\n      \"parameters\": [\n        \"ElementsKind elements_kind\"\n      ],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the length of a JSArray. The properties of the access vary based on ElementsKind.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSArrayBufferBitField\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the bitfield of a JSArrayBuffer.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSArrayBufferByteLength\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the byte length of a JSArrayBuffer.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSArrayBufferViewBuffer\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the buffer of a JSArrayBufferView.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSArrayBufferViewByteLength\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the byte length of a JSArrayBufferView.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSArrayBufferViewByteOffset\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the byte offset of a JSArrayBufferView.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSArrayBufferViewBitField\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the bitfield of a JSArrayBufferView.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSTypedArrayLength\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the length of a JSTypedArray.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSTypedArrayBasePointer\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the base pointer of a JSTypedArray.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSTypedArrayExternalPointer\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the external pointer of a JSTypedArray.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSDataViewDataPointer\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the data pointer of a JSDataView.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSDateValue\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the value of a JSDate.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSDateField\",\n      \"parameters\": [\n        \"JSDate::FieldIndex index\"\n      ],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing a specific field of a JSDate (e.g., year, month, day).\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSIteratorResultDone\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the 'done' property of a JSIteratorResult.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSIteratorResultValue\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the 'value' property of a JSIteratorResult.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSPrimitiveWrapperValue\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the value of a JSPrimitiveWrapper.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSRegExpData\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the data of a JSRegExp.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSRegExpFlags\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the flags of a JSRegExp.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSRegExpLastIndex\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the last index of a JSRegExp.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSRegExpSource\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the source of a JSRegExp.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForFixedArrayLength\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the length of a FixedArray.\"\n    },\n        {\n      \"name\": \"AccessBuilder::ForWeakFixedArrayLength\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the length of a WeakFixedArray.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForSloppyArgumentsElementsContext\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the context of a SloppyArgumentsElements object.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForSloppyArgumentsElementsArguments\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the arguments of a SloppyArgumentsElements object.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForPropertyArrayLengthAndHash\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the length and hash of a PropertyArray.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForDescriptorArrayEnumCache\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the enum cache of a DescriptorArray.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForMapBitField\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the bitfield of a Map.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForMapBitField2\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the second bitfield of a Map.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForMapBitField3\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the third bitfield of a Map.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForMapDescriptors\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the descriptors of a Map.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForMapInstanceType\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the instance type of a Map.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForMapPrototype\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the prototype of a Map.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForMapNativeContext\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the native context of a Map.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForModuleRegularExports\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the regular exports of a SourceTextModule.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForModuleRegularImports\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the regular imports of a SourceTextModule.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForNameRawHashField\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the raw hash field of a Name.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForFreeSpaceSize\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the size of a FreeSpace object.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForStringLength\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the length of a String.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForConsStringFirst\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the first string of a ConsString.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForConsStringSecond\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the second string of a ConsString.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForThinStringActual\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the actual string of a ThinString.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForSlicedStringOffset\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the offset of a SlicedString.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForSlicedStringParent\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the parent string of a SlicedString.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForExternalStringResourceData\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the resource data of an ExternalString.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForSeqOneByteStringCharacter\",\n      \"parameters\": [],\n      \"return_type\": \"ElementAccess\",\n      \"logic\": \"Returns an ElementAccess object configured for accessing a character in a SeqOneByteString.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForSeqTwoByteStringCharacter\",\n      \"parameters\": [],\n      \"return_type\": \"ElementAccess\",\n      \"logic\": \"Returns an ElementAccess object configured for accessing a character in a SeqTwoByteString.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSArrayIteratorIteratedObject\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the iterated object of a JSArrayIterator.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSArrayIteratorNextIndex\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the next index of a JSArrayIterator.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSArrayIteratorKind\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the kind of a JSArrayIterator.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSStringIteratorString\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the string of a JSStringIterator.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSStringIteratorIndex\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the index of a JSStringIterator.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForArgumentsLength\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the length property of an Arguments object (either Sloppy or Strict).\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForArgumentsCallee\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the callee property of a SloppyArguments object.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForFixedArraySlot\",\n      \"parameters\": [\n        \"size_t index\",\n        \"WriteBarrierKind write_barrier_kind\"\n      ],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing a specific slot in a FixedArray.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForFeedbackVectorSlot\",\n      \"parameters\": [\n        \"int index\"\n      ],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing a specific slot in a FeedbackVector.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForPropertyArraySlot\",\n      \"parameters\": [\n        \"int index\"\n      ],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing a specific slot in a PropertyArray.\"\n    },\n        {\n      \"name\": \"AccessBuilder::ForWeakFixedArraySlot\",\n      \"parameters\": [\n        \"int index\"\n      ],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing a specific slot in a WeakFixedArray.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForCellValue\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the value of a Cell.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForScopeInfoFlags\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the flags of a ScopeInfo object.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForContextSlot\",\n      \"parameters\": [\n        \"size_t index\"\n      ],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing a specific slot in a Context.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForContextSlotKnownPointer\",\n      \"parameters\": [\n        \"size_t index\"\n      ],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing a specific slot in a Context, assuming a known pointer value.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForContextSlotSmi\",\n      \"parameters\": [\n        \"size_t index\"\n      ],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing a specific slot in a Context that contains a Smi.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForFixedArrayElement\",\n      \"parameters\": [],\n      \"return_type\": \"ElementAccess\",\n      \"logic\": \"Returns an ElementAccess object configured for accessing an element in a FixedArray.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForWeakFixedArrayElement\",\n      \"parameters\": [],\n      \"return_type\": \"ElementAccess\",\n      \"logic\": \"Returns an ElementAccess object configured for accessing an element in a WeakFixedArray.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForSloppyArgumentsElementsMappedEntry\",\n      \"parameters\": [],\n      \"return_type\": \"ElementAccess\",\n      \"logic\": \"Returns an ElementAccess object configured for accessing a mapped entry in SloppyArgumentsElements.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForFixedArrayElement\",\n      \"parameters\": [\n        \"ElementsKind kind\"\n      ],\n      \"return_type\": \"ElementAccess\",\n      \"logic\": \"Returns an ElementAccess object configured for accessing an element in a FixedArray. The properties of the access vary based on ElementsKind.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForFixedDoubleArrayElement\",\n      \"parameters\": [],\n      \"return_type\": \"ElementAccess\",\n      \"logic\": \"Returns an ElementAccess object configured for accessing an element in a FixedDoubleArray.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForEnumCacheKeys\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the keys of an EnumCache.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForEnumCacheIndices\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the indices of an EnumCache.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForTypedArrayElement\",\n      \"parameters\": [\n        \"ExternalArrayType type\",\n        \"bool is_external\"\n      ],\n      \"return_type\": \"ElementAccess\",\n      \"logic\": \"Returns an ElementAccess object configured for accessing an element in a TypedArray. The properties of the access vary based on ExternalArrayType and whether the array is external.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForJSForInCacheArrayElement\",\n      \"parameters\": [\n        \"ForInMode mode\"\n      ],\n      \"return_type\": \"ElementAccess\",\n      \"logic\": \"Returns an ElementAccess object configured for accessing an element in a FixedArray used as a for-in cache.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForHashTableBaseNumberOfElements\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the number of elements in a HashTableBase.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForHashTableBaseNumberOfDeletedElement\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the number of deleted elements in a HashTableBase.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForHashTableBaseCapacity\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the capacity of a HashTableBase.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForOrderedHashMapOrSetNextTable\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the next table of an OrderedHashMap or OrderedHashSet.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForOrderedHashMapOrSetNumberOfBuckets\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the number of buckets of an OrderedHashMap or OrderedHashSet.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForOrderedHashMapOrSetNumberOfDeletedElements\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the number of deleted elements of an OrderedHashMap or OrderedHashSet.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForOrderedHashMapOrSetNumberOfElements\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the number of elements of an OrderedHashMap or OrderedHashSet.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForOrderedHashMapEntryValue\",\n      \"parameters\": [],\n      \"return_type\": \"ElementAccess\",\n      \"logic\": \"Returns an ElementAccess object configured for accessing the value of an entry in an OrderedHashMap.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForDictionaryNextEnumerationIndex\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the next enumeration index of a Dictionary.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForDictionaryObjectHashIndex\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the object hash index of a Dictionary.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForNameDictionaryFlagsIndex\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a FieldAccess object configured for accessing the flags index of a NameDictionary.\"\n    },\n    {\n      \"name\": \"AccessBuilder::ForFeedbackCellInterruptBudget\",\n      \"parameters\": [],\n      \"return_type\": \"FieldAccess\",\n      \"logic\": \"Returns a"
}