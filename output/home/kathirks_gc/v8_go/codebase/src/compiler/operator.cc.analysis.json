{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/compiler/operator.cc",
  "imports": [
    "src/compiler/operator.h",
    "limits"
  ],
  "classes": [
    {
      "name": "Operator",
      "properties": [
        "mnemonic_",
        "opcode_",
        "properties_",
        "value_in_",
        "effect_in_",
        "control_in_",
        "value_out_",
        "effect_out_",
        "control_out_"
      ],
      "methods": [
        {
          "name": "Operator",
          "parameters": [
            "Opcode opcode",
            "Properties properties",
            "const char* mnemonic",
            "size_t value_in",
            "size_t effect_in",
            "size_t control_in",
            "size_t value_out",
            "size_t effect_out",
            "size_t control_out"
          ],
          "return_type": "void",
          "logic": "Constructor for the Operator class. Initializes the member variables with the provided parameters, ensuring that the size_t values fit within the range of uint32_t and uint8_t using the CheckRange template function. Mnemonic is a string representation of the operator."
        },
        {
          "name": "PrintToImpl",
          "parameters": [
            "std::ostream& os",
            "PrintVerbosity verbose"
          ],
          "return_type": "void",
          "logic": "Prints the mnemonic of the operator to the given output stream."
        },
        {
          "name": "PrintPropsTo",
          "parameters": [
            "std::ostream& os"
          ],
          "return_type": "void",
          "logic": "Prints the properties of the operator to the given output stream. Uses a macro to iterate through the properties and print them if they are set."
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "CheckRange",
      "parameters": [
        "size_t val"
      ],
      "return_type": "N",
      "logic": "Template function that checks if a given size_t value is within the range of the given type N (specifically uint32_t) and kMaxInt, and then casts it to type N. Used to prevent integer overflow when assigning size_t values to smaller integer types."
    },
    {
      "name": "operator<<",
      "parameters": [
        "std::ostream& os",
        "const Operator& op"
      ],
      "return_type": "std::ostream&",
      "logic": "Overloads the << operator for the Operator class. Calls the PrintTo method (which internally calls PrintToImpl) to print the operator to the output stream."
    }
  ]
}