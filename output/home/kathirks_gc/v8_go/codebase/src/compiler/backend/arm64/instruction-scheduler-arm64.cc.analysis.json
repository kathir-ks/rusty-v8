{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/compiler/backend/arm64/instruction-scheduler-arm64.cc",
  "imports": [
    "src/compiler/backend/instruction-scheduler.h"
  ],
  "classes": [
    {
      "name": "InstructionScheduler",
      "properties": [],
      "methods": [
        {
          "name": "SchedulerSupported",
          "parameters": [],
          "return_type": "bool",
          "logic": "Returns true, indicating that instruction scheduling is supported for this architecture."
        },
        {
          "name": "GetTargetInstructionFlags",
          "parameters": [
            "const Instruction* instr"
          ],
          "return_type": "int",
          "logic": "Determines instruction-specific flags based on the instruction's architecture opcode.  The flags are used by the instruction scheduler to determine scheduling constraints such as whether an instruction is a load, store, or has side effects.  It uses a switch statement to categorize Arm64 instructions."
        },
        {
          "name": "GetInstructionLatency",
          "parameters": [
            "const Instruction* instr"
          ],
          "return_type": "int",
          "logic": "Estimates the latency of a given instruction. The latency represents the number of cycles required to execute the instruction.  It uses a switch statement to assign latency values to various Arm64 instructions based on empirical data. It defaults to a latency of 2 for unlisted instructions."
        }
      ]
    }
  ],
  "functions": []
}