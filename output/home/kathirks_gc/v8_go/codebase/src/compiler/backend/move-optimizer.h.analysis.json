{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/compiler/backend/move-optimizer.h",
  "imports": [
    "src/compiler/backend/instruction.h",
    "src/zone/zone-containers.h"
  ],
  "classes": [
    {
      "name": "MoveOptimizer",
      "properties": [
        "local_zone_",
        "code_",
        "local_vector_",
        "operand_buffer1",
        "operand_buffer2"
      ],
      "methods": [
        {
          "name": "MoveOptimizer",
          "parameters": [
            "Zone* local_zone",
            "InstructionSequence* code"
          ],
          "return_type": "void",
          "logic": "Constructor for the MoveOptimizer class. Initializes the local zone and instruction sequence."
        },
        {
          "name": "Run",
          "parameters": [],
          "return_type": "void",
          "logic": "The main entry point for the move optimization process."
        },
        {
          "name": "code",
          "parameters": [],
          "return_type": "InstructionSequence*",
          "logic": "Getter method for the instruction sequence."
        },
        {
          "name": "local_zone",
          "parameters": [],
          "return_type": "Zone*",
          "logic": "Getter method for the local zone."
        },
        {
          "name": "code_zone",
          "parameters": [],
          "return_type": "Zone*",
          "logic": "Getter method for the code zone (obtained from the instruction sequence)."
        },
        {
          "name": "local_vector",
          "parameters": [],
          "return_type": "MoveOpVector&",
          "logic": "Getter method for the local vector of move operands."
        },
        {
          "name": "CompressGaps",
          "parameters": [
            "Instruction* instr"
          ],
          "return_type": "void",
          "logic": "Consolidates moves into the first available gap within an instruction."
        },
        {
          "name": "CompressBlock",
          "parameters": [
            "InstructionBlock* block"
          ],
          "return_type": "void",
          "logic": "Attempts to push moves down to the last instruction within a block."
        },
        {
          "name": "CompressMoves",
          "parameters": [
            "ParallelMove* left",
            "MoveOpVector* right"
          ],
          "return_type": "void",
          "logic": "Consolidates moves from two sources (left and right) into the first gap."
        },
        {
          "name": "MigrateMoves",
          "parameters": [
            "Instruction* to",
            "Instruction* from"
          ],
          "return_type": "void",
          "logic": "Pushes down moves from the 'from' instruction's gap to the 'to' instruction, ensuring semantic correctness."
        },
        {
          "name": "RemoveClobberedDestinations",
          "parameters": [
            "Instruction* instruction"
          ],
          "return_type": "void",
          "logic": "Removes move destinations that are clobbered by the instruction."
        },
        {
          "name": "LastInstruction",
          "parameters": [
            "const InstructionBlock* block"
          ],
          "return_type": "const Instruction*",
          "logic": "Returns the last instruction of a given block."
        },
        {
          "name": "OptimizeMerge",
          "parameters": [
            "InstructionBlock* block"
          ],
          "return_type": "void",
          "logic": "Consolidates common moves appearing across all predecessors of a block, potentially optimizing merge points."
        },
        {
          "name": "FinalizeMoves",
          "parameters": [
            "Instruction* instr"
          ],
          "return_type": "void",
          "logic": "Finalizes the moves associated with a particular instruction."
        }
      ]
    }
  ],
  "functions": []
}