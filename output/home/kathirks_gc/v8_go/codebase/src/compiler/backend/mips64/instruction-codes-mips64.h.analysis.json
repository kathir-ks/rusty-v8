{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/compiler/backend/mips64/instruction-codes-mips64.h",
  "imports": [],
  "classes": [],
  "functions": [],
  "constants": [
    "TARGET_ARCH_OPCODE_LIST",
    "TARGET_ADDRESSING_MODE_LIST"
  ],
  "TARGET_ARCH_OPCODE_LIST": {
    "logic": "This macro defines a list of MIPS64-specific opcodes. Each opcode represents a specific assembly instruction or a more complex assembly sequence. The macro is intended to be used with a `V` argument, which is a macro itself. This allows for different actions to be performed on each opcode in the list, such as defining an enum or generating code for each instruction.",
    "opcodes": [
      "Mips64Add",
      "Mips64Dadd",
      "Mips64DaddOvf",
      "Mips64Sub",
      "Mips64Dsub",
      "Mips64DsubOvf",
      "Mips64Mul",
      "Mips64MulOvf",
      "Mips64DMulOvf",
      "Mips64MulHigh",
      "Mips64DMulHigh",
      "Mips64MulHighU",
      "Mips64DMulHighU",
      "Mips64Dmul",
      "Mips64Div",
      "Mips64Ddiv",
      "Mips64DivU",
      "Mips64DdivU",
      "Mips64Mod",
      "Mips64Dmod",
      "Mips64ModU",
      "Mips64DmodU",
      "Mips64And",
      "Mips64And32",
      "Mips64Or",
      "Mips64Or32",
      "Mips64Nor",
      "Mips64Nor32",
      "Mips64Xor",
      "Mips64Xor32",
      "Mips64Clz",
      "Mips64Lsa",
      "Mips64Dlsa",
      "Mips64Shl",
      "Mips64Shr",
      "Mips64Sar",
      "Mips64Ext",
      "Mips64Ins",
      "Mips64Dext",
      "Mips64Dins",
      "Mips64Dclz",
      "Mips64Ctz",
      "Mips64Dctz",
      "Mips64Popcnt",
      "Mips64Dpopcnt",
      "Mips64Dshl",
      "Mips64Dshr",
      "Mips64Dsar",
      "Mips64Ror",
      "Mips64Dror",
      "Mips64Mov",
      "Mips64Tst",
      "Mips64Cmp",
      "Mips64CmpS",
      "Mips64AddS",
      "Mips64SubS",
      "Mips64MulS",
      "Mips64DivS",
      "Mips64AbsS",
      "Mips64NegS",
      "Mips64SqrtS",
      "Mips64MaxS",
      "Mips64MinS",
      "Mips64CmpD",
      "Mips64AddD",
      "Mips64SubD",
      "Mips64MulD",
      "Mips64DivD",
      "Mips64ModD",
      "Mips64AbsD",
      "Mips64NegD",
      "Mips64SqrtD",
      "Mips64MaxD",
      "Mips64MinD",
      "Mips64Float64RoundDown",
      "Mips64Float64RoundTruncate",
      "Mips64Float64RoundUp",
      "Mips64Float64RoundTiesEven",
      "Mips64Float32RoundDown",
      "Mips64Float32RoundTruncate",
      "Mips64Float32RoundUp",
      "Mips64Float32RoundTiesEven",
      "Mips64CvtSD",
      "Mips64CvtDS",
      "Mips64TruncWD",
      "Mips64RoundWD",
      "Mips64FloorWD",
      "Mips64CeilWD",
      "Mips64TruncWS",
      "Mips64RoundWS",
      "Mips64FloorWS",
      "Mips64CeilWS",
      "Mips64TruncLS",
      "Mips64TruncLD",
      "Mips64TruncUwD",
      "Mips64TruncUwS",
      "Mips64TruncUlS",
      "Mips64TruncUlD",
      "Mips64CvtDW",
      "Mips64CvtSL",
      "Mips64CvtSW",
      "Mips64CvtSUw",
      "Mips64CvtSUl",
      "Mips64CvtDL",
      "Mips64CvtDUw",
      "Mips64CvtDUl",
      "Mips64Lb",
      "Mips64Lbu",
      "Mips64Sb",
      "Mips64Lh",
      "Mips64Ulh",
      "Mips64Lhu",
      "Mips64Ulhu",
      "Mips64Sh",
      "Mips64Ush",
      "Mips64Ld",
      "Mips64Uld",
      "Mips64Lw",
      "Mips64Ulw",
      "Mips64Lwu",
      "Mips64Ulwu",
      "Mips64Sw",
      "Mips64Usw",
      "Mips64Sd",
      "Mips64Usd",
      "Mips64Lwc1",
      "Mips64Ulwc1",
      "Mips64Swc1",
      "Mips64Uswc1",
      "Mips64Ldc1",
      "Mips64Uldc1",
      "Mips64Sdc1",
      "Mips64Usdc1",
      "Mips64BitcastDL",
      "Mips64BitcastLD",
      "Mips64Float64ExtractLowWord32",
      "Mips64Float64ExtractHighWord32",
      "Mips64Float64FromWord32Pair",
      "Mips64Float64InsertLowWord32",
      "Mips64Float64InsertHighWord32",
      "Mips64Float32Max",
      "Mips64Float64Max",
      "Mips64Float32Min",
      "Mips64Float64Min",
      "Mips64Float64SilenceNaN",
      "Mips64Push",
      "Mips64Peek",
      "Mips64StoreToStackSlot",
      "Mips64ByteSwap64",
      "Mips64ByteSwap32",
      "Mips64StackClaim",
      "Mips64Seb",
      "Mips64Seh",
      "Mips64Sync",
      "Mips64AssertEqual",
      "Mips64S128Const",
      "Mips64S128Zero",
      "Mips64S128AllOnes",
      "Mips64I32x4Splat",
      "Mips64I32x4ExtractLane",
      "Mips64I32x4ReplaceLane",
      "Mips64I32x4Add",
      "Mips64I32x4Sub",
      "Mips64F64x2Abs",
      "Mips64F64x2Neg",
      "Mips64F32x4Splat",
      "Mips64F32x4ExtractLane",
      "Mips64F32x4ReplaceLane",
      "Mips64F32x4SConvertI32x4",
      "Mips64F32x4UConvertI32x4",
      "Mips64I32x4Mul",
      "Mips64I32x4MaxS",
      "Mips64I32x4MinS",
      "Mips64I32x4Eq",
      "Mips64I32x4Ne",
      "Mips64I32x4Shl",
      "Mips64I32x4ShrS",
      "Mips64I32x4ShrU",
      "Mips64I32x4MaxU",
      "Mips64I32x4MinU",
      "Mips64F64x2Sqrt",
      "Mips64F64x2Add",
      "Mips64F64x2Sub",
      "Mips64F64x2Mul",
      "Mips64F64x2Div",
      "Mips64F64x2Min",
      "Mips64F64x2Max",
      "Mips64F64x2Eq",
      "Mips64F64x2Ne",
      "Mips64F64x2Lt",
      "Mips64F64x2Le",
      "Mips64F64x2Splat",
      "Mips64F64x2ExtractLane",
      "Mips64F64x2ReplaceLane",
      "Mips64F64x2Pmin",
      "Mips64F64x2Pmax",
      "Mips64F64x2Ceil",
      "Mips64F64x2Floor",
      "Mips64F64x2Trunc",
      "Mips64F64x2NearestInt",
      "Mips64F64x2ConvertLowI32x4S",
      "Mips64F64x2ConvertLowI32x4U",
      "Mips64F64x2PromoteLowF32x4",
      "Mips64I64x2Splat",
      "Mips64I64x2ExtractLane",
      "Mips64I64x2ReplaceLane",
      "Mips64I64x2Add",
      "Mips64I64x2Sub",
      "Mips64I64x2Mul",
      "Mips64I64x2Neg",
      "Mips64I64x2Shl",
      "Mips64I64x2ShrS",
      "Mips64I64x2ShrU",
      "Mips64I64x2BitMask",
      "Mips64I64x2Eq",
      "Mips64I64x2Ne",
      "Mips64I64x2GtS",
      "Mips64I64x2GeS",
      "Mips64I64x2Abs",
      "Mips64I64x2SConvertI32x4Low",
      "Mips64I64x2SConvertI32x4High",
      "Mips64I64x2UConvertI32x4Low",
      "Mips64I64x2UConvertI32x4High",
      "Mips64ExtMulLow",
      "Mips64ExtMulHigh",
      "Mips64ExtAddPairwise",
      "Mips64F32x4Abs",
      "Mips64F32x4Neg",
      "Mips64F32x4Sqrt",
      "Mips64F32x4Add",
      "Mips64F32x4Sub",
      "Mips64F32x4Mul",
      "Mips64F32x4Div",
      "Mips64F32x4Max",
      "Mips64F32x4Min",
      "Mips64F32x4Eq",
      "Mips64F32x4Ne",
      "Mips64F32x4Lt",
      "Mips64F32x4Le",
      "Mips64F32x4Pmin",
      "Mips64F32x4Pmax",
      "Mips64F32x4Ceil",
      "Mips64F32x4Floor",
      "Mips64F32x4Trunc",
      "Mips64F32x4NearestInt",
      "Mips64F32x4DemoteF64x2Zero",
      "Mips64I32x4SConvertF32x4",
      "Mips64I32x4UConvertF32x4",
      "Mips64I32x4Neg",
      "Mips64I32x4GtS",
      "Mips64I32x4GeS",
      "Mips64I32x4GtU",
      "Mips64I32x4GeU",
      "Mips64I32x4Abs",
      "Mips64I32x4BitMask",
      "Mips64I32x4DotI16x8S",
      "Mips64I32x4TruncSatF64x2SZero",
      "Mips64I32x4TruncSatF64x2UZero",
      "Mips64I16x8Splat",
      "Mips64I16x8ExtractLaneU",
      "Mips64I16x8ExtractLaneS",
      "Mips64I16x8ReplaceLane",
      "Mips64I16x8Neg",
      "Mips64I16x8Shl",
      "Mips64I16x8ShrS",
      "Mips64I16x8ShrU",
      "Mips64I16x8Add",
      "Mips64I16x8AddSatS",
      "Mips64I16x8Sub",
      "Mips64I16x8SubSatS",
      "Mips64I16x8Mul",
      "Mips64I16x8MaxS",
      "Mips64I16x8MinS",
      "Mips64I16x8Eq",
      "Mips64I16x8Ne",
      "Mips64I16x8GtS",
      "Mips64I16x8GeS",
      "Mips64I16x8AddSatU",
      "Mips64I16x8SubSatU",
      "Mips64I16x8MaxU",
      "Mips64I16x8MinU",
      "Mips64I16x8GtU",
      "Mips64I16x8GeU",
      "Mips64I16x8RoundingAverageU",
      "Mips64I16x8Abs",
      "Mips64I16x8BitMask",
      "Mips64I16x8Q15MulRSatS",
      "Mips64I8x16Splat",
      "Mips64I8x16ExtractLaneU",
      "Mips64I8x16ExtractLaneS",
      "Mips64I8x16ReplaceLane",
      "Mips64I8x16Neg",
      "Mips64I8x16Shl",
      "Mips64I8x16ShrS",
      "Mips64I8x16Add",
      "Mips64I8x16AddSatS",
      "Mips64I8x16Sub",
      "Mips64I8x16SubSatS",
      "Mips64I8x16MaxS",
      "Mips64I8x16MinS",
      "Mips64I8x16Eq",
      "Mips64I8x16Ne",
      "Mips64I8x16GtS",
      "Mips64I8x16GeS",
      "Mips64I8x16ShrU",
      "Mips64I8x16AddSatU",
      "Mips64I8x16SubSatU",
      "Mips64I8x16MaxU",
      "Mips64I8x16MinU",
      "Mips64I8x16GtU",
      "Mips64I8x16GeU",
      "Mips64I8x16RoundingAverageU",
      "Mips64I8x16Abs",
      "Mips64I8x16Popcnt",
      "Mips64I8x16BitMask",
      "Mips64S128And",
      "Mips64S128Or",
      "Mips64S128Xor",
      "Mips64S128Not",
      "Mips64S128Select",
      "Mips64S128AndNot",
      "Mips64I64x2AllTrue",
      "Mips64I32x4AllTrue",
      "Mips64I16x8AllTrue",
      "Mips64I8x16AllTrue",
      "Mips64V128AnyTrue",
      "Mips64S32x4InterleaveRight",
      "Mips64S32x4InterleaveLeft",
      "Mips64S32x4PackEven",
      "Mips64S32x4PackOdd",
      "Mips64S32x4InterleaveEven",
      "Mips64S32x4InterleaveOdd",
      "Mips64S32x4Shuffle",
      "Mips64S16x8InterleaveRight",
      "Mips64S16x8InterleaveLeft",
      "Mips64S16x8PackEven",
      "Mips64S16x8PackOdd",
      "Mips64S16x8InterleaveEven",
      "Mips64S16x8InterleaveOdd",
      "Mips64S16x4Reverse",
      "Mips64S16x2Reverse",
      "Mips64S8x16InterleaveRight",
      "Mips64S8x16InterleaveLeft",
      "Mips64S8x16PackEven",
      "Mips64S8x16PackOdd",
      "Mips64S8x16InterleaveEven",
      "Mips64S8x16InterleaveOdd",
      "Mips64I8x16Shuffle",
      "Mips64I8x16Swizzle",
      "Mips64S8x16Concat",
      "Mips64S8x8Reverse",
      "Mips64S8x4Reverse",
      "Mips64S8x2Reverse",
      "Mips64S128LoadSplat",
      "Mips64S128Load8x8S",
      "Mips64S128Load8x8U",
      "Mips64S128Load16x4S",
      "Mips64S128Load16x4U",
      "Mips64S128Load32x2S",
      "Mips64S128Load32x2U",
      "Mips64S128Load32Zero",
      "Mips64S128Load64Zero",
      "Mips64S128LoadLane",
      "Mips64S128StoreLane",
      "Mips64MsaLd",
      "Mips64MsaSt",
      "Mips64I32x4SConvertI16x8Low",
      "Mips64I32x4SConvertI16x8High",
      "Mips64I32x4UConvertI16x8Low",
      "Mips64I32x4UConvertI16x8High",
      "Mips64I16x8SConvertI8x16Low",
      "Mips64I16x8SConvertI8x16High",
      "Mips64I16x8SConvertI32x4",
      "Mips64I16x8UConvertI32x4",
      "Mips64I16x8UConvertI8x16Low",
      "Mips64I16x8UConvertI8x16High",
      "Mips64I8x16SConvertI16x8",
      "Mips64I8x16UConvertI16x8",
      "Mips64StoreCompressTagged",
      "Mips64Word64AtomicLoadUint64",
      "Mips64Word64AtomicStoreWord64",
      "Mips64Word64AtomicAddUint64",
      "Mips64Word64AtomicSubUint64",
      "Mips64Word64AtomicAndUint64",
      "Mips64Word64AtomicOrUint64",
      "Mips64Word64AtomicXorUint64",
      "Mips64Word64AtomicExchangeUint64",
      "Mips64Word64AtomicCompareExchangeUint64"
    ]
  },
  "TARGET_ADDRESSING_MODE_LIST": {
    "logic": "This macro defines a list of MIPS64 addressing modes. Each addressing mode represents a specific way to access memory. The macro is intended to be used with a `V` argument, which is a macro itself. This allows for different actions to be performed on each addressing mode in the list, such as defining an enum or generating code for each mode.",
    "addressing_modes": [
      "MRI",
      "MRR",
      "Root"
    ],
    "addressing_mode_explanations": {
      "MRI": "[register + immediate]",
      "MRR": "[register + register]",
      "Root": "[%rr + K]"
    }
  }
}