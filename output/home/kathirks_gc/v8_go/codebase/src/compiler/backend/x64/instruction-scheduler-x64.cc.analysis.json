{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/compiler/backend/x64/instruction-scheduler-x64.cc",
  "imports": [
    "src/compiler/backend/instruction-scheduler.h"
  ],
  "classes": [
    {
      "name": "InstructionScheduler",
      "properties": [],
      "methods": [
        {
          "name": "SchedulerSupported",
          "parameters": [],
          "return_type": "bool",
          "logic": "Returns true, indicating that the instruction scheduler is supported for the x64 architecture."
        },
        {
          "name": "GetTargetInstructionFlags",
          "parameters": [
            "const Instruction* instr"
          ],
          "return_type": "int",
          "logic": "Determines the instruction flags based on the instruction's architecture opcode.  It uses a large switch statement to map x64 opcodes to specific flags like kHasSideEffect, kIsLoadOperation, and kMayNeedDeoptOrTrapCheck. These flags provide information about the instruction's behavior for scheduling purposes."
        },
        {
          "name": "GetInstructionLatency",
          "parameters": [
            "const Instruction* instr"
          ],
          "return_type": "int",
          "logic": "Returns a latency value for a given instruction. This latency represents the estimated number of cycles the instruction takes to execute. The latency values are hardcoded for different x64 and SSE instructions, based on empirical observations. Instructions not explicitly listed have a default latency of 1."
        }
      ]
    }
  ],
  "functions": []
}