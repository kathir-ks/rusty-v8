{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/compiler/linear-scheduler.cc",
  "imports": [
    "src/compiler/linear-scheduler.h",
    "src/compiler/node-properties.h",
    "src/compiler/node.h",
    "src/compiler/turbofan-graph.h",
    "src/zone/zone-containers.h"
  ],
  "classes": [
    {
      "name": "LinearScheduler",
      "properties": [
        "graph_",
        "control_level_",
        "early_schedule_position_"
      ],
      "methods": [
        {
          "name": "LinearScheduler",
          "parameters": [
            "Zone* zone",
            "TFGraph* graph"
          ],
          "return_type": "void",
          "logic": "Constructor for LinearScheduler. Initializes the graph, control level map, and early schedule position map. It then calls ComputeControlLevel to populate the control level map."
        },
        {
          "name": "ComputeControlLevel",
          "parameters": [],
          "return_type": "void",
          "logic": "Computes the control level for each control node in the graph using a Breadth-First Search (BFS) starting from the start node. The control level represents the nesting depth of control flow constructs."
        },
        {
          "name": "GetEarlySchedulePosition",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Node*",
          "logic": "Determines the earliest possible schedule position for a given node, based on its dependencies and control flow.  It uses a stack-based depth-first search to traverse the node's inputs and compute the early schedule position, caching the results for future use."
        },
        {
          "name": "SameBasicBlock",
          "parameters": [
            "Node* node0",
            "Node* node1"
          ],
          "return_type": "bool",
          "logic": "Checks if two nodes belong to the same basic block by comparing their early schedule positions or control nodes if they are control nodes themselves."
        }
      ]
    }
  ],
  "functions": []
}