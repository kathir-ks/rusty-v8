{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/compiler/js-intrinsic-lowering.h",
  "imports": [
    "src/base/compiler-specific.h",
    "src/compiler/common-operator.h",
    "src/compiler/graph-reducer.h"
  ],
  "classes": [
    {
      "name": "JSIntrinsicLowering",
      "properties": [
        "jsgraph_",
        "broker_"
      ],
      "methods": [
        {
          "name": "JSIntrinsicLowering",
          "parameters": [
            "Editor* editor",
            "JSGraph* jsgraph",
            "JSHeapBroker* broker"
          ],
          "return_type": "void",
          "logic": "Constructor for JSIntrinsicLowering. Initializes the reducer with the editor, JSGraph, and JSHeapBroker."
        },
        {
          "name": "~JSIntrinsicLowering",
          "parameters": [],
          "return_type": "void",
          "logic": "Destructor for JSIntrinsicLowering. Uses default implementation."
        },
        {
          "name": "reducer_name",
          "parameters": [],
          "return_type": "const char*",
          "logic": "Returns the name of the reducer, which is \"JSIntrinsicLowering\"."
        },
        {
          "name": "Reduce",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "The main reduction function, called for each node in the graph. Determines if a node can be lowered (replaced with a simpler equivalent)."
        },
        {
          "name": "ReduceCopyDataProperties",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces a CopyDataProperties intrinsic, replacing it with simpler operations."
        },
        {
          "name": "ReduceCopyDataPropertiesWithExcludedPropertiesOnStack",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces a CopyDataProperties intrinsic when excluded properties are on the stack."
        },
        {
          "name": "ReduceCreateIterResultObject",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces a CreateIterResultObject intrinsic, creating an iterator result object."
        },
        {
          "name": "ReduceDeoptimizeNow",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces a DeoptimizeNow intrinsic, forcing deoptimization."
        },
        {
          "name": "ReduceCreateJSGeneratorObject",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces a CreateJSGeneratorObject intrinsic, creating a JS generator object."
        },
        {
          "name": "ReduceGeneratorClose",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces a GeneratorClose intrinsic, closing a generator."
        },
        {
          "name": "ReduceAsyncFunctionAwait",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces an AsyncFunctionAwait intrinsic, handling the await operation in an async function."
        },
        {
          "name": "ReduceAsyncFunctionEnter",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces an AsyncFunctionEnter intrinsic, handling the entry point for an async function."
        },
        {
          "name": "ReduceAsyncFunctionReject",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces an AsyncFunctionReject intrinsic, handling rejection in an async function."
        },
        {
          "name": "ReduceAsyncFunctionResolve",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces an AsyncFunctionResolve intrinsic, handling resolution in an async function."
        },
        {
          "name": "ReduceAsyncGeneratorAwait",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces an AsyncGeneratorAwait intrinsic, handling the await operation in an async generator."
        },
        {
          "name": "ReduceAsyncGeneratorReject",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces an AsyncGeneratorReject intrinsic, handling rejection in an async generator."
        },
        {
          "name": "ReduceAsyncGeneratorResolve",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces an AsyncGeneratorResolve intrinsic, handling resolution in an async generator."
        },
        {
          "name": "ReduceAsyncGeneratorYieldWithAwait",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces an AsyncGeneratorYieldWithAwait intrinsic, handling the yield with await operation in an async generator."
        },
        {
          "name": "ReduceGeneratorGetResumeMode",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces a GeneratorGetResumeMode intrinsic, retrieving the resume mode of a generator."
        },
        {
          "name": "ReduceIsInstanceType",
          "parameters": [
            "Node* node",
            "InstanceType instance_type"
          ],
          "return_type": "Reduction",
          "logic": "Reduces an IsInstanceType intrinsic, checking the instance type of an object."
        },
        {
          "name": "ReduceIsJSReceiver",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces an IsJSReceiver intrinsic, checking if a value is a JS Receiver."
        },
        {
          "name": "ReduceIsBeingInterpreted",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces an IsBeingInterpreted intrinsic, checking if the code is being interpreted."
        },
        {
          "name": "ReduceTurbofanStaticAssert",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces a TurbofanStaticAssert intrinsic, performs a static assertion."
        },
        {
          "name": "ReduceVerifyType",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces a VerifyType intrinsic, verifying a type."
        },
        {
          "name": "ReduceCheckTurboshaftTypeOf",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces a CheckTurboshaftTypeOf intrinsic, checking the Turboshaft type of a value."
        },
        {
          "name": "ReduceToLength",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces a ToLength intrinsic, converting a value to a length."
        },
        {
          "name": "ReduceToObject",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces a ToObject intrinsic, converting a value to an object."
        },
        {
          "name": "ReduceToString",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces a ToString intrinsic, converting a value to a string."
        },
        {
          "name": "ReduceCall",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces a Call intrinsic, representing a function call."
        },
        {
          "name": "ReduceIncBlockCounter",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces an IncBlockCounter intrinsic, incrementing a block counter for profiling."
        },
        {
          "name": "ReduceGetImportMetaObject",
          "parameters": [
            "Node* node"
          ],
          "return_type": "Reduction",
          "logic": "Reduces a GetImportMetaObject intrinsic, retrieving the import.meta object."
        },
        {
          "name": "Change",
          "parameters": [
            "Node* node",
            "const Operator* op"
          ],
          "return_type": "Reduction",
          "logic": "Changes the operator of a node to a new operator."
        },
        {
          "name": "Change",
          "parameters": [
            "Node* node",
            "const Operator* op",
            "Node* a",
            "Node* b"
          ],
          "return_type": "Reduction",
          "logic": "Changes the operator of a node to a new operator with two inputs."
        },
        {
          "name": "Change",
          "parameters": [
            "Node* node",
            "const Operator* op",
            "Node* a",
            "Node* b",
            "Node* c"
          ],
          "return_type": "Reduction",
          "logic": "Changes the operator of a node to a new operator with three inputs."
        },
        {
          "name": "Change",
          "parameters": [
            "Node* node",
            "const Operator* op",
            "Node* a",
            "Node* b",
            "Node* c",
            "Node* d"
          ],
          "return_type": "Reduction",
          "logic": "Changes the operator of a node to a new operator with four inputs."
        },
        {
          "name": "Change",
          "parameters": [
            "Node* node",
            "Callable const& callable",
            "int stack_parameter_count",
            "enum FrameStateFlag frame_state_flag"
          ],
          "return_type": "Reduction",
          "logic": "Changes the operator of a node to a call to a specific callable object."
        },
        {
          "name": "graph",
          "parameters": [],
          "return_type": "TFGraph*",
          "logic": "Returns the underlying TFGraph."
        },
        {
          "name": "jsgraph",
          "parameters": [],
          "return_type": "JSGraph*",
          "logic": "Returns the JSGraph used by this reducer."
        },
        {
          "name": "broker",
          "parameters": [],
          "return_type": "JSHeapBroker*",
          "logic": "Returns the JSHeapBroker used by this reducer."
        },
        {
          "name": "isolate",
          "parameters": [],
          "return_type": "Isolate*",
          "logic": "Returns the Isolate."
        },
        {
          "name": "common",
          "parameters": [],
          "return_type": "CommonOperatorBuilder*",
          "logic": "Returns the CommonOperatorBuilder used to construct common operators."
        },
        {
          "name": "javascript",
          "parameters": [],
          "return_type": "JSOperatorBuilder*",
          "logic": "Returns the JSOperatorBuilder used to construct Javascript operators."
        },
        {
          "name": "simplified",
          "parameters": [],
          "return_type": "SimplifiedOperatorBuilder*",
          "logic": "Returns the SimplifiedOperatorBuilder used to construct simplified operators."
        }
      ]
    }
  ],
  "functions": []
}