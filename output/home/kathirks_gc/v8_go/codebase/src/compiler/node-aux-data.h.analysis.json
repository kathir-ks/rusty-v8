{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/compiler/node-aux-data.h",
  "imports": [
    "src/compiler/node.h",
    "src/zone/zone-containers.h"
  ],
  "classes": [
    {
      "name": "NodeAuxData",
      "properties": [
        "zone_",
        "aux_data_"
      ],
      "methods": [
        {
          "name": "NodeAuxData",
          "parameters": [
            "Zone* zone"
          ],
          "return_type": "void",
          "logic": "Constructor: Initializes the NodeAuxData with a given zone."
        },
        {
          "name": "NodeAuxData",
          "parameters": [
            "size_t initial_size",
            "Zone* zone"
          ],
          "return_type": "void",
          "logic": "Constructor: Initializes the NodeAuxData with a given zone and initial size."
        },
        {
          "name": "Set",
          "parameters": [
            "Node* node",
            "T const& data"
          ],
          "return_type": "bool",
          "logic": "Sets the data associated with a node. Returns true if the data was changed, false otherwise."
        },
        {
          "name": "Set",
          "parameters": [
            "NodeId id",
            "T const& data"
          ],
          "return_type": "bool",
          "logic": "Sets the data associated with a node ID. Returns true if the data was changed, false otherwise."
        },
        {
          "name": "Get",
          "parameters": [
            "Node* node"
          ],
          "return_type": "T",
          "logic": "Gets the data associated with a node."
        },
        {
          "name": "Get",
          "parameters": [
            "NodeId id"
          ],
          "return_type": "T",
          "logic": "Gets the data associated with a node ID."
        },
        {
          "name": "begin",
          "parameters": [],
          "return_type": "const_iterator",
          "logic": "Returns a const_iterator to the beginning of the data."
        },
        {
          "name": "end",
          "parameters": [],
          "return_type": "const_iterator",
          "logic": "Returns a const_iterator to the end of the data."
        }
      ]
    },
    {
      "name": "NodeAuxData<T, def>::const_iterator",
      "properties": [
        "data_",
        "current_"
      ],
      "methods": [
        {
          "name": "const_iterator",
          "parameters": [
            "const ZoneVector<T>* data",
            "size_t current"
          ],
          "return_type": "void",
          "logic": "Constructor: Initializes the const_iterator with the data and current position."
        },
        {
          "name": "const_iterator",
          "parameters": [
            "const const_iterator& other"
          ],
          "return_type": "void",
          "logic": "Copy constructor: Initializes the const_iterator based on another const_iterator."
        },
        {
          "name": "operator*",
          "parameters": [],
          "return_type": "value_type",
          "logic": "Dereference operator: Returns the value at the current position."
        },
        {
          "name": "operator==",
          "parameters": [
            "const const_iterator& other"
          ],
          "return_type": "bool",
          "logic": "Equality operator: Checks if two const_iterators are equal."
        },
        {
          "name": "operator!=",
          "parameters": [
            "const const_iterator& other"
          ],
          "return_type": "bool",
          "logic": "Inequality operator: Checks if two const_iterators are not equal."
        },
        {
          "name": "operator++",
          "parameters": [],
          "return_type": "const_iterator&",
          "logic": "Prefix increment operator: Increments the const_iterator and returns a reference to itself."
        },
        {
          "name": "operator++",
          "parameters": [
            "int"
          ],
          "return_type": "const_iterator",
          "logic": "Postfix increment operator: Increments the const_iterator and returns a copy of the original const_iterator."
        }
      ]
    },
    {
      "name": "NodeAuxDataMap",
      "properties": [
        "map_"
      ],
      "methods": [
        {
          "name": "NodeAuxDataMap",
          "parameters": [
            "Zone* zone"
          ],
          "return_type": "void",
          "logic": "Constructor: Initializes the NodeAuxDataMap with a given zone."
        },
        {
          "name": "Put",
          "parameters": [
            "NodeId key",
            "T value"
          ],
          "return_type": "void",
          "logic": "Puts a key-value pair into the map."
        },
        {
          "name": "Get",
          "parameters": [
            "NodeId key"
          ],
          "return_type": "T",
          "logic": "Gets the value associated with a key from the map. Returns kNonExistent if the key is not found."
        },
        {
          "name": "Reserve",
          "parameters": [
            "size_t count"
          ],
          "return_type": "void",
          "logic": "Reserves space in the map for a given number of elements."
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "DefaultConstruct",
      "parameters": [
        "Zone* zone"
      ],
      "return_type": "T",
      "logic": "Default constructs an object of type T."
    },
    {
      "name": "ZoneConstruct",
      "parameters": [
        "Zone* zone"
      ],
      "return_type": "T",
      "logic": "Constructs an object of type T using the zone allocator."
    }
  ]
}