{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/compiler/turboshaft/snapshot-table-opindex.h",
  "imports": [
    "<optional>",
    "src/compiler/turboshaft/index.h",
    "src/compiler/turboshaft/snapshot-table.h"
  ],
  "classes": [
    {
      "name": "SparseOpIndexSnapshotTable",
      "properties": [
        "indices_to_keys_"
      ],
      "methods": [
        {
          "name": "SparseOpIndexSnapshotTable",
          "parameters": [
            "Zone* zone"
          ],
          "return_type": "explicit",
          "logic": "Constructor for the class. Initializes the base class and the indices_to_keys_ map."
        },
        {
          "name": "Get",
          "parameters": [
            "OpIndex idx"
          ],
          "return_type": "Value",
          "logic": "Retrieves a value from the snapshot table based on the given OpIndex. If the OpIndex has a corresponding key, it retrieves the value associated with that key from the base SnapshotTable. Otherwise, it returns a default-constructed Value."
        },
        {
          "name": "GetPredecessorValue",
          "parameters": [
            "OpIndex idx",
            "int predecessor_index"
          ],
          "return_type": "Value",
          "logic": "Retrieves the predecessor value from the snapshot table for a given OpIndex and predecessor index. If the OpIndex has a corresponding key, it retrieves the predecessor value associated with that key from the base SnapshotTable. Otherwise, it returns a default-constructed Value."
        },
        {
          "name": "Set",
          "parameters": [
            "OpIndex idx",
            "Value new_value"
          ],
          "return_type": "bool",
          "logic": "Sets a value in the snapshot table for the given OpIndex. It gets or creates a key for the OpIndex and then sets the value associated with that key in the base SnapshotTable."
        },
        {
          "name": "NewKey",
          "parameters": [
            "OpIndex idx",
            "KeyData data",
            "Value initial_value = Value{}"
          ],
          "return_type": "void",
          "logic": "Creates a new key in the base SnapshotTable and associates it with the given OpIndex. Asserts that there isn't a key already mapped to idx."
        },
        {
          "name": "NewKey",
          "parameters": [
            "OpIndex idx",
            "Value initial_value = Value{}"
          ],
          "return_type": "void",
          "logic": "Overloaded version of NewKey. Creates a new key in the base SnapshotTable (using default KeyData) and associates it with the given OpIndex."
        },
        {
          "name": "HasKeyFor",
          "parameters": [
            "OpIndex idx"
          ],
          "return_type": "bool",
          "logic": "Checks if a key exists for the given OpIndex."
        },
        {
          "name": "TryGetKeyFor",
          "parameters": [
            "OpIndex idx"
          ],
          "return_type": "std::optional<Key>",
          "logic": "Tries to get the key associated with the given OpIndex. Returns the key if it exists, otherwise returns std::nullopt."
        },
        {
          "name": "GetOrCreateKey",
          "parameters": [
            "OpIndex idx"
          ],
          "return_type": "Key",
          "logic": "Gets the key associated with the given OpIndex, or creates a new key if it doesn't exist.  The newly created key is stored in the indices_to_keys_ map."
        }
      ]
    }
  ],
  "functions": []
}