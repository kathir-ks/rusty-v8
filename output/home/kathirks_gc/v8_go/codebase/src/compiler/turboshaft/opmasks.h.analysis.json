{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/compiler/turboshaft/opmasks.h",
  "imports": [
    "src/compiler/turboshaft/operations.h",
    "src/compiler/turboshaft/representations.h",
    "src/compiler/turboshaft/field-macro.inc"
  ],
  "classes": [
    {
      "name": "OpMaskField",
      "properties": [
        "type",
        "offset",
        "size"
      ],
      "methods": []
    },
    {
      "name": "UnwrapRepresentation",
      "properties": [
        "type"
      ],
      "methods": []
    },
    {
      "name": "MaskBuilder",
      "properties": [],
      "methods": [
        {
          "name": "BuildBaseMask",
          "parameters": [],
          "return_type": "uint64_t",
          "logic": "Builds a base mask that covers the opcode field in the Operation object."
        },
        {
          "name": "EncodeBaseValue",
          "parameters": [
            "opcode"
          ],
          "return_type": "uint64_t",
          "logic": "Encodes the opcode value into the uint64_t mask."
        },
        {
          "name": "BuildMask",
          "parameters": [],
          "return_type": "uint64_t",
          "logic": "Builds the complete mask by combining the base mask and the masks for all specified fields."
        },
        {
          "name": "EncodeValue",
          "parameters": [
            "args..."
          ],
          "return_type": "uint64_t",
          "logic": "Encodes the values of the specified fields into a uint64_t value that represents the specific operation."
        },
        {
          "name": "BuildFieldMask",
          "parameters": [],
          "return_type": "uint64_t",
          "logic": "Builds a mask for a specific field based on its size and offset."
        },
        {
          "name": "EncodeFieldValue",
          "parameters": [
            "value"
          ],
          "return_type": "uint64_t",
          "logic": "Encodes the value of a specific field into the uint64_t representation, considering its offset and size."
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "encode_for_mask",
      "parameters": [
        "value"
      ],
      "return_type": "uint64_t",
      "logic": "Converts a value of any type T to a uint64_t, intended for use within masks."
    }
  ]
}