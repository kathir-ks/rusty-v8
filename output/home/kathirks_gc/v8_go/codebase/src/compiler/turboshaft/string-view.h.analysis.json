{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/compiler/turboshaft/string-view.h",
  "imports": [
    "src/compiler/turboshaft/operations.h"
  ],
  "classes": [
    {
      "name": "StringView",
      "properties": [
        "string_",
        "encoding_",
        "start_index_",
        "character_count_",
        "end_offset_",
        "can_rely_on_no_gc_"
      ],
      "methods": [
        {
          "name": "StringView",
          "parameters": [
            "const DisallowGarbageCollection& can_rely_on_no_gc",
            "V<String> string",
            "String::Encoding encoding",
            "ConstOrV<WordPtr> start_index",
            "ConstOrV<WordPtr> character_count"
          ],
          "return_type": "void",
          "logic": "Constructor for StringView that takes a DisallowGarbageCollection object and initializes the string, encoding, start index, and character count."
        },
        {
          "name": "StringView",
          "parameters": [
            "V<String> string",
            "String::Encoding encoding",
            "ConstOrV<WordPtr> start_index",
            "ConstOrV<WordPtr> character_count"
          ],
          "return_type": "void",
          "logic": "Constructor for StringView that initializes the string, encoding, start index, and character count, without a DisallowGarbageCollection object."
        },
        {
          "name": "Begin",
          "parameters": [
            "A& assembler"
          ],
          "return_type": "iterator_type",
          "logic": "Calculates and returns the starting iterator for the string view, based on the encoding and start index.  It obtains the data offset of the string and then calculates the starting offset by adding the data offset, start index (multiplied by stride) to the bitcasted tagged word pointer of the string. It also computes the `end_offset_`."
        },
        {
          "name": "IsEnd",
          "parameters": [
            "A& assembler",
            "iterator_type current_iterator"
          ],
          "return_type": "OptionalV<Word32>",
          "logic": "Checks if the current iterator has reached the end of the string view by comparing it with the precomputed end offset. Returns whether the current iterator is at or beyond the end offset."
        },
        {
          "name": "Advance",
          "parameters": [
            "A& assembler",
            "iterator_type current_iterator"
          ],
          "return_type": "iterator_type",
          "logic": "Advances the current iterator to the next character in the string view, based on the encoding (1 or 2 bytes per character)."
        },
        {
          "name": "Dereference",
          "parameters": [
            "A& assembler",
            "iterator_type current_iterator"
          ],
          "return_type": "value_type",
          "logic": "Dereferences the current iterator to load the character value from memory. It uses the encoding to determine the appropriate memory representation (Uint8 or Uint16) and then loads the value. Returns the loaded character value."
        }
      ]
    }
  ],
  "functions": []
}