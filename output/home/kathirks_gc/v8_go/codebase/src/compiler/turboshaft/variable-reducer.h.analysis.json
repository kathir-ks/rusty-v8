{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/compiler/turboshaft/variable-reducer.h",
  "imports": [
    "<algorithm>",
    "<optional>",
    "src/base/logging.h",
    "src/codegen/machine-type.h",
    "src/compiler/turboshaft/assembler.h",
    "src/compiler/turboshaft/graph.h",
    "src/compiler/turboshaft/operations.h",
    "src/compiler/turboshaft/representations.h",
    "src/compiler/turboshaft/required-optimization-reducer.h",
    "src/compiler/turboshaft/snapshot-table.h",
    "src/zone/zone-containers.h"
  ],
  "classes": [
    {
      "name": "VariableReducer",
      "properties": [
        "table_",
        "current_block_",
        "block_to_snapshot_mapping_",
        "is_temporary_",
        "predecessors_",
        "loop_pending_phis_"
      ],
      "methods": [
        {
          "name": "Bind",
          "parameters": [
            "Block* new_block"
          ],
          "return_type": "void",
          "logic": "Binds the reducer to a new block. It seals the previous variable snapshot, prepares for merging from predecessors, starts a new snapshot, and handles pending loop phis for loop headers."
        },
        {
          "name": "RestoreTemporaryVariableSnapshotAfter",
          "parameters": [
            "const Block* block"
          ],
          "return_type": "void",
          "logic": "Restores a temporary variable snapshot after processing a specific block, for speculative execution scenarios."
        },
        {
          "name": "CloseTemporaryVariableSnapshot",
          "parameters": [],
          "return_type": "void",
          "logic": "Seals a temporary variable snapshot, finalizing changes made during speculative execution."
        },
        {
          "name": "REDUCE(Goto)",
          "parameters": [
            "Block* destination",
            "bool is_backedge"
          ],
          "return_type": "V<None>",
          "logic": "Reduces a Goto operation. Fixes up pending loop phis by replacing them with regular loop phis when encountering a backedge."
        },
        {
          "name": "GetVariable",
          "parameters": [
            "Variable var"
          ],
          "return_type": "OpIndex",
          "logic": "Gets the OpIndex associated with a Variable in the current block or from its predecessors (potentially creating a Phi)."
        },
        {
          "name": "GetPredecessorValue",
          "parameters": [
            "Variable var",
            "int predecessor_index"
          ],
          "return_type": "OpIndex",
          "logic": "Gets the value of a variable from a specific predecessor block."
        },
        {
          "name": "SetVariable",
          "parameters": [
            "Variable var",
            "OpIndex new_index"
          ],
          "return_type": "void",
          "logic": "Sets the OpIndex associated with a Variable in the current block."
        },
        {
          "name": "Set",
          "parameters": [
            "Variable var",
            "V<Rep> value"
          ],
          "return_type": "void",
          "logic": "Sets the OpIndex associated with a Variable in the current block, taking a V<Rep> value."
        },
        {
          "name": "NewLoopInvariantVariable",
          "parameters": [
            "MaybeRegisterRepresentation rep"
          ],
          "return_type": "Variable",
          "logic": "Creates a new loop-invariant Variable with the specified representation."
        },
        {
          "name": "NewVariable",
          "parameters": [
            "MaybeRegisterRepresentation rep"
          ],
          "return_type": "Variable",
          "logic": "Creates a new Variable with the specified representation."
        },
        {
          "name": "SealAndSaveVariableSnapshot",
          "parameters": [],
          "return_type": "void",
          "logic": "Seals the current variable snapshot and saves it for later merging during control flow joins."
        }
      ]
    },
    {
      "name": "VariableTable",
      "properties": [
        "active_loop_variables"
      ],
      "methods": [
        {
          "name": "OnNewKey",
          "parameters": [
            "Variable var",
            "OpIndex value"
          ],
          "return_type": "void",
          "logic": "Callback for when a new variable is created in the table."
        },
        {
          "name": "OnValueChange",
          "parameters": [
            "Variable var",
            "OpIndex old_value",
            "OpIndex new_value"
          ],
          "return_type": "void",
          "logic": "Callback for when a variable's value changes in the table.  Manages the active loop variables set."
        }
      ]
    }
  ],
  "functions": []
}