{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/regexp/regexp-utils.cc",
  "imports": [
    "src/regexp/regexp-utils.h",
    "src/execution/isolate.h",
    "src/execution/protectors-inl.h",
    "src/heap/factory.h",
    "src/objects/js-regexp-inl.h",
    "src/objects/objects-inl.h",
    "src/regexp/regexp.h"
  ],
  "classes": [
    {
      "name": "RegExpUtils",
      "properties": [],
      "methods": [
        {
          "name": "GenericCaptureGetter",
          "parameters": [
            "Isolate* isolate",
            "DirectHandle<RegExpMatchInfo> match_info",
            "int capture",
            "bool* ok"
          ],
          "return_type": "Handle<String>",
          "logic": "Retrieves a specific capture group from a RegExpMatchInfo object.  It returns the captured substring or an empty string if the capture group is not found or invalid. The 'ok' parameter is used to indicate success or failure."
        },
        {
          "name": "IsMatchedCapture",
          "parameters": [
            "Tagged<RegExpMatchInfo> match_info",
            "int capture"
          ],
          "return_type": "bool",
          "logic": "Checks if a specific capture group in a RegExpMatchInfo object has a valid match (i.e., start and end indices are not -1). Returns true if the capture group has a valid match, and false otherwise."
        },
        {
          "name": "SetLastIndex",
          "parameters": [
            "Isolate* isolate",
            "DirectHandle<JSReceiver> recv",
            "uint64_t value"
          ],
          "return_type": "MaybeDirectHandle<Object>",
          "logic": "Sets the `lastIndex` property of a RegExp object.  It optimizes for the case where the RegExp object still has its initial map, directly setting the property.  Otherwise it uses the generic `Object::SetProperty` method."
        },
        {
          "name": "GetLastIndex",
          "parameters": [
            "Isolate* isolate",
            "DirectHandle<JSReceiver> recv"
          ],
          "return_type": "MaybeDirectHandle<Object>",
          "logic": "Gets the `lastIndex` property of a RegExp object.  It optimizes for the case where the RegExp object still has its initial map, directly accessing the property.  Otherwise it uses the generic `Object::GetProperty` method."
        },
        {
          "name": "RegExpExec",
          "parameters": [
            "Isolate* isolate",
            "DirectHandle<JSReceiver> regexp",
            "DirectHandle<String> string",
            "DirectHandle<Object> exec"
          ],
          "return_type": "MaybeDirectHandle<JSAny>",
          "logic": "Executes a RegExp object against a string.  It attempts to use a cached `exec` method if provided, otherwise fetches it.  If `exec` is callable, it calls it. If `exec` is undefined or the regexp is not a RegExp object, it calls the default `regexp_exec_function`."
        },
        {
          "name": "IsUnmodifiedRegExp",
          "parameters": [
            "Isolate* isolate",
            "DirectHandle<Object> obj"
          ],
          "return_type": "bool",
          "logic": "Checks if a RegExp object is in its initial, unmodified state, suitable for fast path execution. It checks the object's map, prototype map, the constness of the 'exec' property, and if the last index is a smi."
        },
        {
          "name": "AdvanceStringIndex",
          "parameters": [
            "Tagged<String> string",
            "uint64_t index",
            "bool unicode"
          ],
          "return_type": "uint64_t",
          "logic": "Advances the string index, taking into account Unicode surrogate pairs if the `unicode` flag is true.  It returns the advanced index."
        },
        {
          "name": "SetAdvancedStringIndex",
          "parameters": [
            "Isolate* isolate",
            "DirectHandle<JSReceiver> regexp",
            "DirectHandle<String> string",
            "bool unicode"
          ],
          "return_type": "MaybeDirectHandle<Object>",
          "logic": "Advances the `lastIndex` property of a RegExp object by calling `AdvanceStringIndex` and then setting the new value via `SetLastIndex`."
        }
      ]
    }
  ],
  "functions": [],
  "enums": [],
  "typedefs": []
}