{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/regexp/special-case.h",
  "imports": [
    "src/base/logging.h",
    "src/common/globals.h",
    "unicode/uchar.h",
    "unicode/uniset.h",
    "unicode/unistr.h"
  ],
  "classes": [
    {
      "name": "RegExpCaseFolding",
      "properties": [],
      "methods": [
        {
          "name": "IgnoreSet",
          "parameters": [],
          "return_type": "const icu::UnicodeSet&",
          "logic": "Returns a reference to a static UnicodeSet representing characters that should only match themselves in \"i\" mode regexps (when unicode is false)."
        },
        {
          "name": "SpecialAddSet",
          "parameters": [],
          "return_type": "const icu::UnicodeSet&",
          "logic": "Returns a reference to a static UnicodeSet representing characters that should match at least one other character, but require filtering to ensure correct \"i\" mode matching (when unicode is false)."
        },
        {
          "name": "Canonicalize",
          "parameters": [
            "UChar32 ch"
          ],
          "return_type": "UChar32",
          "logic": "Implements the Canonicalize algorithm from ECMA-262, used to determine character matching when ignoreCase is true but unicode is false. Converts a character to uppercase, handling special cases where the uppercase form is either multi-character or ASCII while the original character is non-ASCII."
        }
      ]
    }
  ],
  "functions": [],
  "notes": "The class RegExpCaseFolding inherits from AllStatic, implying that all of its methods are static and the class itself cannot be instantiated."
}