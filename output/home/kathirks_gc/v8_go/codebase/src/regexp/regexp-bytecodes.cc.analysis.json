{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/regexp/regexp-bytecodes.cc",
  "imports": [
    "src/regexp/regexp-bytecodes.h",
    "cctype",
    "src/utils/utils.h"
  ],
  "classes": [],
  "functions": [
    {
      "name": "RegExpBytecodeDisassembleSingle",
      "parameters": [
        "const uint8_t* code_base",
        "const uint8_t* pc"
      ],
      "return_type": "void",
      "logic": "Disassembles a single regular expression bytecode instruction. It prints the bytecode name, its raw byte representation, and a printable ASCII representation of its arguments. It uses `RegExpBytecodeName` to get the human-readable name and `RegExpBytecodeLength` to determine the instruction length."
    },
    {
      "name": "RegExpBytecodeDisassemble",
      "parameters": [
        "const uint8_t* code_base",
        "int length",
        "const char* pattern"
      ],
      "return_type": "void",
      "logic": "Disassembles a sequence of regular expression bytecodes. It iterates through the bytecode array, calling `RegExpBytecodeDisassembleSingle` for each instruction and printing the offset and memory address of each instruction. The regexp pattern is printed at the beginning for context."
    }
  ]
}