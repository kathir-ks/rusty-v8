{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/snapshot/snapshot-compression.cc",
  "imports": [
    "src/snapshot/snapshot-compression.h",
    "src/base/platform/elapsed-timer.h",
    "src/utils/memcopy.h",
    "src/utils/utils.h",
    "third_party/zlib/google/compression_utils_portable.h"
  ],
  "classes": [
    {
      "name": "SnapshotCompression",
      "properties": [],
      "methods": [
        {
          "name": "Compress",
          "parameters": [
            "const SnapshotData* uncompressed_data"
          ],
          "return_type": "SnapshotData",
          "logic": "Compresses the given SnapshotData using zlib's raw compression. It first allocates enough space for the compressed data (plus the uncompressed size header), compresses the data, and then reallocates the buffer to the exact required size.  It also profiles the compression time if the `v8_flags.profile_deserialization` flag is set."
        },
        {
          "name": "Decompress",
          "parameters": [
            "base::Vector<const uint8_t> compressed_data"
          ],
          "return_type": "SnapshotData",
          "logic": "Decompresses the given compressed data using zlib's raw decompression. It first reads the uncompressed size from the header, allocates space for the decompressed data, decompresses the data, and then returns a SnapshotData containing the decompressed data. It also profiles the decompression time if the `v8_flags.profile_deserialization` flag is set."
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "GetUncompressedSize",
      "parameters": [
        "const Bytef* compressed_data"
      ],
      "return_type": "uint32_t",
      "logic": "Retrieves the uncompressed size from the beginning of the compressed data. This is stored as a uint32_t."
    }
  ]
}