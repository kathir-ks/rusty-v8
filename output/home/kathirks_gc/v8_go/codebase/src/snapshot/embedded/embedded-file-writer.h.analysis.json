{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/snapshot/embedded/embedded-file-writer.h",
  "imports": [
    "<cinttypes>",
    "<cstdio>",
    "<cstring>",
    "<memory>",
    "src/base/platform/wrappers.h",
    "src/base/strings.h",
    "src/common/globals.h",
    "src/snapshot/embedded/embedded-data.h",
    "src/snapshot/embedded/embedded-file-writer-interface.h",
    "src/snapshot/embedded/platform-embedded-file-writer-base.h",
    "src/diagnostics/unwinding-info-win64.h"
  ],
  "classes": [
    {
      "name": "EmbeddedFileWriter",
      "properties": [
        "source_positions_[Builtins::kBuiltinCount]",
        "label_info_[Builtins::kBuiltinCount]",
        "unwind_infos_[Builtins::kBuiltinCount]",
        "external_filenames_",
        "external_filenames_by_index_",
        "embedded_src_path_",
        "embedded_variant_",
        "target_arch_",
        "target_os_"
      ],
      "methods": [
        {
          "name": "LookupOrAddExternallyCompiledFilename",
          "parameters": [
            "const char* filename"
          ],
          "return_type": "int",
          "logic": "Looks up or adds an externally compiled filename to the internal map.  Returns the ID of the filename."
        },
        {
          "name": "GetExternallyCompiledFilename",
          "parameters": [
            "int fileid"
          ],
          "return_type": "const char*",
          "logic": "Gets an externally compiled filename based on its ID."
        },
        {
          "name": "GetExternallyCompiledFilenameCount",
          "parameters": [],
          "return_type": "int",
          "logic": "Gets the count of externally compiled filenames."
        },
        {
          "name": "PrepareBuiltinSourcePositionMap",
          "parameters": [
            "Builtins* builtins"
          ],
          "return_type": "void",
          "logic": "Prepares a source position map for builtins."
        },
        {
          "name": "SetBuiltinUnwindData",
          "parameters": [
            "Builtin builtin",
            "const win64_unwindinfo::BuiltinUnwindInfo& unwinding_info"
          ],
          "return_type": "void",
          "logic": "Sets the unwind data for a given builtin (Windows x64 only)."
        },
        {
          "name": "SetEmbeddedFile",
          "parameters": [
            "const char* embedded_src_path"
          ],
          "return_type": "void",
          "logic": "Sets the path to the embedded source file."
        },
        {
          "name": "SetEmbeddedVariant",
          "parameters": [
            "const char* embedded_variant"
          ],
          "return_type": "void",
          "logic": "Sets the embedded variant name."
        },
        {
          "name": "SetTargetArch",
          "parameters": [
            "const char* target_arch"
          ],
          "return_type": "void",
          "logic": "Sets the target architecture."
        },
        {
          "name": "SetTargetOs",
          "parameters": [
            "const char* target_os"
          ],
          "return_type": "void",
          "logic": "Sets the target operating system."
        },
        {
          "name": "WriteEmbedded",
          "parameters": [
            "const i::EmbeddedData* blob"
          ],
          "return_type": "void",
          "logic": "Writes the embedded data to the file."
        },
        {
          "name": "MaybeWriteEmbeddedFile",
          "parameters": [
            "const i::EmbeddedData* blob"
          ],
          "return_type": "void",
          "logic": "Conditionally writes the embedded file if the path is set."
        },
        {
          "name": "GetFileDescriptorOrDie",
          "parameters": [
            "const char* filename"
          ],
          "return_type": "FILE*",
          "logic": "Opens a file for writing and exits if it fails."
        },
        {
          "name": "WriteFilePrologue",
          "parameters": [
            "PlatformEmbeddedFileWriterBase* w"
          ],
          "return_type": "void",
          "logic": "Writes the file prologue (e.g., comments)."
        },
        {
          "name": "WriteExternalFilenames",
          "parameters": [
            "PlatformEmbeddedFileWriterBase* w"
          ],
          "return_type": "void",
          "logic": "Writes the external filenames to the assembly file."
        },
        {
          "name": "EmbeddedBlobCodeSymbol",
          "parameters": [],
          "return_type": "std::string",
          "logic": "Constructs the symbol name for the embedded blob code section."
        },
        {
          "name": "EmbeddedBlobDataSymbol",
          "parameters": [],
          "return_type": "std::string",
          "logic": "Constructs the symbol name for the embedded blob data section."
        },
        {
          "name": "WriteDataSection",
          "parameters": [
            "PlatformEmbeddedFileWriterBase* w",
            "const i::EmbeddedData* blob"
          ],
          "return_type": "void",
          "logic": "Writes the data section of the embedded blob to the assembly file."
        },
        {
          "name": "WriteBuiltin",
          "parameters": [
            "PlatformEmbeddedFileWriterBase* w",
            "const i::EmbeddedData* blob",
            "const Builtin builtin"
          ],
          "return_type": "void",
          "logic": "Writes a single builtin to the assembly file (implementation not in this header)."
        },
        {
          "name": "WriteBuiltinLabels",
          "parameters": [
            "PlatformEmbeddedFileWriterBase* w",
            "std::string name"
          ],
          "return_type": "void",
          "logic": "Writes labels for a builtin (implementation not in this header)."
        },
        {
          "name": "WriteCodeSection",
          "parameters": [
            "PlatformEmbeddedFileWriterBase* w",
            "const i::EmbeddedData* blob"
          ],
          "return_type": "void",
          "logic": "Writes the code section of the embedded blob to the assembly file (implementation not in this header)."
        },
        {
          "name": "WriteFileEpilogue",
          "parameters": [
            "PlatformEmbeddedFileWriterBase* w",
            "const i::EmbeddedData* blob"
          ],
          "return_type": "void",
          "logic": "Writes the file epilogue."
        },
        {
          "name": "WriteUnwindInfoEntry",
          "parameters": [
            "PlatformEmbeddedFileWriterBase* w",
            "uint64_t rva_start",
            "uint64_t rva_end"
          ],
          "return_type": "void",
          "logic": "Writes an unwind info entry (Windows x64 only)."
        },
        {
          "name": "WriteBinaryContentsAsInlineAssembly",
          "parameters": [
            "PlatformEmbeddedFileWriterBase* w",
            "const uint8_t* data",
            "uint32_t size"
          ],
          "return_type": "void",
          "logic": "Writes the binary contents as inline assembly."
        },
        {
          "name": "ExternalFilenameIndexToId",
          "parameters": [
            "int index"
          ],
          "return_type": "int",
          "logic": "Converts an external filename index to an ID."
        },
        {
          "name": "ExternalFilenameIdToIndex",
          "parameters": [
            "int id"
          ],
          "return_type": "int",
          "logic": "Converts an external filename ID to an index."
        }
      ]
    }
  ],
  "functions": [],
  "enums": []
}