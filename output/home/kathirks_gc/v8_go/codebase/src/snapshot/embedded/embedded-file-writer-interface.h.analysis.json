{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/snapshot/embedded/embedded-file-writer-interface.h",
  "imports": [
    "<string>",
    "v8config.h"
  ],
  "classes": [
    {
      "name": "EmbeddedFileWriterInterface",
      "properties": [],
      "methods": [
        {
          "name": "LookupOrAddExternallyCompiledFilename",
          "parameters": [
            "const char* filename"
          ],
          "return_type": "int",
          "logic": "Looks up a filename in an internal database. If the filename is not found, it's added to the database and a new synthetic ID is generated and returned.  This is a virtual function, so the specific implementation depends on the derived class."
        },
        {
          "name": "GetExternallyCompiledFilename",
          "parameters": [
            "int index"
          ],
          "return_type": "const char*",
          "logic": "Retrieves a filename from the internal database using its index.  This is a virtual function, so the specific implementation depends on the derived class."
        },
        {
          "name": "GetExternallyCompiledFilenameCount",
          "parameters": [],
          "return_type": "int",
          "logic": "Returns the number of externally compiled filenames stored in the internal database. This is a virtual function, so the specific implementation depends on the derived class."
        },
        {
          "name": "PrepareBuiltinSourcePositionMap",
          "parameters": [
            "Builtins* builtins"
          ],
          "return_type": "void",
          "logic": "Prepares a map of source positions for built-in functions.  This is called before the built-in InstructionStream objects are replaced with trampolines. This virtual method likely populates data structures used to debug and profile builtins. The 'Builtins*' argument provides access to the collection of built-in functions. The derived implementation determines the mechanism of source position mapping."
        },
        {
          "name": "SetBuiltinUnwindData",
          "parameters": [
            "Builtin builtin",
            "const win64_unwindinfo::BuiltinUnwindInfo& unwinding_info"
          ],
          "return_type": "void",
          "logic": "Sets unwind data for a specific built-in function. This is only implemented for Windows 64-bit. Unwind data describes how the stack can be unwound in case of exceptions or other events. This is architecture and OS specific."
        }
      ]
    }
  ],
  "functions": [],
  "constants": [
    {
      "name": "kDefaultEmbeddedVariant",
      "type": "char[]",
      "value": "\"Default\"",
      "logic": "A default variant string for embedded snapshots, likely used to distinguish between different snapshot configurations."
    }
  ],
  "structs": [
    {
      "name": "LabelInfo",
      "properties": [
        "int offset",
        "std::string name"
      ],
      "logic": "Represents information about a label, including its offset and name."
    }
  ]
}