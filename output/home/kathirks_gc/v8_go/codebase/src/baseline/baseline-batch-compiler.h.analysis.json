{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/baseline/baseline-batch-compiler.h",
  "imports": [
    "<atomic>",
    "src/handles/global-handles.h",
    "src/handles/handles.h"
  ],
  "classes": [
    {
      "name": "BaselineBatchCompiler",
      "properties": [
        "kInitialQueueSize",
        "isolate_",
        "compilation_queue_",
        "last_index_",
        "estimated_instruction_size_",
        "enabled_",
        "concurrent_compiler_"
      ],
      "methods": [
        {
          "name": "BaselineBatchCompiler",
          "parameters": [
            "Isolate* isolate"
          ],
          "return_type": "constructor",
          "logic": "Constructor for the BaselineBatchCompiler. Initializes the compiler with the given isolate."
        },
        {
          "name": "~BaselineBatchCompiler",
          "parameters": [],
          "return_type": "destructor",
          "logic": "Destructor for the BaselineBatchCompiler. Cleans up resources."
        },
        {
          "name": "EnqueueFunction",
          "parameters": [
            "DirectHandle<JSFunction> function"
          ],
          "return_type": "void",
          "logic": "Enqueues a JSFunction's SharedFunctionInfo for compilation."
        },
        {
          "name": "EnqueueSFI",
          "parameters": [
            "Tagged<SharedFunctionInfo> shared"
          ],
          "return_type": "void",
          "logic": "Enqueues a SharedFunctionInfo for compilation."
        },
        {
          "name": "set_enabled",
          "parameters": [
            "bool enabled"
          ],
          "return_type": "void",
          "logic": "Sets the enabled flag for batch compilation."
        },
        {
          "name": "is_enabled",
          "parameters": [],
          "return_type": "bool",
          "logic": "Returns whether batch compilation is enabled."
        },
        {
          "name": "InstallBatch",
          "parameters": [],
          "return_type": "void",
          "logic": "Installs the compiled batch of functions."
        },
        {
          "name": "concurrent",
          "parameters": [],
          "return_type": "bool",
          "logic": "Determines if concurrent compilation is enabled."
        },
        {
          "name": "EnsureQueueCapacity",
          "parameters": [],
          "return_type": "void",
          "logic": "Ensures that the compilation queue has enough space for another function, growing it if needed."
        },
        {
          "name": "Enqueue",
          "parameters": [
            "DirectHandle<SharedFunctionInfo> shared"
          ],
          "return_type": "void",
          "logic": "Enqueues a SharedFunctionInfo for compilation in the batch."
        },
        {
          "name": "ShouldCompileBatch",
          "parameters": [
            "Tagged<SharedFunctionInfo> shared"
          ],
          "return_type": "bool",
          "logic": "Determines if the current batch has exceeded its size threshold and should be compiled."
        },
        {
          "name": "CompileBatch",
          "parameters": [
            "DirectHandle<JSFunction> function"
          ],
          "return_type": "void",
          "logic": "Compiles the current batch of functions sequentially."
        },
        {
          "name": "CompileBatchConcurrent",
          "parameters": [
            "Tagged<SharedFunctionInfo> shared"
          ],
          "return_type": "void",
          "logic": "Compiles the current batch of functions concurrently."
        },
        {
          "name": "ClearBatch",
          "parameters": [],
          "return_type": "void",
          "logic": "Resets the current compilation batch, clearing the queue and instruction size."
        },
        {
          "name": "MaybeCompileFunction",
          "parameters": [
            "Tagged<MaybeObject> maybe_sfi"
          ],
          "return_type": "bool",
          "logic": "Tries to compile the SharedFunctionInfo, returns false if not possible."
        }
      ]
    }
  ],
  "functions": []
}