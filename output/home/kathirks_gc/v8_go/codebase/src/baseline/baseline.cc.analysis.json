{
  "file_path": "/home/kathirks_gc/v8_go/codebase/src/baseline/baseline.cc",
  "imports": [
    "src/baseline/baseline.h",
    "src/handles/maybe-handles.h",
    "src/objects/shared-function-info-inl.h",
    "src/baseline/baseline-assembler-inl.h",
    "src/baseline/baseline-compiler.h",
    "src/debug/debug.h",
    "src/heap/factory-inl.h",
    "src/logging/runtime-call-stats-scope.h",
    "src/objects/script-inl.h"
  ],
  "classes": [],
  "functions": [
    {
      "name": "CanCompileWithBaseline",
      "parameters": [
        "Isolate* isolate",
        "Tagged<SharedFunctionInfo> shared"
      ],
      "return_type": "bool",
      "logic": "Determines whether a SharedFunctionInfo can be compiled with the Baseline compiler (Sparkplug). It checks flags, availability of bytecode, debugger status, presence of breakpoints/instrumentation, and sparkplug filter."
    },
    {
      "name": "GenerateBaselineCode",
      "parameters": [
        "Isolate* isolate",
        "Handle<SharedFunctionInfo> shared"
      ],
      "return_type": "MaybeDirectHandle<Code>",
      "logic": "Generates baseline code for a SharedFunctionInfo. It creates a BaselineCompiler, generates code using it, and then builds the resulting Code object. Prints the generated code if the print_code flag is enabled. Includes runtime call stats."
    },
    {
      "name": "EmitReturnBaseline",
      "parameters": [
        "MacroAssembler* masm"
      ],
      "return_type": "void",
      "logic": "Emits the appropriate return instruction sequence for the Baseline compiler using the BaselineAssembler. Facilitates returning from baseline-compiled functions."
    }
  ]
}