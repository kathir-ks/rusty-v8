pub mod instruction_scheduler {
    use crate::compiler::backend::instruction::Instruction;

    pub struct InstructionScheduler {}

    impl InstructionScheduler {
        pub fn scheduler_supported() -> bool {
            true
        }

        pub fn get_target_instruction_flags(&self, instr: &Instruction) -> i32 {
            match instr.arch_opcode() {
                ArchOpcode::kPPC_And => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_AndComplement => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Or => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_OrComplement => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Xor => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_ShiftLeft32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_ShiftLeft64 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_ShiftLeftPair => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_ShiftRight32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_ShiftRight64 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_ShiftRightPair => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_ShiftRightAlg32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_ShiftRightAlg64 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_ShiftRightAlgPair => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_RotRight32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_RotRight64 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Not => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_RotLeftAndMask32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_RotLeftAndClear64 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_RotLeftAndClearLeft64 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_RotLeftAndClearRight64 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Add32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Add64 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_AddWithOverflow32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_AddPair => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_AddDouble => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Sub => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_SubWithOverflow32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_SubPair => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_SubDouble => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Mul32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Mul32WithHigh32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Mul64 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_MulHighS64 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_MulHighU64 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_MulHigh32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_MulHighU32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_MulPair => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_MulDouble => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Div32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Div64 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_DivU32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_DivU64 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_DivDouble => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Mod32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Mod64 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_ModU32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_ModU64 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_ModDouble => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Neg => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_NegDouble => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_SqrtDouble => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_FloorDouble => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_CeilDouble => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_TruncateDouble => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_RoundDouble => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_MaxDouble => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_MinDouble => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_AbsDouble => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Cntlz32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Cntlz64 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Popcnt32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Popcnt64 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Cmp32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Cmp64 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_CmpDouble => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Tst32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Tst64 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_ExtendSignWord8 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_ExtendSignWord16 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_ExtendSignWord32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Uint32ToUint64 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Int64ToInt32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Int64ToFloat32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Int64ToDouble => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Uint64ToFloat32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Uint64ToDouble => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Int32ToFloat32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Int32ToDouble => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Uint32ToFloat32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Uint32ToDouble => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Float32ToInt32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Float32ToUint32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Float32ToDouble => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_Float64SilenceNaN => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_DoubleToInt32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_DoubleToUint32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_DoubleToInt64 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_DoubleToUint64 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_DoubleToFloat32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_DoubleExtractLowWord32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_DoubleExtractHighWord32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_DoubleFromWord32Pair => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_DoubleInsertLowWord32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_DoubleInsertHighWord32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_DoubleConstruct => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_BitcastInt32ToFloat32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_BitcastFloat32ToInt32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_BitcastInt64ToDouble => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_BitcastDoubleToInt64 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_ByteRev32 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_ByteRev64 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F64x2Add => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F64x2Sub => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F64x2Mul => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F64x2Eq => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F64x2Ne => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F64x2Le => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F64x2Lt => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F64x2Abs => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F64x2Neg => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F64x2Sqrt => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F64x2Qfma => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F64x2Qfms => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F64x2Div => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F64x2Min => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F64x2Max => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F64x2Ceil => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F64x2Floor => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F64x2Trunc => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F64x2Pmin => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F64x2Pmax => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F64x2ConvertLowI32x4S => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F64x2ConvertLowI32x4U => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F64x2PromoteLowF32x4 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F32x4Add => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F32x4Sub => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F32x4Mul => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F32x4Eq => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F32x4Ne => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F32x4Lt => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F32x4Le => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F32x4Abs => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F32x4Neg => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F32x4Sqrt => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F32x4SConvertI32x4 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F32x4UConvertI32x4 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F32x4Qfma => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F32x4Qfms => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F32x4Div => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F32x4Min => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F32x4Max => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F32x4Ceil => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F32x4Floor => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F32x4Trunc => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F32x4Pmin => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F32x4Pmax => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_F32x4DemoteF64x2Zero => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I64x2Add => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I64x2Sub => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I64x2Mul => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I64x2Eq => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I64x2Ne => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I64x2GtS => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I64x2GeS => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I64x2Shl => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I64x2ShrS => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I64x2ShrU => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I64x2Neg => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I64x2BitMask => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I64x2SConvertI32x4Low => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I64x2SConvertI32x4High => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I64x2UConvertI32x4Low => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I64x2UConvertI32x4High => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I64x2ExtMulLowI32x4S => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I64x2ExtMulHighI32x4S => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I64x2ExtMulLowI32x4U => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I64x2ExtMulHighI32x4U => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I64x2Abs => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4Add => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4Sub => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4Mul => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4MinS => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4MinU => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4MaxS => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4MaxU => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4Eq => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4Ne => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4GtS => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4GeS => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4GtU => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4GeU => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4Shl => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4ShrS => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4ShrU => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4Neg => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4Abs => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4SConvertF32x4 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4UConvertF32x4 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4SConvertI16x8Low => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4SConvertI16x8High => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4UConvertI16x8Low => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4UConvertI16x8High => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4BitMask => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4DotI16x8S => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4ExtAddPairwiseI16x8S => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4ExtAddPairwiseI16x8U => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4ExtMulLowI16x8S => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4ExtMulHighI16x8S => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4ExtMulLowI16x8U => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4ExtMulHighI16x8U => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4TruncSatF64x2SZero => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4TruncSatF64x2UZero => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I32x4DotI8x16AddS => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8Add => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8Sub => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8Mul => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8MinS => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8MinU => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8MaxS => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8MaxU => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8Eq => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8Ne => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8GtS => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8GeS => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8GtU => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8GeU => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8Shl => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8ShrS => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8ShrU => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8Neg => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8Abs => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8SConvertI32x4 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8UConvertI32x4 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8SConvertI8x16Low => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8SConvertI8x16High => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8UConvertI8x16Low => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8UConvertI8x16High => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8AddSatS => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8SubSatS => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8AddSatU => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8SubSatU => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8RoundingAverageU => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8BitMask => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8ExtAddPairwiseI8x16S => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8ExtAddPairwiseI8x16U => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8Q15MulRSatS => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8ExtMulLowI8x16S => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8ExtMulHighI8x16S => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8ExtMulLowI8x16U => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8ExtMulHighI8x16U => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I16x8DotI8x16S => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I8x16Add => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I8x16Sub => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I8x16MinS => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I8x16MinU => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I8x16MaxS => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I8x16MaxU => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I8x16Eq => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I8x16Ne => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I8x16GtS => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I8x16GeS => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I8x16GtU => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I8x16GeU => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I8x16Shl => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I8x16ShrS => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I8x16ShrU => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I8x16Neg => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I8x16Abs => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I8x16SConvertI16x8 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I8x16UConvertI16x8 => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I8x16AddSatS => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::kPPC_I8x16SubSatS => InstructionFlags::kNoOpcodeFlags as i32,
                ArchOpcode::k