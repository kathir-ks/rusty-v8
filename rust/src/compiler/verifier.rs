// use std::os::raw::c_char;
// use std::ffi::CStr;
use std::collections::{HashSet, VecDeque, BinaryHeap};
use std::fmt;
use std::fmt::Debug;
use std::error::Error;
//use std::alloc::{alloc, dealloc, Layout};
//use std::mem;

// Placeholder for v8::base::OS::PrintError
fn print_error(s: &str) {
    eprintln!("{}", s);
}

// Placeholder for v8_flags
struct V8Flags {
    verify_simplified_lowering: bool,
}

static V8_FLAGS: V8Flags = V8Flags {
    verify_simplified_lowering: false,
};

macro_rules! CHECK {
    ($x:expr) => {
        if !($x) {
            panic!("Check failed: {}", stringify!($x));
        }
    };
}

macro_rules! CHECK_EQ {
    ($x:expr, $y:expr) => {
        if $x != $y {
            panic!("Check failed: {} != {}", $x, $y);
        }
    };
}

macro_rules! CHECK_NE {
    ($x:expr, $y:expr) => {
        if $x == $y {
            panic!("Check failed: {} == {}", $x, $y);
        }
    };
}

macro_rules! CHECK_LE {
    ($x:expr, $y:expr) => {
        if $x > $y {
            panic!("Check failed: {} <= {}", $x, $y);
        }
    };
}

macro_rules! CHECK_LT {
    ($x:expr, $y:expr) => {
        if $x >= $y {
            panic!("Check failed: {} < {}", $x, $y);
        }
    };
}

macro_rules! CHECK_GE {
    ($x:expr, $y:expr) => {
        if $x < $y {
            panic!("Check failed: {} >= {}", $x, $y);
        }
    };
}

macro_rules! CHECK_GT {
    ($x:expr, $y:expr) => {
        if $x <= $y {
            panic!("Check failed: {} > {}", $x, $y);
        }
    };
}

macro_rules! CHECK_NULL {
    ($x:expr) => {
        if $x != None {
            panic!("Check failed: {} != None", stringify!($x));
        }
    };
}

macro_rules! CHECK_NOT_NULL {
    ($x:expr) => {
        if $x.is_none() {
            panic!("Check failed: {} is None", stringify!($x));
        }
    };
}

macro_rules! UNREACHABLE {
    () => {
        panic!("Unreachable code reached");
    };
}

macro_rules! FATAL {
    ($($arg:tt)*) => {
        {
            eprintln!($($arg)*);
            panic!();
        }
    };
}

// Placeholder types and functions
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
struct NodeId(usize);

impl NodeId {
    fn to_usize(self) -> usize {
        self.0
    }
}

impl fmt::Display for NodeId {
    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
        write!(f, "{}", self.0)
    }
}

#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
enum IrOpcode {
    Start,
    End,
    Dead,
    DeadValue,
    Unreachable,
    Branch,
    IfTrue,
    IfFalse,
    IfSuccess,
    IfException,
    Switch,
    IfValue,
    IfDefault,
    Loop,
    Merge,
    DeoptimizeIf,
    DeoptimizeUnless,
    Plug,
    TrapIf,
    TrapUnless,
    Assert,
    Deoptimize,
    Return,
    Throw,
    Terminate,
    Parameter,
    Int32Constant,
    Int64Constant,
    Float32Constant,
    Float64Constant,
    TaggedIndexConstant,
    RelocatableInt32Constant,
    RelocatableInt64Constant,
    NumberConstant,
    HeapConstant,
    CompressedHeapConstant,
    TrustedHeapConstant,
    ExternalConstant,
    PointerConstant,
    OsrValue,
    Projection,
    Select,
    Phi,
    InductionVariablePhi,
    EffectPhi,
    LoopExit,
    LoopExitValue,
    LoopExitEffect,
    Checkpoint,
    BeginRegion,
    FinishRegion,
    FrameState,
    ObjectId,
    StateValues,
    TypedStateValues,
    ArgumentsElementsState,
    ArgumentsLengthState,
    ObjectState,
    TypedObjectState,
    Call,
    TailCall,
    EnterMachineGraph,
    ExitMachineGraph,
    JSEqual,
    JSStrictEqual,
    JSLessThan,
    JSGreaterThan,
    JSLessThanOrEqual,
    JSGreaterThanOrEqual,
    JSAdd,
    JSBitwiseOr,
    JSBitwiseXor,
    JSBitwiseAnd,
    JSShiftLeft,
    JSShiftRight,
    JSShiftRightLogical,
    JSSubtract,
    JSMultiply,
    JSDivide,
    JSModulus,
    JSExponentiate,
    JSBitwiseNot,
    JSDecrement,
    JSIncrement,
    JSNegate,
    ToBoolean,
    JSToLength,
    JSToName,
    JSToNumber,
    JSToNumberConvertBigInt,
    JSToBigInt,
    JSToBigIntConvertNumber,
    JSToNumeric,
    JSToString,
    JSToObject,
    JSParseInt,
    JSRegExpTest,
    JSCreate,
    JSCreateArguments,
    JSCreateArray,
    JSCreateArrayIterator,
    JSCreateAsyncFunctionObject,
    JSCreateCollectionIterator,
    JSCreateBoundFunction,
    JSCreateClosure,
    JSCreateIterResultObject,
    JSCreateStringIterator,
    JSCreateKeyValueArray,
    JSCreateObject,
    JSCreateStringWrapper,
    JSCreatePromise,
    JSCreateTypedArray,
    JSCreateLiteralArray,
    JSCreateEmptyLiteralArray,
    JSCreateArrayFromIterable,
    JSCreateLiteralObject,
    JSCreateEmptyLiteralObject,
    JSCloneObject,
    JSCreateLiteralRegExp,
    JSGetTemplateObject,
    JSLoadProperty,
    JSLoadNamed,
    JSLoadNamedFromSuper,
    JSLoadGlobal,
    JSSetKeyedProperty,
    JSDefineKeyedOwnProperty,
    JSSetNamedProperty,
    JSStoreGlobal,
    JSDefineNamedOwnProperty,
    JSGetIterator,
    JSDefineKeyedOwnPropertyInLiteral,
    JSStoreInArrayLiteral,
    JSDeleteProperty,
    JSHasProperty,
    kJSHasInPrototypeChain,
    JSInstanceOf,
    JSOrdinaryHasInstance,
    TypeOf,
    JSGetSuperConstructor,
    JSFindNonDefaultConstructorOrConstruct,
    kJSHasContextExtension,
    JSLoadContext,
    JSLoadScriptContext,
    JSStoreContext,
    JSStoreScriptContext,
    JSCreateFunctionContext,
    JSCreateCatchContext,
    JSCreateWithContext,
    JSCreateBlockContext,
    JSConstructForwardVarargs,
    JSConstructForwardAllArgs,
    JSConstruct,
    JSConstructWithArrayLike,
    JSConstructWithSpread,
    JSCallForwardVarargs,
    JSCall,
    JSCallWithArrayLike,
    JSCallWithSpread,
    JSCallRuntime,
    JSForInEnumerate,
    JSForInPrepare,
    JSForInNext,
    JSLoadMessage,
    JSStoreMessage,
    JSLoadModule,
    JSStoreModule,
    JSGetImportMeta,
    JSGeneratorStore,
    JSCreateGeneratorObject,
    JSGeneratorRestoreContinuation,
    JSGeneratorRestoreContext,
    JSGeneratorRestoreRegister,
    JSGeneratorRestoreInputOrDebugPos,
    JSStackCheck,
    kJSDebugger,
    JSAsyncFunctionEnter,
    JSAsyncFunctionReject,
    JSAsyncFunctionResolve,
    JSFulfillPromise,
    JSPerformPromiseThen,
    JSPromiseResolve,
    JSRejectPromise,
    JSResolvePromise,
    JSObjectIsArray,
    Comment,
    AbortCSADcheck,
    DebugBreak,
    Retain,
    RuntimeAbort,
    BooleanNot,
    NumberEqual,
    NumberLessThan,
    NumberLessThanOrEqual,
    SpeculativeAdditiveSafeIntegerAdd,
    SpeculativeAdditiveSafeIntegerSubtract,
    SpeculativeSmallIntegerAdd,
    SpeculativeSmallIntegerSubtract,
    SpeculativeNumberAdd,
    SpeculativeNumberSubtract,
    SpeculativeNumberMultiply,
    SpeculativeNumberPow,
    SpeculativeNumberDivide,
    SpeculativeNumberModulus,
    SpeculativeNumberEqual,
    SpeculativeNumberLessThan,
    SpeculativeNumberLessThanOrEqual,
    SpeculativeBigIntAdd,
    SpeculativeBigIntSubtract,
    SpeculativeBigIntMultiply,
    SpeculativeBigIntDivide,
    SpeculativeBigIntModulus,
    SpeculativeBigIntEqual,
    SpeculativeBigIntLessThan,
    SpeculativeBigIntLessThanOrEqual,
    SpeculativeBigIntNegate,
    SpeculativeBigIntAsIntN,
    SpeculativeBigIntAsUintN,
    BigIntAdd,
    BigIntSubtract,
    BigIntMultiply,
    BigIntDivide,
    BigIntModulus,
    BigIntEqual,
    BigIntLessThan,
    BigIntLessThanOrEqual,
    BigIntNegate,
    SpeculativeToBigInt,
    NumberAdd,
    NumberSubtract,
    NumberMultiply,
    NumberDivide,
    NumberModulus,
    NumberBitwiseOr,
    NumberBitwiseXor,
    NumberBitwiseAnd,
    SpeculativeNumberBitwiseOr,
    SpeculativeNumberBitwiseXor,
    SpeculativeNumberBitwiseAnd,
    NumberShiftLeft,
    NumberShiftRight,
    SpeculativeNumberShiftLeft,
    SpeculativeNumberShiftRight,
    NumberShiftRightLogical,
    SpeculativeNumberShiftRightLogical,
    NumberImul,
    NumberClz32,
    NumberAtan2,
    NumberMax,
    NumberMin,
    NumberPow,
    NumberAbs,
    NumberCeil,
    NumberFloor,
    NumberFround,
    NumberAcos,
    NumberAcosh,
    NumberAsin,
    NumberAsinh,
    NumberAtan,
    NumberAtanh,
    NumberCos,
    NumberCosh,
    NumberExp,
    NumberExpm1,
    NumberLog,
    NumberLog1p,
    NumberLog2,
    NumberLog10,
    NumberCbrt,
    NumberRound,
    NumberSign,
    NumberSin,
    NumberSinh,
    NumberSqrt,
    NumberTan,
    NumberTanh,
    NumberToBoolean,
    NumberToInt32,
    NumberToString,
    NumberToUint32,
    NumberToUint8Clamped,
    Integral32OrMinusZeroToBigInt,
    Unsigned32Divide,
    SpeculativeToNumber,
    PlainPrimitiveToNumber,
    PlainPrimitiveToWord32,
    PlainPrimitiveToFloat64,
    StringConcat,
    StringEqual,
    StringLessThan,
    StringLessThanOrEqual,
    StringToNumber,
    StringCharCodeAt,
    StringCodePointAt,
    StringFromSingleCharCode,
    StringFromSingleCodePoint,
    StringFromCodePointAt,
    StringIndexOf,
    StringLength,
    StringWrapperLength,
    TypedArrayLength,
    StringToLowerCaseIntl,
    StringToUpperCaseIntl,
    StringSubstring,
    ReferenceEqual,
    SameValue,
    SameValueNumbersOnly,
    NumberSameValue,
    ObjectIsArrayBufferView,
    ObjectIsBigInt,
    ObjectIsCallable,
    ObjectIsConstructor,
    ObjectIsDetectableCallable,
    ObjectIsMinusZero,
    ObjectIsNaN,
    ObjectIsNonCallable,
    ObjectIsNumber,
    ObjectIsReceiver,
    ObjectIsSmi,
    ObjectIsString,
    ObjectIsSymbol,
    ObjectIsUndetectable,
    NumberIsFloat64Hole,
    NumberIsFinite,
    NumberIsMinusZero,
    NumberIsNaN,
    ObjectIsFiniteNumber,
    NumberIsInteger,
    ObjectIsSafeInteger,
    NumberIsSafeInteger,
    ObjectIsInteger,
    FindOrderedHashMapEntry,
    FindOrderedHashMapEntryForInt32Key,
    FindOrderedHashSetEntry,
    ArgumentsLength,
    RestLength,
    NewDoubleElements,
    NewSmiOrObjectElements,
    NewArgumentsElements,
    NewConsString,
    Allocate,
    AllocateRaw,
    EnsureWritableFastElements,
    MaybeGrowFastElements,
    TransitionElementsKind,
    TransitionElementsKindOrCheckMap,
    ChangeTaggedSignedToInt32,
    ChangeTaggedSignedToInt64,
    ChangeTaggedToInt32,
    ChangeTaggedToInt64,
    ChangeTaggedToUint32,
    ChangeTaggedToFloat64,
    ChangeTaggedToTaggedSigned,
    TruncateTaggedToFloat64,
    ChangeInt31ToTaggedSigned,
    ChangeInt32ToTagged,
    ChangeInt64ToTagged,
    ChangeUint32ToTagged,
    ChangeUint64ToTagged,
    ChangeFloat64ToTagged,
    ChangeFloat64ToTaggedPointer,
    ChangeTaggedToBit,
    ChangeBitToTagged,
    TruncateTaggedToWord32,
    TruncateBigIntToWord64,
    ChangeInt64ToBigInt,
    ChangeUint64ToBigInt,
    TruncateTaggedToBit,
    TruncateTaggedPointerToBit,
    CheckBounds,
    CheckClosure,
    CheckHeapObject,
    CheckIf,
    CheckInternalizedString,
    CheckMaps,
    CompareMaps,
    CheckNumber,
    CheckNumberFitsInt32,
    CheckReceiver,
    CheckReceiverOrNullOrUndefined,
    CheckSmi,
    CheckString,
    CheckStringOrStringWrapper,
    CheckSymbol,
    ConvertReceiver,
    CheckedInt32Add,
    CheckedInt32Sub,
    CheckedInt32Div,
    CheckedInt32Mod,
    CheckedUint32Div,
    CheckedUint32Mod,
    CheckedInt32Mul,
    CheckedInt32ToTaggedSigned,
    CheckedInt64ToInt32,
    CheckedInt64ToTaggedSigned,
    CheckedUint32Bounds,
    CheckedUint32ToInt32,
    CheckedUint32ToTaggedSigned,
    CheckedUint64Bounds,
    CheckedUint64ToInt32,
    CheckedUint64ToInt64,
    CheckedUint64ToTaggedSigned,
    CheckedFloat64ToInt32,
    CheckedFloat64ToAdditiveSafeInteger,
    CheckedFloat64ToInt64,
    CheckedTaggedSignedToInt32,
    CheckedTaggedToInt32,
    CheckedTaggedToArrayIndex,
    CheckedTaggedToAdditiveSafeInteger,
    CheckedTaggedToInt64,
    CheckedTaggedToFloat64,
    CheckedTaggedToTaggedSigned,
    CheckedTaggedToTaggedPointer,
    CheckedTruncateTaggedToWord32,
    CheckedAdditiveSafeIntegerAdd,
    CheckedAdditiveSafeIntegerSub,
    CheckedInt64Add,
    CheckedInt64Sub,
    CheckedInt64Mul,
    CheckedInt64Div,
    CheckedInt64Mod,
    AssertType,
    VerifyType,
    CheckTurboshaftTypeOf,
    DoubleArrayMin,
    DoubleArrayMax,
    CheckFloat64Hole,
    ChangeFloat64HoleToTagged,
    CheckNotTaggedHole,
    ConvertTaggedHoleToUndefined,
    CheckEqualsInternalizedString,
    CheckEqualsSymbol,
    LoadFieldByIndex,
    LoadField,
    LoadMessage,
    LoadElement,
    LoadStackArgument,
    LoadFromObject,
    LoadImmutableFromObject,
    LoadTypedElement,
    LoadDataViewElement,
    StoreField,
    StoreMessage,
    StoreElement,
    StoreToObject,
    InitializeImmutableInObject,
    TransitionAndStoreElement,
    TransitionAndStoreNumberElement,
    TransitionAndStoreNonNumberElement,
    StoreSignedSmallElement,
    StoreTypedElement,
    StoreDataViewElement,
    NumberSilenceNaN,
    MapGuard,
    TypeGuard,
    DateNow,
    CheckBigInt,
    CheckedBigIntToBigInt64,
    FastApiCall,
    GetContinuationPreservedEmbedderData,
    SetContinuationPreservedEmbedderData,
    SLVerifierHint,
    JSWasmCall,
    WasmTypeCheck,
    WasmTypeCheckAbstract,
    WasmTypeCast,
    WasmTypeCastAbstract,
    RttCanon,
    Null,
    IsNull,
    IsNotNull,
    AssertNotNull,
    WasmAnyConvertExtern,
    WasmExternConvertAny,
    WasmStructGet,
    WasmStructSet,
    WasmArrayGet,
    WasmArraySet,
    WasmArrayLength,
    WasmArrayInitializeLength,
    StringAsWtf16,
    StringPrepareForGetCodeunit,
    LoadStackPointer,
    SetStackPointer,
    Load,
    LoadImmutable,
    ProtectedLoad,
    ProtectedStore,
    LoadTrapOnNull,
    StoreTrapOnNull,
    Store,
    StorePair,
    StoreIndirectPointer,
    StackSlot,
    Word32And,
    Word32Or,
    Word32Xor,
    Word32Shl,
    Word32Shr,
    Word32Sar,
    Word32Rol,
    Word32Ror,
    Word32Equal,
    Word32Clz,
    Word32Ctz,
    Word32ReverseBits,
    Word32ReverseBytes,
    Int32AbsWithOverflow,
    Word32Popcnt,
    Word64And,
    Word64Or,
    Word64Xor,
    Word64Shl,
    Word64Shr,
    Word64Sar,
    Word64Rol,
    Word64Ror,
    Word64Clz,
    Word64Ctz,
    Word64RolLowerable,
    Word64RorLowerable,
    Word64ClzLowerable,
    Word64CtzLowerable,
    Word64Popcnt,
    Word64ReverseBits,
    Word64ReverseBytes,
    Simd128ReverseBytes,
    Int64AbsWithOverflow,
    Word64Equal,
    Int32Add,
    Int32AddWithOverflow,
    Int32Sub,
    Int32SubWithOverflow,
    Int32Mul,
    Int32MulWithOverflow,
    Int32MulHigh,
    Int32Div,
    Int32Mod,
    Int32LessThan,
    Int32LessThanOrEqual,
    Uint32Div,
    Uint32Mod,
    Uint32MulHigh,
    Uint32LessThan,
    Uint32LessThanOrEqual,
    Int64Add,
    Int64AddWithOverflow,
    Int64Sub,
    Int64SubWithOverflow,
    Int64Mul,
    Int64MulHigh,
    Int64MulWithOverflow,
    Int64Div,
    Int64Mod,
    Int64LessThan,
    Int64LessThanOrEqual,
    Uint64Div,
    Uint64Mod,
    Uint64MulHigh,
    Uint64LessThan,
    Uint64LessThanOrEqual,
    Float32Add,
    Float32Sub,
    Float32Neg,
    Float32Mul,
    Float32Div,
    Float32Abs,
    Float32Sqrt,
    Float32Equal,
    Float32LessThan,
    Float32LessThanOrEqual,
    Float32Max,
    Float32Min,
    Float64Add,
    Float64Sub,
    Float64Neg,
    Float64Mul,
    Float64Div,
    Float64Mod,
    Float64Max,
    Float64Min,
    Float64Abs,
    Float64Acos,
    Float64Acosh,
    Float64Asin,
    Float64Asinh,
    Float64Atan,
    Float64Atan2,
    Float64Atanh,
    Float64Cbrt,
    Float64Cos,
    Float64Cosh,
    Float64Exp,
    Float64Expm1,
    Float64Log,
    Float64Log1p,
    Float64Log10,
    Float64Log2,
    Float64Pow,
    Float64Sin,
    Float64Sinh,
    Float64Sqrt,
    Float64Tan,
    Float64Tanh,
    Float32RoundDown,
    Float64RoundDown,
    Float32RoundUp,
    Float64RoundUp,
    Float32RoundTruncate,
    Float64RoundTruncate,
    Float64RoundTiesAway,
    Float32RoundTiesEven,
    Float64RoundTiesEven,
    Float64Equal,
    Float64LessThan,
    Float64LessThanOrEqual,
    TruncateInt64ToInt32,
    RoundFloat64ToInt32,
    RoundInt32ToFloat32,
    RoundInt64ToFloat32,
    RoundInt64ToFloat64,
    RoundUint32ToFloat32,
    RoundUint64ToFloat64,
    RoundUint64ToFloat32,
    TruncateFloat64ToFloat32,
    ChangeFloat16RawBitsToFloat64,
    TruncateFloat64ToFloat16RawBits,
    TruncateFloat64ToWord32,
    BitcastFloat32ToInt32,
    BitcastFloat64ToInt64,
    BitcastInt32ToFloat32,
    BitcastInt64ToFloat64,
    BitcastTaggedToWord,
    BitcastTaggedToWordForTagAndSmiBits,
    BitcastWordToTagged,
    BitcastWordToTaggedSigned,
    BitcastWord32ToWord64,
    ChangeInt32ToInt64,
    ChangeUint32ToUint64,
    ChangeInt32ToFloat64,
    ChangeInt64ToFloat64,
    ChangeUint32ToFloat64,
    ChangeFloat32ToFloat64,
    ChangeFloat64ToInt32,
    ChangeFloat64ToInt64,
    ChangeFloat64ToUint32,
    ChangeFloat64ToUint64,
    Float64SilenceNaN,
    TruncateFloat64ToInt64,
    TruncateFloat64ToUint32,
    TruncateFloat32ToInt32,
    TruncateFloat32ToUint32,
    TryTruncateFloat32ToInt64,
    TryTruncateFloat64ToInt64,
    TryTruncateFloat32ToUint64,
    TryTruncateFloat64ToUint64,
    TryTruncateFloat64ToInt32,
    TryTruncateFloat64ToUint32,
    Float64ExtractLowWord32,
    Float64ExtractHighWord32,
    Float64InsertLowWord32,
    Float64InsertHighWord32,
    Word32Select,
    Word64Select,
    Float32Select,
    Float64Select,
    Int32PairAdd,
    Int32PairSub,
    Int32PairMul,
    Word32PairShl,
    Word32PairShr,
    Word32PairSar,
    LoadStackCheckOffset,
    LoadFramePointer,
    LoadParentFramePointer,
    LoadRootRegister,
    UnalignedLoad,
    UnalignedStore,
    MemoryBarrier,
    Word32AtomicLoad,
    Word32AtomicStore,
    Word32AtomicExchange,
    Word32AtomicCompareExchange,
    Word32AtomicAdd,
    Word32AtomicSub,
    Word32AtomicAnd,
    Word32AtomicOr,
    Word32AtomicXor,
    Word64AtomicLoad,
    Word64AtomicStore,
    Word64AtomicAdd,
    Word64AtomicSub,
    Word64AtomicAnd,
    Word64AtomicOr,
    Word64AtomicXor,
    Word64AtomicExchange,
    Word64AtomicCompareExchange,
    Word32AtomicPairLoad,
    Word32AtomicPairStore,
    Word32AtomicPairAdd,
    Word32AtomicPairSub,
    Word32AtomicPairAnd,
    Word32AtomicPairOr,
    Word32AtomicPairXor,
    Word32AtomicPairExchange,
    Word32AtomicPairCompareExchange,
    SignExtendWord8ToInt32,
    SignExtendWord16ToInt32,
    SignExtendWord8ToInt64,
    SignExtendWord16ToInt64,
    SignExtendWord32ToInt64,
    StaticAssert,
    StackPointerGreaterThan,
    TraceInstruction,
    Simd128Load,
    Simd128Load8Splat,
    Simd128Load16Splat,
    Simd128Load32Splat,
    Simd128Load64Splat,
    Simd128Load32Zero,
    Simd128Load64Zero,
    Simd128Store,
    Simd128Const,
    Simd128ExtractLaneI8,
    Simd128ExtractLaneI16,
    Simd128ExtractLaneI32,
    Simd128ExtractLaneI64,
    Simd128ExtractLaneF32,
    Simd128ExtractLaneF64,
    Simd128ReplaceLaneI8,
    Simd128ReplaceLaneI16,
    Simd128ReplaceLaneI32,
    Simd128ReplaceLaneI64,
    Simd128ReplaceLaneF32,
    Simd128ReplaceLaneF64,
    Simd128Shuffle,
    Simd128And,
    Simd128Or,
    Simd128Xor,
    Simd128Not,
    Simd128AddI8x16,
    Simd128AddI16x8,
    Simd128AddI32x4,
    Simd128AddI64x2,
    Simd128AddF32x4,
    Simd128AddF64x2,
    Simd128SubI8x16,
    Simd128SubI16x8,
    Simd128SubI32x4,
    Simd128SubI64x2,
    Simd128SubF32x4,
    Simd128SubF64x2,
    Simd128MulI8x16,
    Simd128MulI16x8,
    Simd128MulI32x4,
    Simd128MulI64x2,
    Simd128MulF32x4,
    Simd128MulF64x2,
    Simd128MinS8x16,
    Simd128MinU8x16,
    Simd128MinS16x8,
    Simd128MinU16x8,
    Simd128MinS32x4,
    Simd128MinU32x4,
    Simd128MinF32x4,
    Simd128MinF64x2,
    Simd128MaxS8x16,
    Simd128MaxU8x16,
    Simd128MaxS16x8,
    Simd128MaxU16x8,
    Simd128MaxS32x4,
    Simd128MaxU32x4,
    Simd128MaxF32x4,
    Simd128MaxF64x2,
    Simd128DivF32x4,
    Simd128DivF64x2,
    Simd128NegI8x16,
    Simd128NegI16x8,
    Simd128NegI32x4,
    Simd128NegI64x2,
    Simd128NegF32x4,
    Simd128NegF64x2,
    Simd128SqrtF32x4,
    Simd128SqrtF64x2,
    Simd128AbsF32x4,
    Simd128AbsF64x2,
    Simd128PminF32x4,
    Simd128PminF64x2,
    Simd128PmaxF32x4,
    Simd128PmaxF64x2,
    Simd128CeilF32x4,
    Simd128CeilF64x2,
    Simd128FloorF32x4,
    Simd128FloorF64x2,
    Simd128TruncF32x4,
    Simd128TruncF64x2,
    Simd128NearestF32x4,
    Simd128NearestF64x2,
    Simd128AnyTrueI8x16,
    Simd128AllTrueI8x16,
    Simd128AnyTrueI16x8,
    Simd128AllTrueI16x8,
    Simd128AnyTrueI32x4,
    Simd128AllTrueI32x4,
    Simd128AnyTrueI64x2,
    Simd128AllTrueI64x2,
    Simd128NotEqualI8x16,
    Simd128NotEqualI16x8,
    Simd128NotEqualI32x4,
    Simd128NotEqualI64x2,
    Simd128NotEqualF32x4,
    Simd128NotEqualF64x2,
    Simd128LessThanI8x16,
    Simd128LessThanI16x8,
    Simd128LessThanI32x4,
    Simd128LessThanI64x2,
    Simd128LessThanF32x4,
    Simd128LessThanF64x2,
    Simd128LessThanOrEqualI8x16,
    Simd128LessThanOrEqualI16x8,
    Simd128LessThanOrEqualI32x4,
    Simd128LessThanOrEqualI64x2,
    Simd128LessThanOrEqualF32x4,
    Simd128LessThanOrEqualF64x2,
    Simd128GreaterThanI8x16,
    Simd128GreaterThanI16x8,
    Simd128GreaterThanI32x4,
    Simd128GreaterThanI64x2,
    Simd128GreaterThanF32x4,
    Simd128GreaterThanF64x2,
    Simd128GreaterThanOrEqualI8x16,
    Simd128GreaterThanOrEqualI16x8,
    Simd128GreaterThanOrEqualI32x4,
    Simd128GreaterThanOrEqualI64x2,
    Simd128GreaterThanOrEqualF32x4,
    Simd128GreaterThanOrEqualF64x2,
    Simd128EqualI8x16,
    Simd128EqualI16x8,
    Simd128EqualI32x4,
    Simd128EqualI64x2,
    Simd128EqualF32x4,
    Simd128EqualF64x2,
    Simd128Bitselect,
    Simd128SplatI8x16,
    Simd128SplatI16x8,
    Simd128SplatI32x4,
    Simd128SplatI64x2,
    Simd128SplatF32x4,
    Simd128SplatF64x2,
    Simd128RoundingDivF32x4,
    Simd128RoundingDivF64x2,
    Simd128ShiftRightI8x16,
    Simd128ShiftRightI16x8,
    Simd128ShiftRightI32x4,
    Simd128ShiftLeftI8x16,
    Simd128ShiftLeftI16x8,
    Simd128ShiftLeftI32x4,
    Simd128RelaxedFmaF32x4,
    Simd128RelaxedFmaF64x2,
    Simd128RelaxedReciprocalEstimateF32x4,
    Simd128RelaxedReciprocalEstimateF64x2,
    Simd128RelaxedReciprocalSqrtEstimateF32x4,
    Simd128RelaxedReciprocal