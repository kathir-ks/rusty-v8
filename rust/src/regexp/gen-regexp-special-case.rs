use icu::normalizer::{Normalizer, UnicodeNormalizationMode};
use icu::string::StringLike;
use icu::unicodeset::{UnicodeSet, UnicodeSetError};
use std::fs::File;
use std::io::{self, Write};
use std::sync::OnceLock;

const K_SURROGATE_START: u32 = 0xd800;
const K_SURROGATE_END: u32 = 0xdfff;
const K_NON_BMP_START: u32 = 0x10000;

pub mod regexp_case_folding {
    use super::*;

    /// Canonicalizes a code point according to ECMAScript 2020 21.2.2.8.2.
    pub fn canonicalize(code_point: u32) -> u32 {
        if code_point >= 256 {
            code_point
        } else {
            let c = code_point as u8 as char;
            let lower = c.to_lowercase().next().unwrap() as u32;
            if lower != code_point {
                lower
            } else {
                code_point
            }
        }
    }
}

struct IgnoreSetData {
    set: UnicodeSet,
}

impl IgnoreSetData {
    fn new() -> Self {
        Self { set: build_ignore_set().unwrap() }
    }
}

static IGNORE_SET: OnceLock<IgnoreSetData> = OnceLock::new();

/// Returns the IgnoreSet UnicodeSet.
pub fn ignore_set() -> &'static UnicodeSet {
    &IGNORE_SET.get_or_init(|| IgnoreSetData::new()).set
}

struct SpecialAddSetData {
    set: UnicodeSet,
}

impl SpecialAddSetData {
    fn new() -> Self {
        Self { set: build_special_add_set().unwrap() }
    }
}

static SPECIAL_ADD_SET: OnceLock<SpecialAddSetData> = OnceLock::new();

/// Returns the SpecialAddSet UnicodeSet.
pub fn special_add_set() -> &'static UnicodeSet {
    &SPECIAL_ADD_SET.get_or_init(|| SpecialAddSetData::new()).set
}

fn build_ignore_set() -> Result<UnicodeSet, UnicodeSetError> {
    let mut set = UnicodeSet::new();
    // Add ranges and single code points to the set here, based on the generated data.
    // Example:
    // set.add(0x1234)?;
    // set.add_range(0x5678, 0x5679)?;
    let ignore_ranges = vec![
        (0x0043, 0x0043),
        (0x004b, 0x004b),
        (0x004f, 0x004f),
        (0x0053, 0x0053),
        (0x0058, 0x0058),
        (0x00df, 0x00df),
        (0x0130, 0x0130),
        (0x03c2, 0x03c2),
        (0x1fbe, 0x1fbe),
    ];

    for (start, end) in ignore_ranges {
        set.add_range(start, end)?;
    }

    set.freeze();
    Ok(set)
}

fn build_special_add_set() -> Result<UnicodeSet, UnicodeSetError> {
    let mut set = UnicodeSet::new();
    // Add ranges and single code points to the set here, based on the generated data.
    // Example:
    // set.add(0xabcd)?;
    // set.add_range(0xeff0, 0xeff1)?;
    let special_ranges = vec![
        (0x0061, 0x0061),
        (0x006b, 0x006b),
        (0x006f, 0x006f),
        (0x0073, 0x0073),
        (0x0075, 0x0075),
        (0x0076, 0x0076),
        (0x0077, 0x0077),
        (0x0078, 0x0078),
        (0x00b5, 0x00b5),
        (0x00ba, 0x00ba),
        (0x017f, 0x017f),
        (0x0390, 0x0390),
        (0x03b0, 0x03b0),
        (0x03c2, 0x03c2),
        (0x03c3, 0x03c3),
        (0x03c6, 0x03c6),
        (0x03ca, 0x03ca),
        (0x03cb, 0x03cb),
        (0x03cf, 0x03cf),
        (0x03d1, 0x03d1),
        (0x03d2, 0x03d2),
        (0x03d3, 0x03d3),
        (0x03d7, 0x03d7),
        (0x03d9, 0x03d9),
        (0x03da, 0x03da),
        (0x03db, 0x03db),
        (0x03dc, 0x03dc),
        (0x03dd, 0x03dd),
        (0x03de, 0x03de),
        (0x03df, 0x03df),
        (0x03e0, 0x03e0),
        (0x03e1, 0x03e1),
        (0x03e2, 0x03e2),
        (0x03e3, 0x03e3),
        (0x03e4, 0x03e4),
        (0x03e5, 0x03e5),
        (0x03e6, 0x03e6),
        (0x03e7, 0x03e7),
        (0x03e8, 0x03e8),
        (0x03e9, 0x03e9),
        (0x03ea, 0x03ea),
        (0x03eb, 0x03eb),
        (0x03ec, 0x03ec),
        (0x03ed, 0x03ed),
        (0x03ee, 0x03ee),
        (0x03ef, 0x03ef),
        (0x03f0, 0x03f0),
        (0x03f1, 0x03f1),
        (0x03f2, 0x03f2),
        (0x03f3, 0x03f3),
        (0x03f4, 0x03f4),
        (0x03f5, 0x03f5),
        (0x03f6, 0x03f6),
        (0x03f7, 0x03f7),
        (0x03f8, 0x03f8),
        (0x03f9, 0x03f9),
        (0x03fa, 0x03fa),
        (0x03fb, 0x03fb),
        (0x03fc, 0x03fc),
        (0x03fd, 0x03fd),
        (0x03fe, 0x03fe),
        (0x03ff, 0x03ff),
        (0x0400, 0x0400),
        (0x0401, 0x0401),
        (0x0402, 0x0402),
        (0x0403, 0x0403),
        (0x0404, 0x0404),
        (0x0405, 0x0405),
        (0x0406, 0x0406),
        (0x0407, 0x0407),
        (0x0408, 0x0408),
        (0x0409, 0x0409),
        (0x040a, 0x040a),
        (0x040b, 0x040b),
        (0x040c, 0x040c),
        (0x040e, 0x040e),
        (0x040f, 0x040f),
        (0x0410, 0x0410),
        (0x0411, 0x0411),
        (0x0412, 0x0412),
        (0x0413, 0x0413),
        (0x0414, 0x0414),
        (0x0415, 0x0415),
        (0x0416, 0x0416),
        (0x0417, 0x0417),
        (0x0418, 0x0418),
        (0x0419, 0x0419),
        (0x041a, 0x041a),
        (0x041b, 0x041b),
        (0x041c, 0x041c),
        (0x041d, 0x041d),
        (0x041e, 0x041e),
        (0x041f, 0x041f),
        (0x0420, 0x0420),
        (0x0421, 0x0421),
        (0x0422, 0x0422),
        (0x0423, 0x0423),
        (0x0424, 0x0424),
        (0x0425, 0x0425),
        (0x0426, 0x0426),
        (0x0427, 0x0427),
        (0x0428, 0x0428),
        (0x0429, 0x0429),
        (0x042a, 0x042a),
        (0x042b, 0x042b),
        (0x042c, 0x042c),
        (0x042d, 0x042d),
        (0x042e, 0x042e),
        (0x042f, 0x042f),
        (0x0430, 0x0430),
        (0x0431, 0x0431),
        (0x0432, 0x0432),
        (0x0433, 0x0433),
        (0x0434, 0x0434),
        (0x0435, 0x0435),
        (0x0436, 0x0436),
        (0x0437, 0x0437),
        (0x0438, 0x0438),
        (0x0439, 0x0439),
        (0x043a, 0x043a),
        (0x043b, 0x043b),
        (0x043c, 0x043c),
        (0x043d, 0x043d),
        (0x043e, 0x043e),
        (0x043f, 0x043f),
        (0x0440, 0x0440),
        (0x0441, 0x0441),
        (0x0442, 0x0442),
        (0x0443, 0x0443),
        (0x0444, 0x0444),
        (0x0445, 0x0445),
        (0x0446, 0x0446),
        (0x0447, 0x0447),
        (0x0448, 0x0448),
        (0x0449, 0x0449),
        (0x044a, 0x044a),
        (0x044b, 0x044b),
        (0x044c, 0x044c),
        (0x044d, 0x044d),
        (0x044e, 0x044e),
        (0x044f, 0x044f),
        (0x0450, 0x0450),
        (0x0451, 0x0451),
        (0x0452, 0x0452),
        (0x0453, 0x0453),
        (0x0454, 0x0454),
        (0x0455, 0x0455),
        (0x0456, 0x0456),
        (0x0457, 0x0457),
        (0x0458, 0x0458),
        (0x0459, 0x0459),
        (0x045a, 0x045a),
        (0x045b, 0x045b),
        (0x045c, 0x045c),
        (0x045e, 0x045e),
        (0x045f, 0x045f),
        (0x0460, 0x0460),
        (0x0461, 0x0461),
        (0x0462, 0x0462),
        (0x0463, 0x0463),
        (0x0464, 0x0464),
        (0x0465, 0x0465),
        (0x0466, 0x0466),
        (0x0467, 0x0467),
        (0x0468, 0x0468),
        (0x0469, 0x0469),
        (0x046a, 0x046a),
        (0x046b, 0x046b),
        (0x046c, 0x046c),
        (0x046d, 0x046d),
        (0x046e, 0x046e),
        (0x046f, 0x046f),
        (0x0470, 0x0470),
        (0x0471, 0x0471),
        (0x0472, 0x0472),
        (0x0473, 0x0473),
        (0x0474, 0x0474),
        (0x0475, 0x0475),
        (0x0476, 0x0476),
        (0x0477, 0x0477),
        (0x0478, 0x0478),
        (0x0479, 0x0479),
        (0x047a, 0x047a),
        (0x047b, 0x047b),
        (0x047c, 0x047c),
        (0x047d, 0x047d),
        (0x047e, 0x047e),
        (0x047f, 0x047f),
        (0x0480, 0x0480),
        (0x0481, 0x0481),
        (0x0482, 0x0482),
        (0x0483, 0x0483),
        (0x0484, 0x0484),
        (0x0485, 0x0485),
        (0x0486, 0x0486),
        (0x0487, 0x0487),
        (0x0488, 0x0488),
        (0x0489, 0x0489),
        (0x048a, 0x048a),
        (0x048b, 0x048b),
        (0x048c, 0x048c),
        (0x048d, 0x048d),
        (0x048e, 0x048e),
        (0x048f, 0x048f),
        (0x0490, 0x0490),
        (0x0491, 0x0491),
        (0x0492, 0x0492),
        (0x0493, 0x0493),
        (0x0494, 0x0494),
        (0x0495, 0x0495),
        (0x0496, 0x0496),
        (0x0497, 0x0497),
        (0x0498, 0x0498),
        (0x0499, 0x0499),
        (0x049a, 0x049a),
        (0x049b, 0x049b),
        (0x049c, 0x049c),
        (0x049d, 0x049d),
        (0x049e, 0x049e),
        (0x049f, 0x049f),
        (0x04a0, 0x04a0),
        (0x04a1, 0x04a1),
        (0x04a2, 0x04a2),
        (0x04a3, 0x04a3),
        (0x04a4, 0x04a4),
        (0x04a5, 0x04a5),
        (0x04a6, 0x04a6),
        (0x04a7, 0x04a7),
        (0x04a8, 0x04a8),
        (0x04a9, 0x04a9),
        (0x04aa, 0x04aa),
        (0x04ab, 0x04ab),
        (0x04ac, 0x04ac),
        (0x04ad, 0x04ad),
        (0x04ae, 0x04ae),
        (0x04af, 0x04af),
        (0x04b0, 0x04b0),
        (0x04b1, 0x04b1),
        (0x04b2, 0x04b2),
        (0x04b3, 0x04b3),
        (0x04b4, 0x04b4),
        (0x04b5, 0x04b5),
        (0x04b6, 0x04b6),
        (0x04b7, 0x04b7),
        (0x04b8, 0x04b8),
        (0x04b9, 0x04b9),
        (0x04ba, 0x04ba),
        (0x04bb, 0x04bb),
        (0x04bc, 0x04bc),
        (0x04bd, 0x04bd),
        (0x04be, 0x04be),
        (0x04bf, 0x04bf),
        (0x04c0, 0x04c0),
        (0x04c1, 0x04c1),
        (0x04c2, 0x04c2),
        (0x04c3, 0x04c3),
        (0x04c4, 0x04c4),
        (0x04c5, 0x04c5),
        (0x04c6, 0x04c6),
        (0x04c7, 0x04c7),
        (0x04c8, 0x04c8),
        (0x04c9, 0x04c9),
        (0x04ca, 0x04ca),
        (0x04cb, 0x04cb),
        (0x04cc, 0x04cc),
        (0x04cd, 0x04cd),
        (0x04ce, 0x04ce),
        (0x04cf, 0x04cf),
        (0x04d0, 0x04d0),
        (0x04d1, 0x04d1),
        (0x04d2, 0x04d2),
        (0x04d3, 0x04d3),
        (0x04d4, 0x04d4),
        (0x04d5, 0x04d5),
        (0x04d6, 0x04d6),
        (0x04d7, 0x04d7),
        (0x04d8, 0x04d8),
        (0x04d9, 0x04d9),
        (0x04da, 0x04da),
        (0x04db, 0x04db),
        (0x04dc, 0x04dc),
        (0x04dd, 0x04dd),
        (0x04de, 0x04de),
        (0x04df, 0x04df),
        (0x04e0, 0x04e0),
        (0x04e1, 0x04e1),
        (0x04e2, 0x04e2),
        (0x04e3, 0x04e3),
        (0x04e4, 0x04e4),
        (0x04e5, 0x04e5),
        (0x04e6, 0x04e6),
        (0x04e7, 0x04e7),
        (0x04e8, 0x04e8),
        (0x04e9, 0x04e9),
        (0x04ea, 0x04ea),
        (0x04eb, 0x04eb),
        (0x04ec, 0x04ec),
        (0x04ed, 0x04ed),
        (0x04ee, 0x04ee),
        (0x04ef, 0x04ef),
        (0x04f0, 0x04f0),
        (0x04f1, 0x04f1),
        (0x04f2, 0x04f2),
        (0x04f3, 0x04f3),
        (0x04f4, 0x04f4),
        (0x04f5, 0x04f5),
        (0x04f6, 0x04f6),
        (0x04f7, 0x04f7),
        (0x04f8, 0x04f8),
        (0x04f9, 0x04f9),
        (0x04fa, 0x04fa),
        (0x04fb, 0x04fb),
        (0x04fc, 0x04fc),
        (0x04fd, 0x04fd),
        (0x04fe, 0x04fe),
        (0x04ff, 0x04ff),
        (0x0500, 0x0500),
        (0x0501, 0x0501),
        (0x0502, 0x0502),
        (0x0503, 0x0503),
        (0x0504, 0x0504),
        (0x0505, 0x0505),
        (0x0506, 0x0506),
        (0x0507, 0x0507),
        (0x0508, 0x0508),
        (0x0509, 0x0509),
        (0x050a, 0x050a),
        (0x050b, 0x050b),
        (0x050c, 0x050c),
        (0x050d, 0x050d),
        (0x050e, 0x050e),
        (0x050f, 0x050f),
        (0x0510, 0x0510),
        (0x0511, 0x0511),
        (0x0512, 0x0512),
        (0x0513, 0x0513),
        (0x0514, 0x0514),
        (0x0515, 0x0515),
        (0x0516, 0x0516),
        (0x0517, 0x0517),
        (0x0518, 0x0518),
        (0x0519, 0x0519),
        (0x051a, 0x051a),
        (0x051b, 0x051b),
        (0x051c, 0x051c),
        (0x051d, 0x051d),
        (0x051e, 0x051e),
        (0x051f, 0x051f),
        (0x0520, 0x0520),
        (0x0521, 0x0521),
        (0x0522, 0x0522),
        (0x0523, 0x0523),
        (0x0524, 0x0524),
        (0x0525, 0x0525),
        (0x0526, 0x0526),
        (0x0527, 0x0527),
        (0x0528, 0x0528),
        (0x0529, 0x0529),
        (0x052a, 0x052a),
        (0x052b, 0x052b),
        (0x052c, 0x052c),
        (0x052d, 0x052d),
        (0x052e, 0x052e),
        (0x052f, 0x052f),
        (0x0531, 0x0531),
        (0x0532, 0x0532),
        (0x0533, 0x0533),
        (0x0534, 0x0534),
        (0x0535, 0x0535),
        (0x0536, 0x0536),
        (0x0537, 0x0537),
        (0x0538, 0x0538),
        (0x0539, 0x0539),
        (0x053a, 0x053a),
        (0x053b, 0x053b),
        (0x053c, 0x053c),
        (0x053d, 0x053d),
        (0x053e, 0x053e),
        (0x053f, 0x053f),
        (0x0540, 0x0540),
        (0x0541, 0x0541),
        (0x0542, 0x0542),
        (0x0543, 0x0543),
        (0x0544, 0x0544),
        (0x0545, 0x0545),
        (0x0546, 0x0546),
        (0x0547, 0x0547),
        (0x0548, 0x0548),
        (0x0549, 0x0549),
        (0x054a, 0x054a),
        (0x054b, 0x054b),
        (0x054c, 0x054c),
        (0x054d, 0x054d),
        (0x054e, 0x054e),
        (0x054f, 0x054f),
        (0x0550, 0x0550),
        (0x0551, 0x0551),
        (0x0552, 0x0552),
        (0x0553, 0x0553),
        (0x0554, 0x0554),
        (0x0555, 0x0555),
        (0x0556, 0x0556),
        (0x0559, 0x0559),
        (0x0561, 0x0561),
        (0x0562, 0x0562),
        (0x0563, 0x0563),
        (0x0564, 0x0564),
        (0x0565, 0x0565),
        (0x0566, 0x0566),
        (0x0567, 0x0567),
        